%pure-parser
%name-prefix="SxJSONParser_"
%locations
%defines
%error-verbose
%parse-param { SxJSONParser* parserPtr }
%lex-param { void *scannerPtr }

%{
#  define YYDEBUG 1
#  include <SxMacroLib.h>
#  include <inttypes.h>
#  include <SxString.h>
#  include <SxGProps.h>
class SxJSONParser;
#  include <SxJSONParser.tab.hpp>
#  define SXPARSER_TYPE SxJSONParser
#  include <SxJSONParser.h>
#  define ast parserPtr

typedef SxJSONParser::ElemType ElemType;

%}

// --- type of yylval
%union {
   int64_t   intVal;
   bool      boolVal;
   double    realVal;
   SxString *strPtr;
   SxGProps *nPtr;
};

// --- return types of expressions
%type <nPtr> main object members member
             array elements element value push pop

// --- error recovery destructors
%destructor { delete $$; } TK_STRING

// --- tokens
%token <intVal>    TK_INTEGER
%token <realVal>   TK_REAL
%token <boolVal>   TK_BOOL
%token <void>      TK_NULL
%token <strPtr>    TK_STRING
%token <void>      TK_GRPDOC_BEGIN
%token <strPtr>    TK_GRPDOC_END

// --- traces
%printer { fprintf (yyoutput, "TK_STRING, val='%s'", $$->getElems()); } TK_STRING;
%printer { fprintf (yyoutput, "TK_INTEGER, val=%" PRId64, $$); } TK_INTEGER;
%printer { fprintf (yyoutput, "TK_REAL, val='%f'", $$); } TK_REAL;
%printer { fprintf (yyoutput, "TK_BOOL, val='%d'", $$); } TK_BOOL;
%printer { fprintf (yyoutput, "TK_NULL"); } TK_NULL;
%printer { fprintf (yyoutput, "TK_GRPDOC_BEGIN"); } TK_GRPDOC_BEGIN;
%printer { fprintf (yyoutput, "TK_GRPDOC_END"); } TK_GRPDOC_END;

%printer { fprintf (yyoutput, "main"); } main;
%printer { fprintf (yyoutput, "object"); } object;
%printer { fprintf (yyoutput, "members"); } members;
%printer { fprintf (yyoutput, "member"); } member;
%printer { fprintf (yyoutput, "array"); } array;
%printer { fprintf (yyoutput, "elements"); } elements;
%printer { fprintf (yyoutput, "element"); } element;
%printer { fprintf (yyoutput, "value"); } value;
%%

main :         object {
                  SX_DBG_YACC ("main#1");
                  $$->setProperty (".key", ".root node");
               }
               | array {
                  SX_DBG_YACC ("main#2");
                  $$->setProperty (".key", ".root node");
               }
               ;

object  :      push '{''}' pop {
                  SX_DBG_YACC ("object#1");
                  $$ = $1;
                  $$->setProperty (".key", "");
                  $$->getProperty (".val").setTag (SXTAG_YACC(@2,@3));
               }
               | TK_GRPDOC_BEGIN TK_GRPDOC_END push '{''}' pop {
                  SX_DBG_YACC ("object#2");
                  $$ = $3;
                  $$->setProperty (".key", "");
                  $$->getProperty (".val").setTag (SXTAG_YACC(@4,@5));
                  $$->setProperty (".docTxt", *$2);
                  $$->getProperty (".docTxt").setTag (SXTAG_YACC(@1, @2));
                  delete $2;
               }
               | push '{' members '}' pop {
                  SX_DBG_YACC ("object#3");
                  $$ = $3;
                  $$->setProperty (".key", "");
                  $$->getProperty (".val").setTag (SXTAG_YACC(@2,@4));
               }
               | TK_GRPDOC_BEGIN TK_GRPDOC_END push '{' members '}' pop {
                  SX_DBG_YACC ("object#4");
                  $$ = $5;
                  $$->setProperty (".key", "");
                  $$->getProperty (".val").setTag (SXTAG_YACC(@4,@6));
                  $$->setProperty (".docTxt", *$2);
                  $$->getProperty (".docTxt").setTag (SXTAG_YACC(@1, @2));
                  delete $2;
               }
               ;

members :      member {
                  SX_DBG_YACC ("members#1: " << $1);
                  $$ = parserPtr->peek ();
                  ast->addEdge ($$, $1);
               }
               | members ',' member {
                  SX_DBG_YACC ("members#2: " << $1 << "-" << $3);
                  $$ = parserPtr->peek ();
                  ast->addEdge ($$, $3);
               }
               ;

member  :      TK_GRPDOC_BEGIN TK_GRPDOC_END TK_STRING ':' element {
                  SX_DBG_YACC ("member#1");
                  $$ = $5;
                  $$->setProperty (".key", *$3);
                  $$->getProperty (".key").setTag (SXTAG_YACC(@3));
                  $$->setProperty (".docTxt", *$2);
                  $$->getProperty (".docTxt").setTag (SXTAG_YACC(@1, @2));
                  delete $2;
                  delete $3;
               }
               | TK_STRING ':' element {
                  SX_DBG_YACC ("member#2");
                  $$ = $3;
                  $$->setProperty (".key", *$1);
                  $$->getProperty (".key").setTag (SXTAG_YACC(@1));
                  $$->setProperty (".docTxt", "");
                  delete $1;
               }
               ;

array:         push '[' ']' pop {
                  SX_DBG_YACC ("array#1");
                  $$ = $1;
                  $$->setProperty (".key", "");
                  SxVariant v;
                  v.setType ((int)SxVariantType::List);
                  $$->setProperty (".val", v);
                  $$->setProperty (".type", (int)ElemType::List);
                  $$->getProperty (".val").setTag (SXTAG_YACC(@2,@3));
               }
               | TK_GRPDOC_BEGIN TK_GRPDOC_END push '[' ']' pop {
                  SX_DBG_YACC ("array#2");
                  $$ = $3;
                  $$->setProperty (".key", "");
                  SxVariant v;
                  v.setType ((int)SxVariantType::List);
                  $$->setProperty (".val", v);
                  $$->setProperty (".type", (int)ElemType::List);
                  $$->getProperty (".val").setTag (SXTAG_YACC(@4,@5));
                  $$->setProperty (".docTxt", *$2);
                  $$->getProperty (".docTxt").setTag (SXTAG_YACC(@1, @2));
                  delete $2;
               }
               | push '[' elements ']' pop {
                  SX_DBG_YACC ("array#3");
                  $$ = $1;
                  $$->setProperty (".key", "");
                  SxVariant v;
                  v.setType ((int)SxVariantType::List);
                  $$->setProperty (".val", v);
                  $$->setProperty (".type", (int)ElemType::List);
                  $$->getProperty (".val").setTag (SXTAG_YACC(@2,@4));
               }
               | TK_GRPDOC_BEGIN TK_GRPDOC_END push '[' elements ']' pop {
                  SX_DBG_YACC ("array#4");
                  $$ = $3;
                  $$->setProperty (".key", "");
                  SxVariant v;
                  v.setType ((int)SxVariantType::List);
                  $$->setProperty (".val", v);
                  $$->setProperty (".type", (int)ElemType::List);
                  $$->getProperty (".val").setTag (SXTAG_YACC(@4,@6));
                  $$->setProperty (".docTxt", *$2);
                  $$->getProperty (".docTxt").setTag (SXTAG_YACC(@1, @2));
                  delete $2;
               }
               ;

elements :     element {
                  SX_DBG_YACC ("elements#1: " << $1);
                  $$ = parserPtr->peek ();
                  ast->addEdge ($$, $1);
               }
               | elements ',' element {
                  SX_DBG_YACC ("elements#2: " << $1 << "-" << $3);
                  $$ = parserPtr->peek ();
                  ast->addEdge ($$, $3);
               }
               ;

element        : value {
                    SX_DBG_YACC ("element#1");
                    $$ = $1;
                 }
               ;

value          : object {
                    SX_DBG_YACC ("value#1");
                    $$ = $1;
                 }
               | array {
                    SX_DBG_YACC ("value#2");
                    $$ = $1;
                 }
               | TK_STRING {
                    SX_DBG_YACC ("value#3");
                    $$ = ast->addNode (ElemType::String);
                    $$->setProperty (".key", "");
                    $$->setProperty (".val", *$1);
                    $$->getProperty (".val").setTag (SXTAG_YACC(@1));
                    delete $1;
                 }
               | TK_INTEGER {
                    SX_DBG_YACC ("value#4");
                    $$ = ast->addNode (ElemType::Int);
                    $$->setProperty (".key", "");
                    $$->setProperty (".val", $1);
                    $$->getProperty (".val").setTag (SXTAG_YACC(@1));
                 }
               | TK_REAL {
                    SX_DBG_YACC ("value#5");
                    $$ = ast->addNode (ElemType::Double);
                    $$->setProperty (".key", "");
                    $$->setProperty (".val", $1);
                    $$->getProperty (".val").setTag (SXTAG_YACC(@1));
                 }
               | TK_BOOL {
                    SX_DBG_YACC ("value#6");
                    $$ = ast->addNode (ElemType::Bool);
                    $$->setProperty (".key", "");
                    $$->setProperty (".val", $1);
                    $$->getProperty (".val").setTag (SXTAG_YACC(@1));
                 }
               | TK_NULL {
                    SX_DBG_YACC ("value#7");
                    $$ = ast->addNode (ElemType::String);
                    $$->setProperty (".key", "");
                    $$->setProperty (".val", SxString (""));
                    $$->getProperty (".val").setTag (SXTAG_YACC(@1));
                 }
               ;

push           : /* empty */ {
                    $$ = ast->push (ElemType::Group);
                    SX_DBG_MSG ("push: " << $$);
                 }
               ;

pop            : /* empty */ {
                    SX_DBG_MSG ("pop");
                    $$ = parserPtr->pop ();
                 }
               ;

