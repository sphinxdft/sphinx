# Makefile.in generated by automake 1.15.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# ---------------------------------------------------------------------------
#
#      The ab-initio based multiscale library
#
#                  S / P H I / n X
#
#      Copyright:  Max-Planck-Institute for Iron Research
#                  40237 Duesseldorf, Germany
#
#      Contact:    https://sxlib.mpie.de
#      Authors:    see sphinx/AUTHORS
#      License:    see sphinx/LICENSE
#
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
#
#      The ab-initio based multiscale library
#
#                  S / P H I / n X
#
#      Copyright:  Max-Planck-Institute for Iron Research
#                  40237 Duesseldorf, Germany
#
#      Contact:    https://sxlib.mpie.de
#      Authors:    see sphinx/AUTHORS
#      License:    see sphinx/LICENSE
#
# ---------------------------------------------------------------------------
# SXACCELERATE_SRC/system/make.am.filelist
# ----------------------------------------------------------------------------
#
# Requires:
#    NAME   -  e.g. "libsxutil.a"
#    MODE   -  "libOnly"  or  "withWrappers"

# This file has been generated automatically.
# Do not edit it. Instead invoke
#    (g)make filelist
# From the source folder

# ---------------------------------------------------------------------------
#
#      The ab-initio based multiscale library
#
#                  S / P H I / n X
#
#      Copyright:  Max-Planck-Institute for Iron Research
#                  40237 Duesseldorf, Germany
#
#      Contact:    https://sxlib.mpie.de
#      Authors:    see sphinx/AUTHORS
#      License:    see sphinx/LICENSE
#
# ---------------------------------------------------------------------------
# SXDIR/src/system/make.am.components
# ----------------------------------------------------------------------------

# ---------------------------------------------------------------------------
#
#      The ab-initio based multiscale library
#
#                  S / P H I / n X
#
#      Copyright:  Max-Planck-Institute for Iron Research
#                  40237 Duesseldorf, Germany
#
#      Contact:    https://sxlib.mpie.de
#      Authors:    see sphinx/AUTHORS
#      License:    see sphinx/LICENSE
#
# ---------------------------------------------------------------------------
# SXDIR/src/system/make.am.apps
# ----------------------------------------------------------------------------



VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@COND_BUILD_WIN32_TRUE@am__append_1 = -D_EXPORT_$(NAME)
bin_PROGRAMS = sx2aims$(EXEEXT) sx2dx$(EXEEXT) sx2gwst$(EXEEXT) \
	sx2pdb$(EXEEXT) sx2poscar$(EXEEXT) sx2xsf$(EXEEXT) \
	sx2xyz$(EXEEXT) sxaojoin$(EXEEXT) sxaomat$(EXEEXT) \
	sxatomicspin$(EXEEXT) sxb2bspectrum$(EXEEXT) sxbader$(EXEEXT) \
	sxbandaodecomp$(EXEEXT) sxbandinfo$(EXEEXT) sxcalcpot$(EXEEXT) \
	sxcalcquamoloverlap$(EXEEXT) sxcheckinput$(EXEEXT) \
	sxdefectalign$(EXEEXT) sxdefectalign2d$(EXEEXT) \
	sxeffmass$(EXEEXT) sxelnes$(EXEEXT) sxepscontrib$(EXEEXT) \
	sxepscontribpaw$(EXEEXT) sxepsprint$(EXEEXT) \
	sxepsslope$(EXEEXT) sxestimate$(EXEEXT) sxextopt$(EXEEXT) \
	sxfastbs$(EXEEXT) sxfindk$(EXEEXT) sxforces$(EXEEXT) \
	sxgetfermi$(EXEEXT) sxharmpottst$(EXEEXT) sxinterpol$(EXEEXT) \
	sxkpprint$(EXEEXT) sxlocalenergy$(EXEEXT) sxmeshline$(EXEEXT) \
	sxmeshtrace$(EXEEXT) sxmies$(EXEEXT) sxmulliken$(EXEEXT) \
	sxpdos$(EXEEXT) sxpespectrum$(EXEEXT) sxposmatel$(EXEEXT) \
	sxprintocc$(EXEEXT) sxrho2dx$(EXEEXT) sxrhodiff$(EXEEXT) \
	sxrhograd$(EXEEXT) sxrhorep$(EXEEXT) sxrhosplit$(EXEEXT) \
	sxrictst$(EXEEXT) sxsawtooth$(EXEEXT) sxstructcom$(EXEEXT) \
	sxstructdiff$(EXEEXT) sxstructjoin$(EXEEXT) \
	sxstructparam$(EXEEXT) sxstructpatch$(EXEEXT) \
	sxstructprint$(EXEEXT) sxstructrel$(EXEEXT) \
	sxstructrep$(EXEEXT) sxstructrot$(EXEEXT) \
	sxstructshift$(EXEEXT) sxstructsort$(EXEEXT) \
	sxstructsym$(EXEEXT) sxsym$(EXEEXT) sxtdos$(EXEEXT) \
	sxuniqdispl$(EXEEXT) sxwaveh5tosxb$(EXEEXT) sxwavesym$(EXEEXT) \
	sxwavetransfer$(EXEEXT) sxzdos$(EXEEXT)
@COND_BUILD_WIN32_TRUE@am__append_2 = @SXACCELERATE_BUILD@/nonstd/libsxnonstd.la
@COND_BUILD_WIN32_TRUE@am__append_3 = @WIN32FLAGS@
subdir = tools
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps =  \
	$(top_srcdir)/../sxaccelerate/src/system/m4/sxargs.m4 \
	$(top_srcdir)/../sxaccelerate/src/system/m4/sxcompflags.m4 \
	$(top_srcdir)/../sxaccelerate/src/system/m4/sxenv.m4 \
	$(top_srcdir)/../sxaccelerate/src/system/m4/sxnumlibs.m4 \
	$(top_srcdir)/../sxaccelerate/src/system/m4/sxprint.m4 \
	$(top_srcdir)/system/m4/libtool.m4 \
	$(top_srcdir)/system/m4/ltoptions.m4 \
	$(top_srcdir)/system/m4/ltsugar.m4 \
	$(top_srcdir)/system/m4/ltversion.m4 \
	$(top_srcdir)/system/m4/lt~obsolete.m4 \
	$(top_srcdir)/system/m4/sxaccelerate.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(include_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/dummy-config \
	$(top_builddir)/dft/SxDFTConfig.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(scriptsdir)" \
	"$(DESTDIR)$(includedir)"
PROGRAMS = $(bin_PROGRAMS)
am_sx2aims_OBJECTS = sx2aims-Sx2Aims.$(OBJEXT)
sx2aims_OBJECTS = $(am_sx2aims_OBJECTS)
am__DEPENDENCIES_1 = $(SX_DEPLIBS)
sx2aims_DEPENDENCIES = $(am__DEPENDENCIES_1)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
am_sx2dx_OBJECTS = sx2dx-Sx2DX.$(OBJEXT)
sx2dx_OBJECTS = $(am_sx2dx_OBJECTS)
sx2dx_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sx2gwst_OBJECTS = sx2gwst-Sx2gwst.$(OBJEXT)
sx2gwst_OBJECTS = $(am_sx2gwst_OBJECTS)
sx2gwst_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sx2pdb_OBJECTS = sx2pdb-Sx2PDB.$(OBJEXT)
sx2pdb_OBJECTS = $(am_sx2pdb_OBJECTS)
sx2pdb_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sx2poscar_OBJECTS = sx2poscar-Sx2Poscar.$(OBJEXT)
sx2poscar_OBJECTS = $(am_sx2poscar_OBJECTS)
sx2poscar_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sx2xsf_OBJECTS = sx2xsf-Sx2XSF.$(OBJEXT)
sx2xsf_OBJECTS = $(am_sx2xsf_OBJECTS)
sx2xsf_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sx2xyz_OBJECTS = sx2xyz-Sx2XYZ.$(OBJEXT)
sx2xyz_OBJECTS = $(am_sx2xyz_OBJECTS)
sx2xyz_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxaojoin_OBJECTS = sxaojoin-SxAOJoin.$(OBJEXT)
sxaojoin_OBJECTS = $(am_sxaojoin_OBJECTS)
sxaojoin_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxaomat_OBJECTS = sxaomat-SxAOMat.$(OBJEXT)
sxaomat_OBJECTS = $(am_sxaomat_OBJECTS)
sxaomat_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxatomicspin_OBJECTS = sxatomicspin-SxAtomicSpin.$(OBJEXT)
sxatomicspin_OBJECTS = $(am_sxatomicspin_OBJECTS)
sxatomicspin_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxb2bspectrum_OBJECTS = sxb2bspectrum-SxB2BSpectrum.$(OBJEXT)
sxb2bspectrum_OBJECTS = $(am_sxb2bspectrum_OBJECTS)
sxb2bspectrum_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxbader_OBJECTS = sxbader-SxBader.$(OBJEXT)
sxbader_OBJECTS = $(am_sxbader_OBJECTS)
sxbader_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxbandaodecomp_OBJECTS = sxbandaodecomp-SxBandAoDecomp.$(OBJEXT)
sxbandaodecomp_OBJECTS = $(am_sxbandaodecomp_OBJECTS)
sxbandaodecomp_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxbandinfo_OBJECTS = sxbandinfo-SxBandInfo.$(OBJEXT)
sxbandinfo_OBJECTS = $(am_sxbandinfo_OBJECTS)
sxbandinfo_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxcalcpot_OBJECTS = sxcalcpot-SxCalcPot.$(OBJEXT)
sxcalcpot_OBJECTS = $(am_sxcalcpot_OBJECTS)
sxcalcpot_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxcalcquamoloverlap_OBJECTS =  \
	sxcalcquamoloverlap-SxCalcQuamolOverlap.$(OBJEXT)
sxcalcquamoloverlap_OBJECTS = $(am_sxcalcquamoloverlap_OBJECTS)
sxcalcquamoloverlap_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxcheckinput_OBJECTS = sxcheckinput-SxCheckInput.$(OBJEXT)
sxcheckinput_OBJECTS = $(am_sxcheckinput_OBJECTS)
sxcheckinput_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxdefectalign_OBJECTS = sxdefectalign-SxDefectAlign.$(OBJEXT)
sxdefectalign_OBJECTS = $(am_sxdefectalign_OBJECTS)
sxdefectalign_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxdefectalign2d_OBJECTS =  \
	sxdefectalign2d-SxDefectAlign2D.$(OBJEXT)
sxdefectalign2d_OBJECTS = $(am_sxdefectalign2d_OBJECTS)
sxdefectalign2d_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxeffmass_OBJECTS = sxeffmass-SxEffMass.$(OBJEXT)
sxeffmass_OBJECTS = $(am_sxeffmass_OBJECTS)
sxeffmass_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxelnes_OBJECTS = sxelnes-SxELNES.$(OBJEXT)
sxelnes_OBJECTS = $(am_sxelnes_OBJECTS)
sxelnes_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxepscontrib_OBJECTS = sxepscontrib-SxEpsContrib.$(OBJEXT)
sxepscontrib_OBJECTS = $(am_sxepscontrib_OBJECTS)
sxepscontrib_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxepscontribpaw_OBJECTS =  \
	sxepscontribpaw-SxEpsContribPAW.$(OBJEXT)
sxepscontribpaw_OBJECTS = $(am_sxepscontribpaw_OBJECTS)
sxepscontribpaw_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxepsprint_OBJECTS = sxepsprint-SxEpsPrint.$(OBJEXT)
sxepsprint_OBJECTS = $(am_sxepsprint_OBJECTS)
sxepsprint_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxepsslope_OBJECTS = sxepsslope-SxEpsSlope.$(OBJEXT)
sxepsslope_OBJECTS = $(am_sxepsslope_OBJECTS)
sxepsslope_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxestimate_OBJECTS = sxestimate-SxEstimate.$(OBJEXT)
sxestimate_OBJECTS = $(am_sxestimate_OBJECTS)
sxestimate_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxextopt_OBJECTS = sxextopt-SxExtOpt.$(OBJEXT)
sxextopt_OBJECTS = $(am_sxextopt_OBJECTS)
sxextopt_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxfastbs_OBJECTS = sxfastbs-SxFastBS.$(OBJEXT)
sxfastbs_OBJECTS = $(am_sxfastbs_OBJECTS)
sxfastbs_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxfindk_OBJECTS = sxfindk-SxFindK.$(OBJEXT)
sxfindk_OBJECTS = $(am_sxfindk_OBJECTS)
sxfindk_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxforces_OBJECTS = sxforces-SxForces.$(OBJEXT)
sxforces_OBJECTS = $(am_sxforces_OBJECTS)
sxforces_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxgetfermi_OBJECTS = sxgetfermi-SxGetFermi.$(OBJEXT)
sxgetfermi_OBJECTS = $(am_sxgetfermi_OBJECTS)
sxgetfermi_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxharmpottst_OBJECTS = sxharmpottst-SxHarmPotTst.$(OBJEXT)
sxharmpottst_OBJECTS = $(am_sxharmpottst_OBJECTS)
sxharmpottst_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxinterpol_OBJECTS = sxinterpol-SxInterpol.$(OBJEXT)
sxinterpol_OBJECTS = $(am_sxinterpol_OBJECTS)
sxinterpol_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxkpprint_OBJECTS = sxkpprint-SxKPPrint.$(OBJEXT)
sxkpprint_OBJECTS = $(am_sxkpprint_OBJECTS)
sxkpprint_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxlocalenergy_OBJECTS = sxlocalenergy-SxLocalEnergy.$(OBJEXT)
sxlocalenergy_OBJECTS = $(am_sxlocalenergy_OBJECTS)
sxlocalenergy_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxmeshline_OBJECTS = sxmeshline-SxMeshLine.$(OBJEXT)
sxmeshline_OBJECTS = $(am_sxmeshline_OBJECTS)
sxmeshline_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxmeshtrace_OBJECTS = sxmeshtrace-SxMeshTrace.$(OBJEXT)
sxmeshtrace_OBJECTS = $(am_sxmeshtrace_OBJECTS)
sxmeshtrace_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxmies_OBJECTS = sxmies-SxMIES.$(OBJEXT)
sxmies_OBJECTS = $(am_sxmies_OBJECTS)
sxmies_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxmulliken_OBJECTS = sxmulliken-SxMulliken.$(OBJEXT)
sxmulliken_OBJECTS = $(am_sxmulliken_OBJECTS)
sxmulliken_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxpdos_OBJECTS = sxpdos-SxPDOS.$(OBJEXT)
sxpdos_OBJECTS = $(am_sxpdos_OBJECTS)
sxpdos_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxpespectrum_OBJECTS = sxpespectrum-SxPESpectrum.$(OBJEXT)
sxpespectrum_OBJECTS = $(am_sxpespectrum_OBJECTS)
sxpespectrum_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxposmatel_OBJECTS = sxposmatel-SxPosMatEl.$(OBJEXT)
sxposmatel_OBJECTS = $(am_sxposmatel_OBJECTS)
sxposmatel_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxprintocc_OBJECTS = sxprintocc-SxPrintOcc.$(OBJEXT)
sxprintocc_OBJECTS = $(am_sxprintocc_OBJECTS)
sxprintocc_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxrho2dx_OBJECTS = sxrho2dx-SxRho2DX.$(OBJEXT)
sxrho2dx_OBJECTS = $(am_sxrho2dx_OBJECTS)
sxrho2dx_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxrhodiff_OBJECTS = sxrhodiff-SxRhoDiff.$(OBJEXT)
sxrhodiff_OBJECTS = $(am_sxrhodiff_OBJECTS)
sxrhodiff_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxrhograd_OBJECTS = sxrhograd-SxRhoGrad.$(OBJEXT)
sxrhograd_OBJECTS = $(am_sxrhograd_OBJECTS)
sxrhograd_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxrhorep_OBJECTS = sxrhorep-SxRhoRep.$(OBJEXT)
sxrhorep_OBJECTS = $(am_sxrhorep_OBJECTS)
sxrhorep_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxrhosplit_OBJECTS = sxrhosplit-SxRhoSplit.$(OBJEXT)
sxrhosplit_OBJECTS = $(am_sxrhosplit_OBJECTS)
sxrhosplit_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxrictst_OBJECTS = sxrictst-SxRicTst.$(OBJEXT)
sxrictst_OBJECTS = $(am_sxrictst_OBJECTS)
sxrictst_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxsawtooth_OBJECTS = sxsawtooth-SxSawTooth.$(OBJEXT)
sxsawtooth_OBJECTS = $(am_sxsawtooth_OBJECTS)
sxsawtooth_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxstructcom_OBJECTS = sxstructcom-SxStructCOM.$(OBJEXT)
sxstructcom_OBJECTS = $(am_sxstructcom_OBJECTS)
sxstructcom_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxstructdiff_OBJECTS = sxstructdiff-SxStructDiff.$(OBJEXT)
sxstructdiff_OBJECTS = $(am_sxstructdiff_OBJECTS)
sxstructdiff_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxstructjoin_OBJECTS = sxstructjoin-SxStructJoin.$(OBJEXT)
sxstructjoin_OBJECTS = $(am_sxstructjoin_OBJECTS)
sxstructjoin_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxstructparam_OBJECTS = sxstructparam-SxStructParam.$(OBJEXT)
sxstructparam_OBJECTS = $(am_sxstructparam_OBJECTS)
sxstructparam_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxstructpatch_OBJECTS = sxstructpatch-SxStructPatch.$(OBJEXT)
sxstructpatch_OBJECTS = $(am_sxstructpatch_OBJECTS)
sxstructpatch_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxstructprint_OBJECTS = sxstructprint-SxStructPrint.$(OBJEXT)
sxstructprint_OBJECTS = $(am_sxstructprint_OBJECTS)
sxstructprint_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxstructrel_OBJECTS = sxstructrel-SxStructRel.$(OBJEXT)
sxstructrel_OBJECTS = $(am_sxstructrel_OBJECTS)
sxstructrel_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxstructrep_OBJECTS = sxstructrep-SxStructRep.$(OBJEXT)
sxstructrep_OBJECTS = $(am_sxstructrep_OBJECTS)
sxstructrep_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxstructrot_OBJECTS = sxstructrot-SxStructRot.$(OBJEXT)
sxstructrot_OBJECTS = $(am_sxstructrot_OBJECTS)
sxstructrot_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxstructshift_OBJECTS = sxstructshift-SxStructShift.$(OBJEXT)
sxstructshift_OBJECTS = $(am_sxstructshift_OBJECTS)
sxstructshift_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxstructsort_OBJECTS = sxstructsort-SxStructSort.$(OBJEXT)
sxstructsort_OBJECTS = $(am_sxstructsort_OBJECTS)
sxstructsort_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxstructsym_OBJECTS = sxstructsym-SxStructSym.$(OBJEXT)
sxstructsym_OBJECTS = $(am_sxstructsym_OBJECTS)
sxstructsym_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxsym_OBJECTS = sxsym-SxSym.$(OBJEXT)
sxsym_OBJECTS = $(am_sxsym_OBJECTS)
sxsym_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxtdos_OBJECTS = sxtdos-SxTDOS.$(OBJEXT)
sxtdos_OBJECTS = $(am_sxtdos_OBJECTS)
sxtdos_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxuniqdispl_OBJECTS = sxuniqdispl-SxUniqDispl.$(OBJEXT)
sxuniqdispl_OBJECTS = $(am_sxuniqdispl_OBJECTS)
sxuniqdispl_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxwaveh5tosxb_OBJECTS = sxwaveh5tosxb-SxWaveH5ToSxb.$(OBJEXT)
sxwaveh5tosxb_OBJECTS = $(am_sxwaveh5tosxb_OBJECTS)
sxwaveh5tosxb_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxwavesym_OBJECTS = sxwavesym-SxWaveSym.$(OBJEXT)
sxwavesym_OBJECTS = $(am_sxwavesym_OBJECTS)
sxwavesym_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxwavetransfer_OBJECTS = sxwavetransfer-SxWaveTransfer.$(OBJEXT)
sxwavetransfer_OBJECTS = $(am_sxwavetransfer_OBJECTS)
sxwavetransfer_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_sxzdos_OBJECTS = sxzdos-SxZDOS.$(OBJEXT)
sxzdos_OBJECTS = $(am_sxzdos_OBJECTS)
sxzdos_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
SCRIPTS = $(scripts_SCRIPTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir) -I$(top_builddir)/dft
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(sx2aims_SOURCES) $(sx2dx_SOURCES) $(sx2gwst_SOURCES) \
	$(sx2pdb_SOURCES) $(sx2poscar_SOURCES) $(sx2xsf_SOURCES) \
	$(sx2xyz_SOURCES) $(sxaojoin_SOURCES) $(sxaomat_SOURCES) \
	$(sxatomicspin_SOURCES) $(sxb2bspectrum_SOURCES) \
	$(sxbader_SOURCES) $(sxbandaodecomp_SOURCES) \
	$(sxbandinfo_SOURCES) $(sxcalcpot_SOURCES) \
	$(sxcalcquamoloverlap_SOURCES) $(sxcheckinput_SOURCES) \
	$(sxdefectalign_SOURCES) $(sxdefectalign2d_SOURCES) \
	$(sxeffmass_SOURCES) $(sxelnes_SOURCES) \
	$(sxepscontrib_SOURCES) $(sxepscontribpaw_SOURCES) \
	$(sxepsprint_SOURCES) $(sxepsslope_SOURCES) \
	$(sxestimate_SOURCES) $(sxextopt_SOURCES) $(sxfastbs_SOURCES) \
	$(sxfindk_SOURCES) $(sxforces_SOURCES) $(sxgetfermi_SOURCES) \
	$(sxharmpottst_SOURCES) $(sxinterpol_SOURCES) \
	$(sxkpprint_SOURCES) $(sxlocalenergy_SOURCES) \
	$(sxmeshline_SOURCES) $(sxmeshtrace_SOURCES) $(sxmies_SOURCES) \
	$(sxmulliken_SOURCES) $(sxpdos_SOURCES) \
	$(sxpespectrum_SOURCES) $(sxposmatel_SOURCES) \
	$(sxprintocc_SOURCES) $(sxrho2dx_SOURCES) $(sxrhodiff_SOURCES) \
	$(sxrhograd_SOURCES) $(sxrhorep_SOURCES) $(sxrhosplit_SOURCES) \
	$(sxrictst_SOURCES) $(sxsawtooth_SOURCES) \
	$(sxstructcom_SOURCES) $(sxstructdiff_SOURCES) \
	$(sxstructjoin_SOURCES) $(sxstructparam_SOURCES) \
	$(sxstructpatch_SOURCES) $(sxstructprint_SOURCES) \
	$(sxstructrel_SOURCES) $(sxstructrep_SOURCES) \
	$(sxstructrot_SOURCES) $(sxstructshift_SOURCES) \
	$(sxstructsort_SOURCES) $(sxstructsym_SOURCES) \
	$(sxsym_SOURCES) $(sxtdos_SOURCES) $(sxuniqdispl_SOURCES) \
	$(sxwaveh5tosxb_SOURCES) $(sxwavesym_SOURCES) \
	$(sxwavetransfer_SOURCES) $(sxzdos_SOURCES)
DIST_SOURCES = $(sx2aims_SOURCES) $(sx2dx_SOURCES) $(sx2gwst_SOURCES) \
	$(sx2pdb_SOURCES) $(sx2poscar_SOURCES) $(sx2xsf_SOURCES) \
	$(sx2xyz_SOURCES) $(sxaojoin_SOURCES) $(sxaomat_SOURCES) \
	$(sxatomicspin_SOURCES) $(sxb2bspectrum_SOURCES) \
	$(sxbader_SOURCES) $(sxbandaodecomp_SOURCES) \
	$(sxbandinfo_SOURCES) $(sxcalcpot_SOURCES) \
	$(sxcalcquamoloverlap_SOURCES) $(sxcheckinput_SOURCES) \
	$(sxdefectalign_SOURCES) $(sxdefectalign2d_SOURCES) \
	$(sxeffmass_SOURCES) $(sxelnes_SOURCES) \
	$(sxepscontrib_SOURCES) $(sxepscontribpaw_SOURCES) \
	$(sxepsprint_SOURCES) $(sxepsslope_SOURCES) \
	$(sxestimate_SOURCES) $(sxextopt_SOURCES) $(sxfastbs_SOURCES) \
	$(sxfindk_SOURCES) $(sxforces_SOURCES) $(sxgetfermi_SOURCES) \
	$(sxharmpottst_SOURCES) $(sxinterpol_SOURCES) \
	$(sxkpprint_SOURCES) $(sxlocalenergy_SOURCES) \
	$(sxmeshline_SOURCES) $(sxmeshtrace_SOURCES) $(sxmies_SOURCES) \
	$(sxmulliken_SOURCES) $(sxpdos_SOURCES) \
	$(sxpespectrum_SOURCES) $(sxposmatel_SOURCES) \
	$(sxprintocc_SOURCES) $(sxrho2dx_SOURCES) $(sxrhodiff_SOURCES) \
	$(sxrhograd_SOURCES) $(sxrhorep_SOURCES) $(sxrhosplit_SOURCES) \
	$(sxrictst_SOURCES) $(sxsawtooth_SOURCES) \
	$(sxstructcom_SOURCES) $(sxstructdiff_SOURCES) \
	$(sxstructjoin_SOURCES) $(sxstructparam_SOURCES) \
	$(sxstructpatch_SOURCES) $(sxstructprint_SOURCES) \
	$(sxstructrel_SOURCES) $(sxstructrep_SOURCES) \
	$(sxstructrot_SOURCES) $(sxstructshift_SOURCES) \
	$(sxstructsort_SOURCES) $(sxstructsym_SOURCES) \
	$(sxsym_SOURCES) $(sxtdos_SOURCES) $(sxuniqdispl_SOURCES) \
	$(sxwaveh5tosxb_SOURCES) $(sxwavesym_SOURCES) \
	$(sxwavetransfer_SOURCES) $(sxzdos_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(include_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Make-inc.am $(srcdir)/Makefile.in \
	$(top_srcdir)/depcomp $(top_srcdir)/system/make.am.apps \
	$(top_srcdir)/system/make.am.components \
	$(top_srcdir)/system/make.am.filelist
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_CXXFLAGS = @AM_CXXFLAGS@ -Wno-long-long
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CP_A = @CP_A@
CUDA = @CUDA@
CUDA_CFLAGS = @CUDA_CFLAGS@
CUDA_LDFLAGS = @CUDA_LDFLAGS@
CUDA_LIBS = @CUDA_LIBS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CXXLD = @CXXLD@
CXX_M_ARCH = @CXX_M_ARCH@
CXX_PEDANTIC = @CXX_PEDANTIC@
CXX_WARNING_IS_ERROR = @CXX_WARNING_IS_ERROR@
CYGPATH_W = @CYGPATH_W@
DBG_MODE = @DBG_MODE@

# --- avoid automatic definition of -DPACKAGE* as they are redefined
#     by automake in SxConfig.h anyway
#     that's why we overwrite DEFS explicitly.
DEFS = -DLDFLAGS="\"$(AM_LDFLAGS) $(LDFLAGS)\""
DEPDIR = @DEPDIR@
DIST_MAJOR = @DIST_MAJOR@
DIST_MINOR = @DIST_MINOR@
DIST_NAME = @DIST_NAME@
DIST_OS = @DIST_OS@
DIST_PATCH = @DIST_PATCH@
DIST_REPO_VER = @DIST_REPO_VER@
DIST_VERSION = @DIST_VERSION@
DLLLIBEXT = @DLLLIBEXT@
DLLTOOL = @DLLTOOL@
DOXYGEN = @DOXYGEN@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
FIND = @FIND@
GCCERRORLIMIT = @GCCERRORLIMIT@
GDB = @GDB@
GREP = @GREP@
IMPLIBEXT = @IMPLIBEXT@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDD = @LDD@
LDD_AWK_COL = @LDD_AWK_COL@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_CXXFLAGS = @LEX_CXXFLAGS@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBEXT = @LIBEXT@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MACHINE_SPECIFIC = @MACHINE_SPECIFIC@
MAKEINFO = @MAKEINFO@
MAKE_SILENT_ARGS = @MAKE_SILENT_ARGS@
MANIFEST_TOOL = @MANIFEST_TOOL@
MEMTRACER = @MEMTRACER@
MKDIR_P = @MKDIR_P@
MKLPATH = @MKLPATH@
MPICC = @MPICC@
MPICXX = @MPICXX@
NM = @NM@
NMEDIT = @NMEDIT@
NUMLIBS = @NUMLIBS@
NUMLIBS_CHECKS = @NUMLIBS_CHECKS@
NVCC = @NVCC@
OBJCXX = @OBJCXX@
OBJCXXDEPMODE = @OBJCXXDEPMODE@
OBJCXXFLAGS = @OBJCXXFLAGS@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_TYPE = @PKG_TYPE@
PROCESSOR = @PROCESSOR@
PRO_MODE = @PRO_MODE@
RANLIB = @RANLIB@
REPOPROC = @REPOPROC@
RM = @RM@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHARED_VERSION_INFO = @SHARED_VERSION_INFO@
SHELL = @SHELL@
STRIP = @STRIP@
SUBDIRS = @SUBDIRS@
SXACCELERATE = @SXACCELERATE@
SXACCELERATE_BUILD = @SXACCELERATE_BUILD@
SXACCELERATE_SRC = @SXACCELERATE_SRC@
SXBINTARGET = @SXBINTARGET@
SXDIR = @SXDIR@
SXLIBTOOL = @SXLIBTOOL@
SX_BLAS_LIBS = @SX_BLAS_LIBS@
SX_FFT_LIBS = @SX_FFT_LIBS@
SX_NETCDF_LIBS = @SX_NETCDF_LIBS@
SX_PARAM_ACML = @SX_PARAM_ACML@
SX_PARAM_ACMLFFT = @SX_PARAM_ACMLFFT@
SX_PARAM_ATLAS = @SX_PARAM_ATLAS@
SX_PARAM_FFTW = @SX_PARAM_FFTW@
SX_PARAM_MKL = @SX_PARAM_MKL@
SX_PARAM_MKLFFT = @SX_PARAM_MKLFFT@
SX_PARAM_NUMLIBS = @SX_PARAM_NUMLIBS@
SX_PARAM_SXMATH = @SX_PARAM_SXMATH@
SX_SHORTCUT_LIBS = @SX_SHORTCUT_LIBS@
TAIL = @TAIL@
TODAY = @TODAY@
UNAME = @UNAME@
USE_ACML = @USE_ACML@
USE_ACML_FFT = @USE_ACML_FFT@
USE_ATLAS = @USE_ATLAS@
USE_FFTW = @USE_FFTW@
USE_GOTO = @USE_GOTO@
USE_GPU = @USE_GPU@
USE_HDF5 = @USE_HDF5@
USE_INTEL_MKL = @USE_INTEL_MKL@
USE_MKL_FFT = @USE_MKL_FFT@
USE_MPI = @USE_MPI@
USE_NETCDF4 = @USE_NETCDF4@
USE_OPENMP = @USE_OPENMP@
USE_PARALLEL_NETCDF4 = @USE_PARALLEL_NETCDF4@
USE_PCRE2 = @USE_PCRE2@
USE_SXGEMMM = @USE_SXGEMMM@
USE_SX_LOG = @USE_SX_LOG@
VERSION = @VERSION@
WHOAMI = @WHOAMI@
WITH_ADDONS = @WITH_ADDONS@
WITH_DBGDIR = @WITH_DBGDIR@
WITH_EXAMPLES = @WITH_EXAMPLES@
WITH_TESTS = @WITH_TESTS@
WITH_TOOLS = @WITH_TOOLS@
WITH_VIM_SYNTAX = @WITH_VIM_SYNTAX@
YACC = @YACC@
YFLAGS = @YFLAGS@
ZCAT = @ZCAT@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_GDB = @ac_ct_GDB@
ac_ct_MPICC = @ac_ct_MPICC@
ac_ct_MPICXX = @ac_ct_MPICXX@
ac_ct_OBJCXX = @ac_ct_OBJCXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
NAME = "sxtools"
MODE = "withBin"
SX_DEPLIBS = $(SXEXT) $(SXSTRUCT) $(SXDFT) $(SXGEOM) $(SXEXX) \
	$(SXCLASSIC) $(SXDIRAC) $(SXIO) $(SXIPC) $(SXFS) $(SXMATH) \
	$(SXUTIL) $(SXNONSTD) $(SXMPI)
NUM_DEPLIBS = $(FFT) $(BLAS) $(REGEX) $(NETCDFT) $(SHORTCUT)
scriptsdir = $(prefix)/scripts
scripts_SCRIPTS = 

# --- setup proper export/import behavior for shared libs
# done here, since stuff in config header is always from sxbase

# ----------------------------------------------------------------------------
AM_CPPFLAGS = $(am__append_1) -I$(top_builddir)/add-ons \
	-I$(top_srcdir)/add-ons -I$(top_builddir)/struct \
	-I$(top_srcdir)/struct -I$(top_builddir)/dft \
	-I$(top_srcdir)/dft -I$(top_builddir)/geom \
	-I$(top_srcdir)/geom -I$(top_builddir)/exx -I$(top_srcdir)/exx \
	-I$(top_builddir)/classic -I$(top_srcdir)/classic \
	-I$(top_builddir)/dirac -I$(top_srcdir)/dirac \
	-I@SXACCELERATE_SRC@/io -I@SXACCELERATE_BUILD@/io \
	-I@SXACCELERATE_SRC@/ipc -I@SXACCELERATE_SRC@/fs \
	-I@SXACCELERATE_SRC@/math -I@SXACCELERATE_SRC@/util \
	-I@SXACCELERATE_BUILD@/util -I@SXACCELERATE_SRC@/nonstd \
	-I@SXACCELERATE_SRC@/mpi -I@SXACCELERATE_BUILD@/mpi \
	-I$(abs_builddir) -I$(srcdir) @CXX_PEDANTIC@ \
	-I@NUMLIBS@/include $(am__append_3) @CXX_PEDANTIC@ \
	-DSXDATE=`date +%s` -DSXPACKAGE='"@PACKAGE_NAME@"' \
	-DSXRELEASE='"@PACKAGE_VERSION@"' @CXX_PEDANTIC@

# --- define dynamic files to be deleted at "make clean"
tmp_filelists = .files .files.cur MAKE.log

# --- clean up files
CLEANFILES = $(tmp_filelists) $(abs_builddir)/*.tab.cpp \
	$(abs_builddir)/*.tab.hpp $(abs_builddir)/*.yy.cpp \
	$(abs_builddir)/*-x.cpp $(abs_builddir)/*.log $(bin_SCRIPTS)

# --- print dependencies (used to generate MSVC solution files)
getguid = $(top_srcdir)/system/sxmkguid.sh $(subdir) $(abs_srcdir)
include_HEADERS = 
sx2aims_SOURCES = $(AUX_SRC) Sx2Aims.cpp
sx2aims_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sx2aims_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sx2dx_SOURCES = $(AUX_SRC) Sx2DX.cpp
sx2dx_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sx2dx_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sx2gwst_SOURCES = $(AUX_SRC) Sx2gwst.cpp
sx2gwst_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sx2gwst_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sx2pdb_SOURCES = $(AUX_SRC) Sx2PDB.cpp
sx2pdb_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sx2pdb_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sx2poscar_SOURCES = $(AUX_SRC) Sx2Poscar.cpp
sx2poscar_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sx2poscar_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sx2xsf_SOURCES = $(AUX_SRC) Sx2XSF.cpp
sx2xsf_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sx2xsf_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sx2xyz_SOURCES = $(AUX_SRC) Sx2XYZ.cpp
sx2xyz_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sx2xyz_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxaojoin_SOURCES = $(AUX_SRC) SxAOJoin.cpp
sxaojoin_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxaojoin_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxaomat_SOURCES = $(AUX_SRC) SxAOMat.cpp
sxaomat_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxaomat_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxatomicspin_SOURCES = $(AUX_SRC) SxAtomicSpin.cpp
sxatomicspin_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxatomicspin_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxb2bspectrum_SOURCES = $(AUX_SRC) SxB2BSpectrum.cpp
sxb2bspectrum_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxb2bspectrum_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxbader_SOURCES = $(AUX_SRC) SxBader.cpp
sxbader_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxbader_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxbandaodecomp_SOURCES = $(AUX_SRC) SxBandAoDecomp.cpp
sxbandaodecomp_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxbandaodecomp_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxbandinfo_SOURCES = $(AUX_SRC) SxBandInfo.cpp
sxbandinfo_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxbandinfo_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxcalcpot_SOURCES = $(AUX_SRC) SxCalcPot.cpp
sxcalcpot_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxcalcpot_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxcalcquamoloverlap_SOURCES = $(AUX_SRC) SxCalcQuamolOverlap.cpp
sxcalcquamoloverlap_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxcalcquamoloverlap_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ \
	@SX_BLAS_LIBS@ $(SXIMPORTOBJS)
sxcheckinput_SOURCES = $(AUX_SRC) SxCheckInput.cpp
sxcheckinput_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxcheckinput_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxdefectalign_SOURCES = $(AUX_SRC) SxDefectAlign.cpp
sxdefectalign_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxdefectalign_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxdefectalign2d_SOURCES = $(AUX_SRC) SxDefectAlign2D.cpp
sxdefectalign2d_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxdefectalign2d_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxeffmass_SOURCES = $(AUX_SRC) SxEffMass.cpp
sxeffmass_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxeffmass_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxelnes_SOURCES = $(AUX_SRC) SxELNES.cpp
sxelnes_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxelnes_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxepscontrib_SOURCES = $(AUX_SRC) SxEpsContrib.cpp
sxepscontrib_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxepscontrib_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxepscontribpaw_SOURCES = $(AUX_SRC) SxEpsContribPAW.cpp
sxepscontribpaw_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxepscontribpaw_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxepsprint_SOURCES = $(AUX_SRC) SxEpsPrint.cpp
sxepsprint_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxepsprint_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxepsslope_SOURCES = $(AUX_SRC) SxEpsSlope.cpp
sxepsslope_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxepsslope_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxestimate_SOURCES = $(AUX_SRC) SxEstimate.cpp
sxestimate_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxestimate_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxextopt_SOURCES = $(AUX_SRC) SxExtOpt.cpp
sxextopt_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxextopt_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxfastbs_SOURCES = $(AUX_SRC) SxFastBS.cpp
sxfastbs_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxfastbs_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxfindk_SOURCES = $(AUX_SRC) SxFindK.cpp
sxfindk_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxfindk_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxforces_SOURCES = $(AUX_SRC) SxForces.cpp
sxforces_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxforces_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxgetfermi_SOURCES = $(AUX_SRC) SxGetFermi.cpp
sxgetfermi_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxgetfermi_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxharmpottst_SOURCES = $(AUX_SRC) SxHarmPotTst.cpp
sxharmpottst_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxharmpottst_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxinterpol_SOURCES = $(AUX_SRC) SxInterpol.cpp
sxinterpol_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxinterpol_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxkpprint_SOURCES = $(AUX_SRC) SxKPPrint.cpp
sxkpprint_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxkpprint_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxlocalenergy_SOURCES = $(AUX_SRC) SxLocalEnergy.cpp
sxlocalenergy_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxlocalenergy_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxmeshline_SOURCES = $(AUX_SRC) SxMeshLine.cpp
sxmeshline_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxmeshline_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxmeshtrace_SOURCES = $(AUX_SRC) SxMeshTrace.cpp
sxmeshtrace_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxmeshtrace_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxmies_SOURCES = $(AUX_SRC) SxMIES.cpp
sxmies_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxmies_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxmulliken_SOURCES = $(AUX_SRC) SxMulliken.cpp
sxmulliken_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxmulliken_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxpdos_SOURCES = $(AUX_SRC) SxPDOS.cpp
sxpdos_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxpdos_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxpespectrum_SOURCES = $(AUX_SRC) SxPESpectrum.cpp
sxpespectrum_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxpespectrum_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxposmatel_SOURCES = $(AUX_SRC) SxPosMatEl.cpp
sxposmatel_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxposmatel_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS) -lnetcdf
sxprintocc_SOURCES = $(AUX_SRC) SxPrintOcc.cpp
sxprintocc_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxprintocc_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxrho2dx_SOURCES = $(AUX_SRC) SxRho2DX.cpp
sxrho2dx_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxrho2dx_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxrhodiff_SOURCES = $(AUX_SRC) SxRhoDiff.cpp
sxrhodiff_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxrhodiff_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxrhograd_SOURCES = $(AUX_SRC) SxRhoGrad.cpp
sxrhograd_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxrhograd_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxrhorep_SOURCES = $(AUX_SRC) SxRhoRep.cpp
sxrhorep_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxrhorep_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxrhosplit_SOURCES = $(AUX_SRC) SxRhoSplit.cpp
sxrhosplit_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxrhosplit_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxrictst_SOURCES = $(AUX_SRC) SxRicTst.cpp
sxrictst_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxrictst_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxsawtooth_SOURCES = $(AUX_SRC) SxSawTooth.cpp
sxsawtooth_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxsawtooth_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxstructcom_SOURCES = $(AUX_SRC) SxStructCOM.cpp
sxstructcom_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxstructcom_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxstructdiff_SOURCES = $(AUX_SRC) SxStructDiff.cpp
sxstructdiff_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxstructdiff_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxstructjoin_SOURCES = $(AUX_SRC) SxStructJoin.cpp
sxstructjoin_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxstructjoin_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxstructparam_SOURCES = $(AUX_SRC) SxStructParam.cpp
sxstructparam_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxstructparam_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxstructpatch_SOURCES = $(AUX_SRC) SxStructPatch.cpp
sxstructpatch_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxstructpatch_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxstructprint_SOURCES = $(AUX_SRC) SxStructPrint.cpp
sxstructprint_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxstructprint_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxstructrel_SOURCES = $(AUX_SRC) SxStructRel.cpp
sxstructrel_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxstructrel_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxstructrep_SOURCES = $(AUX_SRC) SxStructRep.cpp
sxstructrep_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxstructrep_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxstructrot_SOURCES = $(AUX_SRC) SxStructRot.cpp
sxstructrot_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxstructrot_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxstructshift_SOURCES = $(AUX_SRC) SxStructShift.cpp
sxstructshift_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxstructshift_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxstructsort_SOURCES = $(AUX_SRC) SxStructSort.cpp
sxstructsort_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxstructsort_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxstructsym_SOURCES = $(AUX_SRC) SxStructSym.cpp
sxstructsym_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxstructsym_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxsym_SOURCES = $(AUX_SRC) SxSym.cpp
sxsym_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxsym_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxtdos_SOURCES = $(AUX_SRC) SxTDOS.cpp
sxtdos_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxtdos_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxuniqdispl_SOURCES = $(AUX_SRC) SxUniqDispl.cpp
sxuniqdispl_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxuniqdispl_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxwaveh5tosxb_SOURCES = $(AUX_SRC) SxWaveH5ToSxb.cpp
sxwaveh5tosxb_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxwaveh5tosxb_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxwavesym_SOURCES = $(AUX_SRC) SxWaveSym.cpp
sxwavesym_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxwavesym_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxwavetransfer_SOURCES = $(AUX_SRC) SxWaveTransfer.cpp
sxwavetransfer_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxwavetransfer_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)
sxzdos_SOURCES = $(AUX_SRC) SxZDOS.cpp
sxzdos_CPPFLAGS = $(AM_CPPFLAGS) -DSXLIBTOOL="\"@SXLIBTOOL@\""
sxzdos_LDADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	$(SXIMPORTOBJS)

# --- numlibs
FFT = 
BLAS = 
REGEX = 
NETCDF = 
SHORTCUT = 

# --- S/PHI/nX BaseLibs
SXNONSTD = $(am__append_2)
@COND_BUILD_ACCELERATE_FALSE@SXUTIL = @SXACCELERATE_BUILD@/lib/@SXBINTARGET@/libsxutil.la
@COND_BUILD_ACCELERATE_TRUE@SXUTIL = $(SXACCELERATE_BUILD)/util/libsxutil.la
@COND_BUILD_ACCELERATE_FALSE@SXMATH = @SXACCELERATE_BUILD@/lib/@SXBINTARGET@/libsxmath.la
@COND_BUILD_ACCELERATE_TRUE@SXMATH = $(SXACCELERATE_BUILD)/math/libsxmath.la
@COND_BUILD_ACCELERATE_FALSE@SXFS = @SXACCELERATE_BUILD@/lib/@SXBINTARGET@/libsxfs.la
@COND_BUILD_ACCELERATE_TRUE@SXFS = $(SXACCELERATE_BUILD)/fs/libsxfs.la
@COND_BUILD_ACCELERATE_FALSE@SXIPC = @SXACCELERATE_BUILD@/lib/@SXBINTARGET@/libsxipc.la
@COND_BUILD_ACCELERATE_TRUE@SXIPC = $(SXACCELERATE_BUILD)/ipc/libsxipc.la
@COND_BUILD_ACCELERATE_FALSE@SXIO = @SXACCELERATE_BUILD@/lib/@SXBINTARGET@/libsxio.la
@COND_BUILD_ACCELERATE_TRUE@SXIO = $(SXACCELERATE_BUILD)/io/libsxio.la
@COND_BUILD_ACCELERATE_FALSE@SXMPI = @SXACCELERATE_BUILD@/lib/libsxmpi.la
@COND_BUILD_ACCELERATE_TRUE@SXMPI = $(SXACCELERATE_BUILD)/mpi/libsxmpi.la

# --- S/PHI/nX PhysLibs
SXDIRAC = $(top_builddir)/dirac/libsxdirac.la
SXGEOM = $(top_builddir)/geom/libsxgeom.la
SXDFT = $(top_builddir)/dft/libsxdft.la
SXEXX = $(top_builddir)/exx/libsxexx.la
SXCLASSIC = $(top_builddir)/classic/libsxclassic.la
SXSTRUCT = $(top_builddir)/struct/libsxstruct.la
SXEXT = $(top_builddir)/add-ons/libsxext.la
SXPLAY = $(top_builddir)/playground/libsxplay.la
SXIMPORTLIBS = $(EXT_LIBS) $(SX_DEPLIBS) @LIBS@

# --- save linkage for external usage
#scripts_SCRIPTS += $(top_srcdir)/system/sphinx.$(NAME).opts
#CLEANFILES  += $(top_srcdir)/system/sphinx.$(NAME).opts
#$(top_srcdir)/system/sphinx.$(NAME).opts:
#	@test -f $@ -o x"$(MODE)" = x"withBin" \
#    || echo `echo $(NAME) | tr "[:lower:]" "[:upper:]"`"=\"lib$(NAME).la $(UNIX_NUMLIBS)\"" \
#    > $@

# --- prepare dependencies for UNIX makefiles
UNIX_DEPDIRS = `$(MAKE) @MAKE_SILENT_ARGS@ unixdepdirs | tail -1`
UNIX_NUMLIBS = `$(MAKE) @MAKE_SILENT_ARGS@ unixnumlibs | tail -1`

# --- prepare dependencies for MSVC
MSVC_DEPDIRS = `$(MAKE) @MAKE_SILENT_ARGS@ msvcdepdirs | tail -1`
MSVC_NUMLIBS = `$(MAKE) @MAKE_SILENT_ARGS@ msvcnumlibs | tail -1`
all: all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/system/make.am.filelist $(srcdir)/Make-inc.am $(top_srcdir)/system/make.am.components $(top_srcdir)/system/make.am.apps $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign tools/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign tools/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/system/make.am.filelist $(srcdir)/Make-inc.am $(top_srcdir)/system/make.am.components $(top_srcdir)/system/make.am.apps $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

sx2aims$(EXEEXT): $(sx2aims_OBJECTS) $(sx2aims_DEPENDENCIES) $(EXTRA_sx2aims_DEPENDENCIES) 
	@rm -f sx2aims$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sx2aims_OBJECTS) $(sx2aims_LDADD) $(LIBS)

sx2dx$(EXEEXT): $(sx2dx_OBJECTS) $(sx2dx_DEPENDENCIES) $(EXTRA_sx2dx_DEPENDENCIES) 
	@rm -f sx2dx$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sx2dx_OBJECTS) $(sx2dx_LDADD) $(LIBS)

sx2gwst$(EXEEXT): $(sx2gwst_OBJECTS) $(sx2gwst_DEPENDENCIES) $(EXTRA_sx2gwst_DEPENDENCIES) 
	@rm -f sx2gwst$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sx2gwst_OBJECTS) $(sx2gwst_LDADD) $(LIBS)

sx2pdb$(EXEEXT): $(sx2pdb_OBJECTS) $(sx2pdb_DEPENDENCIES) $(EXTRA_sx2pdb_DEPENDENCIES) 
	@rm -f sx2pdb$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sx2pdb_OBJECTS) $(sx2pdb_LDADD) $(LIBS)

sx2poscar$(EXEEXT): $(sx2poscar_OBJECTS) $(sx2poscar_DEPENDENCIES) $(EXTRA_sx2poscar_DEPENDENCIES) 
	@rm -f sx2poscar$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sx2poscar_OBJECTS) $(sx2poscar_LDADD) $(LIBS)

sx2xsf$(EXEEXT): $(sx2xsf_OBJECTS) $(sx2xsf_DEPENDENCIES) $(EXTRA_sx2xsf_DEPENDENCIES) 
	@rm -f sx2xsf$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sx2xsf_OBJECTS) $(sx2xsf_LDADD) $(LIBS)

sx2xyz$(EXEEXT): $(sx2xyz_OBJECTS) $(sx2xyz_DEPENDENCIES) $(EXTRA_sx2xyz_DEPENDENCIES) 
	@rm -f sx2xyz$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sx2xyz_OBJECTS) $(sx2xyz_LDADD) $(LIBS)

sxaojoin$(EXEEXT): $(sxaojoin_OBJECTS) $(sxaojoin_DEPENDENCIES) $(EXTRA_sxaojoin_DEPENDENCIES) 
	@rm -f sxaojoin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxaojoin_OBJECTS) $(sxaojoin_LDADD) $(LIBS)

sxaomat$(EXEEXT): $(sxaomat_OBJECTS) $(sxaomat_DEPENDENCIES) $(EXTRA_sxaomat_DEPENDENCIES) 
	@rm -f sxaomat$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxaomat_OBJECTS) $(sxaomat_LDADD) $(LIBS)

sxatomicspin$(EXEEXT): $(sxatomicspin_OBJECTS) $(sxatomicspin_DEPENDENCIES) $(EXTRA_sxatomicspin_DEPENDENCIES) 
	@rm -f sxatomicspin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxatomicspin_OBJECTS) $(sxatomicspin_LDADD) $(LIBS)

sxb2bspectrum$(EXEEXT): $(sxb2bspectrum_OBJECTS) $(sxb2bspectrum_DEPENDENCIES) $(EXTRA_sxb2bspectrum_DEPENDENCIES) 
	@rm -f sxb2bspectrum$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxb2bspectrum_OBJECTS) $(sxb2bspectrum_LDADD) $(LIBS)

sxbader$(EXEEXT): $(sxbader_OBJECTS) $(sxbader_DEPENDENCIES) $(EXTRA_sxbader_DEPENDENCIES) 
	@rm -f sxbader$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxbader_OBJECTS) $(sxbader_LDADD) $(LIBS)

sxbandaodecomp$(EXEEXT): $(sxbandaodecomp_OBJECTS) $(sxbandaodecomp_DEPENDENCIES) $(EXTRA_sxbandaodecomp_DEPENDENCIES) 
	@rm -f sxbandaodecomp$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxbandaodecomp_OBJECTS) $(sxbandaodecomp_LDADD) $(LIBS)

sxbandinfo$(EXEEXT): $(sxbandinfo_OBJECTS) $(sxbandinfo_DEPENDENCIES) $(EXTRA_sxbandinfo_DEPENDENCIES) 
	@rm -f sxbandinfo$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxbandinfo_OBJECTS) $(sxbandinfo_LDADD) $(LIBS)

sxcalcpot$(EXEEXT): $(sxcalcpot_OBJECTS) $(sxcalcpot_DEPENDENCIES) $(EXTRA_sxcalcpot_DEPENDENCIES) 
	@rm -f sxcalcpot$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxcalcpot_OBJECTS) $(sxcalcpot_LDADD) $(LIBS)

sxcalcquamoloverlap$(EXEEXT): $(sxcalcquamoloverlap_OBJECTS) $(sxcalcquamoloverlap_DEPENDENCIES) $(EXTRA_sxcalcquamoloverlap_DEPENDENCIES) 
	@rm -f sxcalcquamoloverlap$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxcalcquamoloverlap_OBJECTS) $(sxcalcquamoloverlap_LDADD) $(LIBS)

sxcheckinput$(EXEEXT): $(sxcheckinput_OBJECTS) $(sxcheckinput_DEPENDENCIES) $(EXTRA_sxcheckinput_DEPENDENCIES) 
	@rm -f sxcheckinput$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxcheckinput_OBJECTS) $(sxcheckinput_LDADD) $(LIBS)

sxdefectalign$(EXEEXT): $(sxdefectalign_OBJECTS) $(sxdefectalign_DEPENDENCIES) $(EXTRA_sxdefectalign_DEPENDENCIES) 
	@rm -f sxdefectalign$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxdefectalign_OBJECTS) $(sxdefectalign_LDADD) $(LIBS)

sxdefectalign2d$(EXEEXT): $(sxdefectalign2d_OBJECTS) $(sxdefectalign2d_DEPENDENCIES) $(EXTRA_sxdefectalign2d_DEPENDENCIES) 
	@rm -f sxdefectalign2d$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxdefectalign2d_OBJECTS) $(sxdefectalign2d_LDADD) $(LIBS)

sxeffmass$(EXEEXT): $(sxeffmass_OBJECTS) $(sxeffmass_DEPENDENCIES) $(EXTRA_sxeffmass_DEPENDENCIES) 
	@rm -f sxeffmass$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxeffmass_OBJECTS) $(sxeffmass_LDADD) $(LIBS)

sxelnes$(EXEEXT): $(sxelnes_OBJECTS) $(sxelnes_DEPENDENCIES) $(EXTRA_sxelnes_DEPENDENCIES) 
	@rm -f sxelnes$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxelnes_OBJECTS) $(sxelnes_LDADD) $(LIBS)

sxepscontrib$(EXEEXT): $(sxepscontrib_OBJECTS) $(sxepscontrib_DEPENDENCIES) $(EXTRA_sxepscontrib_DEPENDENCIES) 
	@rm -f sxepscontrib$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxepscontrib_OBJECTS) $(sxepscontrib_LDADD) $(LIBS)

sxepscontribpaw$(EXEEXT): $(sxepscontribpaw_OBJECTS) $(sxepscontribpaw_DEPENDENCIES) $(EXTRA_sxepscontribpaw_DEPENDENCIES) 
	@rm -f sxepscontribpaw$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxepscontribpaw_OBJECTS) $(sxepscontribpaw_LDADD) $(LIBS)

sxepsprint$(EXEEXT): $(sxepsprint_OBJECTS) $(sxepsprint_DEPENDENCIES) $(EXTRA_sxepsprint_DEPENDENCIES) 
	@rm -f sxepsprint$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxepsprint_OBJECTS) $(sxepsprint_LDADD) $(LIBS)

sxepsslope$(EXEEXT): $(sxepsslope_OBJECTS) $(sxepsslope_DEPENDENCIES) $(EXTRA_sxepsslope_DEPENDENCIES) 
	@rm -f sxepsslope$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxepsslope_OBJECTS) $(sxepsslope_LDADD) $(LIBS)

sxestimate$(EXEEXT): $(sxestimate_OBJECTS) $(sxestimate_DEPENDENCIES) $(EXTRA_sxestimate_DEPENDENCIES) 
	@rm -f sxestimate$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxestimate_OBJECTS) $(sxestimate_LDADD) $(LIBS)

sxextopt$(EXEEXT): $(sxextopt_OBJECTS) $(sxextopt_DEPENDENCIES) $(EXTRA_sxextopt_DEPENDENCIES) 
	@rm -f sxextopt$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxextopt_OBJECTS) $(sxextopt_LDADD) $(LIBS)

sxfastbs$(EXEEXT): $(sxfastbs_OBJECTS) $(sxfastbs_DEPENDENCIES) $(EXTRA_sxfastbs_DEPENDENCIES) 
	@rm -f sxfastbs$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxfastbs_OBJECTS) $(sxfastbs_LDADD) $(LIBS)

sxfindk$(EXEEXT): $(sxfindk_OBJECTS) $(sxfindk_DEPENDENCIES) $(EXTRA_sxfindk_DEPENDENCIES) 
	@rm -f sxfindk$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxfindk_OBJECTS) $(sxfindk_LDADD) $(LIBS)

sxforces$(EXEEXT): $(sxforces_OBJECTS) $(sxforces_DEPENDENCIES) $(EXTRA_sxforces_DEPENDENCIES) 
	@rm -f sxforces$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxforces_OBJECTS) $(sxforces_LDADD) $(LIBS)

sxgetfermi$(EXEEXT): $(sxgetfermi_OBJECTS) $(sxgetfermi_DEPENDENCIES) $(EXTRA_sxgetfermi_DEPENDENCIES) 
	@rm -f sxgetfermi$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxgetfermi_OBJECTS) $(sxgetfermi_LDADD) $(LIBS)

sxharmpottst$(EXEEXT): $(sxharmpottst_OBJECTS) $(sxharmpottst_DEPENDENCIES) $(EXTRA_sxharmpottst_DEPENDENCIES) 
	@rm -f sxharmpottst$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxharmpottst_OBJECTS) $(sxharmpottst_LDADD) $(LIBS)

sxinterpol$(EXEEXT): $(sxinterpol_OBJECTS) $(sxinterpol_DEPENDENCIES) $(EXTRA_sxinterpol_DEPENDENCIES) 
	@rm -f sxinterpol$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxinterpol_OBJECTS) $(sxinterpol_LDADD) $(LIBS)

sxkpprint$(EXEEXT): $(sxkpprint_OBJECTS) $(sxkpprint_DEPENDENCIES) $(EXTRA_sxkpprint_DEPENDENCIES) 
	@rm -f sxkpprint$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxkpprint_OBJECTS) $(sxkpprint_LDADD) $(LIBS)

sxlocalenergy$(EXEEXT): $(sxlocalenergy_OBJECTS) $(sxlocalenergy_DEPENDENCIES) $(EXTRA_sxlocalenergy_DEPENDENCIES) 
	@rm -f sxlocalenergy$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxlocalenergy_OBJECTS) $(sxlocalenergy_LDADD) $(LIBS)

sxmeshline$(EXEEXT): $(sxmeshline_OBJECTS) $(sxmeshline_DEPENDENCIES) $(EXTRA_sxmeshline_DEPENDENCIES) 
	@rm -f sxmeshline$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxmeshline_OBJECTS) $(sxmeshline_LDADD) $(LIBS)

sxmeshtrace$(EXEEXT): $(sxmeshtrace_OBJECTS) $(sxmeshtrace_DEPENDENCIES) $(EXTRA_sxmeshtrace_DEPENDENCIES) 
	@rm -f sxmeshtrace$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxmeshtrace_OBJECTS) $(sxmeshtrace_LDADD) $(LIBS)

sxmies$(EXEEXT): $(sxmies_OBJECTS) $(sxmies_DEPENDENCIES) $(EXTRA_sxmies_DEPENDENCIES) 
	@rm -f sxmies$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxmies_OBJECTS) $(sxmies_LDADD) $(LIBS)

sxmulliken$(EXEEXT): $(sxmulliken_OBJECTS) $(sxmulliken_DEPENDENCIES) $(EXTRA_sxmulliken_DEPENDENCIES) 
	@rm -f sxmulliken$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxmulliken_OBJECTS) $(sxmulliken_LDADD) $(LIBS)

sxpdos$(EXEEXT): $(sxpdos_OBJECTS) $(sxpdos_DEPENDENCIES) $(EXTRA_sxpdos_DEPENDENCIES) 
	@rm -f sxpdos$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxpdos_OBJECTS) $(sxpdos_LDADD) $(LIBS)

sxpespectrum$(EXEEXT): $(sxpespectrum_OBJECTS) $(sxpespectrum_DEPENDENCIES) $(EXTRA_sxpespectrum_DEPENDENCIES) 
	@rm -f sxpespectrum$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxpespectrum_OBJECTS) $(sxpespectrum_LDADD) $(LIBS)

sxposmatel$(EXEEXT): $(sxposmatel_OBJECTS) $(sxposmatel_DEPENDENCIES) $(EXTRA_sxposmatel_DEPENDENCIES) 
	@rm -f sxposmatel$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxposmatel_OBJECTS) $(sxposmatel_LDADD) $(LIBS)

sxprintocc$(EXEEXT): $(sxprintocc_OBJECTS) $(sxprintocc_DEPENDENCIES) $(EXTRA_sxprintocc_DEPENDENCIES) 
	@rm -f sxprintocc$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxprintocc_OBJECTS) $(sxprintocc_LDADD) $(LIBS)

sxrho2dx$(EXEEXT): $(sxrho2dx_OBJECTS) $(sxrho2dx_DEPENDENCIES) $(EXTRA_sxrho2dx_DEPENDENCIES) 
	@rm -f sxrho2dx$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxrho2dx_OBJECTS) $(sxrho2dx_LDADD) $(LIBS)

sxrhodiff$(EXEEXT): $(sxrhodiff_OBJECTS) $(sxrhodiff_DEPENDENCIES) $(EXTRA_sxrhodiff_DEPENDENCIES) 
	@rm -f sxrhodiff$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxrhodiff_OBJECTS) $(sxrhodiff_LDADD) $(LIBS)

sxrhograd$(EXEEXT): $(sxrhograd_OBJECTS) $(sxrhograd_DEPENDENCIES) $(EXTRA_sxrhograd_DEPENDENCIES) 
	@rm -f sxrhograd$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxrhograd_OBJECTS) $(sxrhograd_LDADD) $(LIBS)

sxrhorep$(EXEEXT): $(sxrhorep_OBJECTS) $(sxrhorep_DEPENDENCIES) $(EXTRA_sxrhorep_DEPENDENCIES) 
	@rm -f sxrhorep$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxrhorep_OBJECTS) $(sxrhorep_LDADD) $(LIBS)

sxrhosplit$(EXEEXT): $(sxrhosplit_OBJECTS) $(sxrhosplit_DEPENDENCIES) $(EXTRA_sxrhosplit_DEPENDENCIES) 
	@rm -f sxrhosplit$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxrhosplit_OBJECTS) $(sxrhosplit_LDADD) $(LIBS)

sxrictst$(EXEEXT): $(sxrictst_OBJECTS) $(sxrictst_DEPENDENCIES) $(EXTRA_sxrictst_DEPENDENCIES) 
	@rm -f sxrictst$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxrictst_OBJECTS) $(sxrictst_LDADD) $(LIBS)

sxsawtooth$(EXEEXT): $(sxsawtooth_OBJECTS) $(sxsawtooth_DEPENDENCIES) $(EXTRA_sxsawtooth_DEPENDENCIES) 
	@rm -f sxsawtooth$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxsawtooth_OBJECTS) $(sxsawtooth_LDADD) $(LIBS)

sxstructcom$(EXEEXT): $(sxstructcom_OBJECTS) $(sxstructcom_DEPENDENCIES) $(EXTRA_sxstructcom_DEPENDENCIES) 
	@rm -f sxstructcom$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxstructcom_OBJECTS) $(sxstructcom_LDADD) $(LIBS)

sxstructdiff$(EXEEXT): $(sxstructdiff_OBJECTS) $(sxstructdiff_DEPENDENCIES) $(EXTRA_sxstructdiff_DEPENDENCIES) 
	@rm -f sxstructdiff$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxstructdiff_OBJECTS) $(sxstructdiff_LDADD) $(LIBS)

sxstructjoin$(EXEEXT): $(sxstructjoin_OBJECTS) $(sxstructjoin_DEPENDENCIES) $(EXTRA_sxstructjoin_DEPENDENCIES) 
	@rm -f sxstructjoin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxstructjoin_OBJECTS) $(sxstructjoin_LDADD) $(LIBS)

sxstructparam$(EXEEXT): $(sxstructparam_OBJECTS) $(sxstructparam_DEPENDENCIES) $(EXTRA_sxstructparam_DEPENDENCIES) 
	@rm -f sxstructparam$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxstructparam_OBJECTS) $(sxstructparam_LDADD) $(LIBS)

sxstructpatch$(EXEEXT): $(sxstructpatch_OBJECTS) $(sxstructpatch_DEPENDENCIES) $(EXTRA_sxstructpatch_DEPENDENCIES) 
	@rm -f sxstructpatch$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxstructpatch_OBJECTS) $(sxstructpatch_LDADD) $(LIBS)

sxstructprint$(EXEEXT): $(sxstructprint_OBJECTS) $(sxstructprint_DEPENDENCIES) $(EXTRA_sxstructprint_DEPENDENCIES) 
	@rm -f sxstructprint$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxstructprint_OBJECTS) $(sxstructprint_LDADD) $(LIBS)

sxstructrel$(EXEEXT): $(sxstructrel_OBJECTS) $(sxstructrel_DEPENDENCIES) $(EXTRA_sxstructrel_DEPENDENCIES) 
	@rm -f sxstructrel$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxstructrel_OBJECTS) $(sxstructrel_LDADD) $(LIBS)

sxstructrep$(EXEEXT): $(sxstructrep_OBJECTS) $(sxstructrep_DEPENDENCIES) $(EXTRA_sxstructrep_DEPENDENCIES) 
	@rm -f sxstructrep$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxstructrep_OBJECTS) $(sxstructrep_LDADD) $(LIBS)

sxstructrot$(EXEEXT): $(sxstructrot_OBJECTS) $(sxstructrot_DEPENDENCIES) $(EXTRA_sxstructrot_DEPENDENCIES) 
	@rm -f sxstructrot$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxstructrot_OBJECTS) $(sxstructrot_LDADD) $(LIBS)

sxstructshift$(EXEEXT): $(sxstructshift_OBJECTS) $(sxstructshift_DEPENDENCIES) $(EXTRA_sxstructshift_DEPENDENCIES) 
	@rm -f sxstructshift$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxstructshift_OBJECTS) $(sxstructshift_LDADD) $(LIBS)

sxstructsort$(EXEEXT): $(sxstructsort_OBJECTS) $(sxstructsort_DEPENDENCIES) $(EXTRA_sxstructsort_DEPENDENCIES) 
	@rm -f sxstructsort$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxstructsort_OBJECTS) $(sxstructsort_LDADD) $(LIBS)

sxstructsym$(EXEEXT): $(sxstructsym_OBJECTS) $(sxstructsym_DEPENDENCIES) $(EXTRA_sxstructsym_DEPENDENCIES) 
	@rm -f sxstructsym$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxstructsym_OBJECTS) $(sxstructsym_LDADD) $(LIBS)

sxsym$(EXEEXT): $(sxsym_OBJECTS) $(sxsym_DEPENDENCIES) $(EXTRA_sxsym_DEPENDENCIES) 
	@rm -f sxsym$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxsym_OBJECTS) $(sxsym_LDADD) $(LIBS)

sxtdos$(EXEEXT): $(sxtdos_OBJECTS) $(sxtdos_DEPENDENCIES) $(EXTRA_sxtdos_DEPENDENCIES) 
	@rm -f sxtdos$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxtdos_OBJECTS) $(sxtdos_LDADD) $(LIBS)

sxuniqdispl$(EXEEXT): $(sxuniqdispl_OBJECTS) $(sxuniqdispl_DEPENDENCIES) $(EXTRA_sxuniqdispl_DEPENDENCIES) 
	@rm -f sxuniqdispl$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxuniqdispl_OBJECTS) $(sxuniqdispl_LDADD) $(LIBS)

sxwaveh5tosxb$(EXEEXT): $(sxwaveh5tosxb_OBJECTS) $(sxwaveh5tosxb_DEPENDENCIES) $(EXTRA_sxwaveh5tosxb_DEPENDENCIES) 
	@rm -f sxwaveh5tosxb$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxwaveh5tosxb_OBJECTS) $(sxwaveh5tosxb_LDADD) $(LIBS)

sxwavesym$(EXEEXT): $(sxwavesym_OBJECTS) $(sxwavesym_DEPENDENCIES) $(EXTRA_sxwavesym_DEPENDENCIES) 
	@rm -f sxwavesym$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxwavesym_OBJECTS) $(sxwavesym_LDADD) $(LIBS)

sxwavetransfer$(EXEEXT): $(sxwavetransfer_OBJECTS) $(sxwavetransfer_DEPENDENCIES) $(EXTRA_sxwavetransfer_DEPENDENCIES) 
	@rm -f sxwavetransfer$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxwavetransfer_OBJECTS) $(sxwavetransfer_LDADD) $(LIBS)

sxzdos$(EXEEXT): $(sxzdos_OBJECTS) $(sxzdos_DEPENDENCIES) $(EXTRA_sxzdos_DEPENDENCIES) 
	@rm -f sxzdos$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxzdos_OBJECTS) $(sxzdos_LDADD) $(LIBS)
install-scriptsSCRIPTS: $(scripts_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(scripts_SCRIPTS)'; test -n "$(scriptsdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(scriptsdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(scriptsdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(scriptsdir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(scriptsdir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-scriptsSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(scripts_SCRIPTS)'; test -n "$(scriptsdir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(scriptsdir)'; $(am__uninstall_files_from_dir)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sx2aims-Sx2Aims.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sx2dx-Sx2DX.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sx2gwst-Sx2gwst.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sx2pdb-Sx2PDB.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sx2poscar-Sx2Poscar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sx2xsf-Sx2XSF.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sx2xyz-Sx2XYZ.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxaojoin-SxAOJoin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxaomat-SxAOMat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxatomicspin-SxAtomicSpin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxb2bspectrum-SxB2BSpectrum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxbader-SxBader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxbandaodecomp-SxBandAoDecomp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxbandinfo-SxBandInfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxcalcpot-SxCalcPot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxcalcquamoloverlap-SxCalcQuamolOverlap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxcheckinput-SxCheckInput.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxdefectalign-SxDefectAlign.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxdefectalign2d-SxDefectAlign2D.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxeffmass-SxEffMass.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxelnes-SxELNES.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxepscontrib-SxEpsContrib.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxepscontribpaw-SxEpsContribPAW.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxepsprint-SxEpsPrint.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxepsslope-SxEpsSlope.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxestimate-SxEstimate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxextopt-SxExtOpt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxfastbs-SxFastBS.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxfindk-SxFindK.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxforces-SxForces.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxgetfermi-SxGetFermi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxharmpottst-SxHarmPotTst.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxinterpol-SxInterpol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxkpprint-SxKPPrint.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxlocalenergy-SxLocalEnergy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxmeshline-SxMeshLine.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxmeshtrace-SxMeshTrace.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxmies-SxMIES.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxmulliken-SxMulliken.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxpdos-SxPDOS.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxpespectrum-SxPESpectrum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxposmatel-SxPosMatEl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxprintocc-SxPrintOcc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxrho2dx-SxRho2DX.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxrhodiff-SxRhoDiff.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxrhograd-SxRhoGrad.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxrhorep-SxRhoRep.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxrhosplit-SxRhoSplit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxrictst-SxRicTst.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxsawtooth-SxSawTooth.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxstructcom-SxStructCOM.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxstructdiff-SxStructDiff.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxstructjoin-SxStructJoin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxstructparam-SxStructParam.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxstructpatch-SxStructPatch.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxstructprint-SxStructPrint.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxstructrel-SxStructRel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxstructrep-SxStructRep.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxstructrot-SxStructRot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxstructshift-SxStructShift.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxstructsort-SxStructSort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxstructsym-SxStructSym.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxsym-SxSym.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxtdos-SxTDOS.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxuniqdispl-SxUniqDispl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxwaveh5tosxb-SxWaveH5ToSxb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxwavesym-SxWaveSym.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxwavetransfer-SxWaveTransfer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxzdos-SxZDOS.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

sx2aims-Sx2Aims.o: Sx2Aims.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sx2aims_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sx2aims-Sx2Aims.o -MD -MP -MF $(DEPDIR)/sx2aims-Sx2Aims.Tpo -c -o sx2aims-Sx2Aims.o `test -f 'Sx2Aims.cpp' || echo '$(srcdir)/'`Sx2Aims.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sx2aims-Sx2Aims.Tpo $(DEPDIR)/sx2aims-Sx2Aims.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Sx2Aims.cpp' object='sx2aims-Sx2Aims.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sx2aims_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sx2aims-Sx2Aims.o `test -f 'Sx2Aims.cpp' || echo '$(srcdir)/'`Sx2Aims.cpp

sx2aims-Sx2Aims.obj: Sx2Aims.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sx2aims_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sx2aims-Sx2Aims.obj -MD -MP -MF $(DEPDIR)/sx2aims-Sx2Aims.Tpo -c -o sx2aims-Sx2Aims.obj `if test -f 'Sx2Aims.cpp'; then $(CYGPATH_W) 'Sx2Aims.cpp'; else $(CYGPATH_W) '$(srcdir)/Sx2Aims.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sx2aims-Sx2Aims.Tpo $(DEPDIR)/sx2aims-Sx2Aims.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Sx2Aims.cpp' object='sx2aims-Sx2Aims.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sx2aims_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sx2aims-Sx2Aims.obj `if test -f 'Sx2Aims.cpp'; then $(CYGPATH_W) 'Sx2Aims.cpp'; else $(CYGPATH_W) '$(srcdir)/Sx2Aims.cpp'; fi`

sx2dx-Sx2DX.o: Sx2DX.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sx2dx_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sx2dx-Sx2DX.o -MD -MP -MF $(DEPDIR)/sx2dx-Sx2DX.Tpo -c -o sx2dx-Sx2DX.o `test -f 'Sx2DX.cpp' || echo '$(srcdir)/'`Sx2DX.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sx2dx-Sx2DX.Tpo $(DEPDIR)/sx2dx-Sx2DX.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Sx2DX.cpp' object='sx2dx-Sx2DX.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sx2dx_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sx2dx-Sx2DX.o `test -f 'Sx2DX.cpp' || echo '$(srcdir)/'`Sx2DX.cpp

sx2dx-Sx2DX.obj: Sx2DX.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sx2dx_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sx2dx-Sx2DX.obj -MD -MP -MF $(DEPDIR)/sx2dx-Sx2DX.Tpo -c -o sx2dx-Sx2DX.obj `if test -f 'Sx2DX.cpp'; then $(CYGPATH_W) 'Sx2DX.cpp'; else $(CYGPATH_W) '$(srcdir)/Sx2DX.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sx2dx-Sx2DX.Tpo $(DEPDIR)/sx2dx-Sx2DX.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Sx2DX.cpp' object='sx2dx-Sx2DX.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sx2dx_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sx2dx-Sx2DX.obj `if test -f 'Sx2DX.cpp'; then $(CYGPATH_W) 'Sx2DX.cpp'; else $(CYGPATH_W) '$(srcdir)/Sx2DX.cpp'; fi`

sx2gwst-Sx2gwst.o: Sx2gwst.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sx2gwst_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sx2gwst-Sx2gwst.o -MD -MP -MF $(DEPDIR)/sx2gwst-Sx2gwst.Tpo -c -o sx2gwst-Sx2gwst.o `test -f 'Sx2gwst.cpp' || echo '$(srcdir)/'`Sx2gwst.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sx2gwst-Sx2gwst.Tpo $(DEPDIR)/sx2gwst-Sx2gwst.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Sx2gwst.cpp' object='sx2gwst-Sx2gwst.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sx2gwst_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sx2gwst-Sx2gwst.o `test -f 'Sx2gwst.cpp' || echo '$(srcdir)/'`Sx2gwst.cpp

sx2gwst-Sx2gwst.obj: Sx2gwst.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sx2gwst_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sx2gwst-Sx2gwst.obj -MD -MP -MF $(DEPDIR)/sx2gwst-Sx2gwst.Tpo -c -o sx2gwst-Sx2gwst.obj `if test -f 'Sx2gwst.cpp'; then $(CYGPATH_W) 'Sx2gwst.cpp'; else $(CYGPATH_W) '$(srcdir)/Sx2gwst.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sx2gwst-Sx2gwst.Tpo $(DEPDIR)/sx2gwst-Sx2gwst.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Sx2gwst.cpp' object='sx2gwst-Sx2gwst.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sx2gwst_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sx2gwst-Sx2gwst.obj `if test -f 'Sx2gwst.cpp'; then $(CYGPATH_W) 'Sx2gwst.cpp'; else $(CYGPATH_W) '$(srcdir)/Sx2gwst.cpp'; fi`

sx2pdb-Sx2PDB.o: Sx2PDB.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sx2pdb_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sx2pdb-Sx2PDB.o -MD -MP -MF $(DEPDIR)/sx2pdb-Sx2PDB.Tpo -c -o sx2pdb-Sx2PDB.o `test -f 'Sx2PDB.cpp' || echo '$(srcdir)/'`Sx2PDB.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sx2pdb-Sx2PDB.Tpo $(DEPDIR)/sx2pdb-Sx2PDB.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Sx2PDB.cpp' object='sx2pdb-Sx2PDB.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sx2pdb_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sx2pdb-Sx2PDB.o `test -f 'Sx2PDB.cpp' || echo '$(srcdir)/'`Sx2PDB.cpp

sx2pdb-Sx2PDB.obj: Sx2PDB.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sx2pdb_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sx2pdb-Sx2PDB.obj -MD -MP -MF $(DEPDIR)/sx2pdb-Sx2PDB.Tpo -c -o sx2pdb-Sx2PDB.obj `if test -f 'Sx2PDB.cpp'; then $(CYGPATH_W) 'Sx2PDB.cpp'; else $(CYGPATH_W) '$(srcdir)/Sx2PDB.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sx2pdb-Sx2PDB.Tpo $(DEPDIR)/sx2pdb-Sx2PDB.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Sx2PDB.cpp' object='sx2pdb-Sx2PDB.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sx2pdb_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sx2pdb-Sx2PDB.obj `if test -f 'Sx2PDB.cpp'; then $(CYGPATH_W) 'Sx2PDB.cpp'; else $(CYGPATH_W) '$(srcdir)/Sx2PDB.cpp'; fi`

sx2poscar-Sx2Poscar.o: Sx2Poscar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sx2poscar_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sx2poscar-Sx2Poscar.o -MD -MP -MF $(DEPDIR)/sx2poscar-Sx2Poscar.Tpo -c -o sx2poscar-Sx2Poscar.o `test -f 'Sx2Poscar.cpp' || echo '$(srcdir)/'`Sx2Poscar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sx2poscar-Sx2Poscar.Tpo $(DEPDIR)/sx2poscar-Sx2Poscar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Sx2Poscar.cpp' object='sx2poscar-Sx2Poscar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sx2poscar_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sx2poscar-Sx2Poscar.o `test -f 'Sx2Poscar.cpp' || echo '$(srcdir)/'`Sx2Poscar.cpp

sx2poscar-Sx2Poscar.obj: Sx2Poscar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sx2poscar_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sx2poscar-Sx2Poscar.obj -MD -MP -MF $(DEPDIR)/sx2poscar-Sx2Poscar.Tpo -c -o sx2poscar-Sx2Poscar.obj `if test -f 'Sx2Poscar.cpp'; then $(CYGPATH_W) 'Sx2Poscar.cpp'; else $(CYGPATH_W) '$(srcdir)/Sx2Poscar.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sx2poscar-Sx2Poscar.Tpo $(DEPDIR)/sx2poscar-Sx2Poscar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Sx2Poscar.cpp' object='sx2poscar-Sx2Poscar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sx2poscar_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sx2poscar-Sx2Poscar.obj `if test -f 'Sx2Poscar.cpp'; then $(CYGPATH_W) 'Sx2Poscar.cpp'; else $(CYGPATH_W) '$(srcdir)/Sx2Poscar.cpp'; fi`

sx2xsf-Sx2XSF.o: Sx2XSF.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sx2xsf_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sx2xsf-Sx2XSF.o -MD -MP -MF $(DEPDIR)/sx2xsf-Sx2XSF.Tpo -c -o sx2xsf-Sx2XSF.o `test -f 'Sx2XSF.cpp' || echo '$(srcdir)/'`Sx2XSF.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sx2xsf-Sx2XSF.Tpo $(DEPDIR)/sx2xsf-Sx2XSF.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Sx2XSF.cpp' object='sx2xsf-Sx2XSF.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sx2xsf_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sx2xsf-Sx2XSF.o `test -f 'Sx2XSF.cpp' || echo '$(srcdir)/'`Sx2XSF.cpp

sx2xsf-Sx2XSF.obj: Sx2XSF.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sx2xsf_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sx2xsf-Sx2XSF.obj -MD -MP -MF $(DEPDIR)/sx2xsf-Sx2XSF.Tpo -c -o sx2xsf-Sx2XSF.obj `if test -f 'Sx2XSF.cpp'; then $(CYGPATH_W) 'Sx2XSF.cpp'; else $(CYGPATH_W) '$(srcdir)/Sx2XSF.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sx2xsf-Sx2XSF.Tpo $(DEPDIR)/sx2xsf-Sx2XSF.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Sx2XSF.cpp' object='sx2xsf-Sx2XSF.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sx2xsf_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sx2xsf-Sx2XSF.obj `if test -f 'Sx2XSF.cpp'; then $(CYGPATH_W) 'Sx2XSF.cpp'; else $(CYGPATH_W) '$(srcdir)/Sx2XSF.cpp'; fi`

sx2xyz-Sx2XYZ.o: Sx2XYZ.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sx2xyz_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sx2xyz-Sx2XYZ.o -MD -MP -MF $(DEPDIR)/sx2xyz-Sx2XYZ.Tpo -c -o sx2xyz-Sx2XYZ.o `test -f 'Sx2XYZ.cpp' || echo '$(srcdir)/'`Sx2XYZ.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sx2xyz-Sx2XYZ.Tpo $(DEPDIR)/sx2xyz-Sx2XYZ.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Sx2XYZ.cpp' object='sx2xyz-Sx2XYZ.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sx2xyz_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sx2xyz-Sx2XYZ.o `test -f 'Sx2XYZ.cpp' || echo '$(srcdir)/'`Sx2XYZ.cpp

sx2xyz-Sx2XYZ.obj: Sx2XYZ.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sx2xyz_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sx2xyz-Sx2XYZ.obj -MD -MP -MF $(DEPDIR)/sx2xyz-Sx2XYZ.Tpo -c -o sx2xyz-Sx2XYZ.obj `if test -f 'Sx2XYZ.cpp'; then $(CYGPATH_W) 'Sx2XYZ.cpp'; else $(CYGPATH_W) '$(srcdir)/Sx2XYZ.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sx2xyz-Sx2XYZ.Tpo $(DEPDIR)/sx2xyz-Sx2XYZ.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Sx2XYZ.cpp' object='sx2xyz-Sx2XYZ.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sx2xyz_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sx2xyz-Sx2XYZ.obj `if test -f 'Sx2XYZ.cpp'; then $(CYGPATH_W) 'Sx2XYZ.cpp'; else $(CYGPATH_W) '$(srcdir)/Sx2XYZ.cpp'; fi`

sxaojoin-SxAOJoin.o: SxAOJoin.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxaojoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxaojoin-SxAOJoin.o -MD -MP -MF $(DEPDIR)/sxaojoin-SxAOJoin.Tpo -c -o sxaojoin-SxAOJoin.o `test -f 'SxAOJoin.cpp' || echo '$(srcdir)/'`SxAOJoin.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxaojoin-SxAOJoin.Tpo $(DEPDIR)/sxaojoin-SxAOJoin.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxAOJoin.cpp' object='sxaojoin-SxAOJoin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxaojoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxaojoin-SxAOJoin.o `test -f 'SxAOJoin.cpp' || echo '$(srcdir)/'`SxAOJoin.cpp

sxaojoin-SxAOJoin.obj: SxAOJoin.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxaojoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxaojoin-SxAOJoin.obj -MD -MP -MF $(DEPDIR)/sxaojoin-SxAOJoin.Tpo -c -o sxaojoin-SxAOJoin.obj `if test -f 'SxAOJoin.cpp'; then $(CYGPATH_W) 'SxAOJoin.cpp'; else $(CYGPATH_W) '$(srcdir)/SxAOJoin.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxaojoin-SxAOJoin.Tpo $(DEPDIR)/sxaojoin-SxAOJoin.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxAOJoin.cpp' object='sxaojoin-SxAOJoin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxaojoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxaojoin-SxAOJoin.obj `if test -f 'SxAOJoin.cpp'; then $(CYGPATH_W) 'SxAOJoin.cpp'; else $(CYGPATH_W) '$(srcdir)/SxAOJoin.cpp'; fi`

sxaomat-SxAOMat.o: SxAOMat.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxaomat_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxaomat-SxAOMat.o -MD -MP -MF $(DEPDIR)/sxaomat-SxAOMat.Tpo -c -o sxaomat-SxAOMat.o `test -f 'SxAOMat.cpp' || echo '$(srcdir)/'`SxAOMat.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxaomat-SxAOMat.Tpo $(DEPDIR)/sxaomat-SxAOMat.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxAOMat.cpp' object='sxaomat-SxAOMat.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxaomat_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxaomat-SxAOMat.o `test -f 'SxAOMat.cpp' || echo '$(srcdir)/'`SxAOMat.cpp

sxaomat-SxAOMat.obj: SxAOMat.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxaomat_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxaomat-SxAOMat.obj -MD -MP -MF $(DEPDIR)/sxaomat-SxAOMat.Tpo -c -o sxaomat-SxAOMat.obj `if test -f 'SxAOMat.cpp'; then $(CYGPATH_W) 'SxAOMat.cpp'; else $(CYGPATH_W) '$(srcdir)/SxAOMat.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxaomat-SxAOMat.Tpo $(DEPDIR)/sxaomat-SxAOMat.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxAOMat.cpp' object='sxaomat-SxAOMat.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxaomat_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxaomat-SxAOMat.obj `if test -f 'SxAOMat.cpp'; then $(CYGPATH_W) 'SxAOMat.cpp'; else $(CYGPATH_W) '$(srcdir)/SxAOMat.cpp'; fi`

sxatomicspin-SxAtomicSpin.o: SxAtomicSpin.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxatomicspin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxatomicspin-SxAtomicSpin.o -MD -MP -MF $(DEPDIR)/sxatomicspin-SxAtomicSpin.Tpo -c -o sxatomicspin-SxAtomicSpin.o `test -f 'SxAtomicSpin.cpp' || echo '$(srcdir)/'`SxAtomicSpin.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxatomicspin-SxAtomicSpin.Tpo $(DEPDIR)/sxatomicspin-SxAtomicSpin.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxAtomicSpin.cpp' object='sxatomicspin-SxAtomicSpin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxatomicspin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxatomicspin-SxAtomicSpin.o `test -f 'SxAtomicSpin.cpp' || echo '$(srcdir)/'`SxAtomicSpin.cpp

sxatomicspin-SxAtomicSpin.obj: SxAtomicSpin.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxatomicspin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxatomicspin-SxAtomicSpin.obj -MD -MP -MF $(DEPDIR)/sxatomicspin-SxAtomicSpin.Tpo -c -o sxatomicspin-SxAtomicSpin.obj `if test -f 'SxAtomicSpin.cpp'; then $(CYGPATH_W) 'SxAtomicSpin.cpp'; else $(CYGPATH_W) '$(srcdir)/SxAtomicSpin.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxatomicspin-SxAtomicSpin.Tpo $(DEPDIR)/sxatomicspin-SxAtomicSpin.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxAtomicSpin.cpp' object='sxatomicspin-SxAtomicSpin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxatomicspin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxatomicspin-SxAtomicSpin.obj `if test -f 'SxAtomicSpin.cpp'; then $(CYGPATH_W) 'SxAtomicSpin.cpp'; else $(CYGPATH_W) '$(srcdir)/SxAtomicSpin.cpp'; fi`

sxb2bspectrum-SxB2BSpectrum.o: SxB2BSpectrum.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxb2bspectrum_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxb2bspectrum-SxB2BSpectrum.o -MD -MP -MF $(DEPDIR)/sxb2bspectrum-SxB2BSpectrum.Tpo -c -o sxb2bspectrum-SxB2BSpectrum.o `test -f 'SxB2BSpectrum.cpp' || echo '$(srcdir)/'`SxB2BSpectrum.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxb2bspectrum-SxB2BSpectrum.Tpo $(DEPDIR)/sxb2bspectrum-SxB2BSpectrum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxB2BSpectrum.cpp' object='sxb2bspectrum-SxB2BSpectrum.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxb2bspectrum_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxb2bspectrum-SxB2BSpectrum.o `test -f 'SxB2BSpectrum.cpp' || echo '$(srcdir)/'`SxB2BSpectrum.cpp

sxb2bspectrum-SxB2BSpectrum.obj: SxB2BSpectrum.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxb2bspectrum_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxb2bspectrum-SxB2BSpectrum.obj -MD -MP -MF $(DEPDIR)/sxb2bspectrum-SxB2BSpectrum.Tpo -c -o sxb2bspectrum-SxB2BSpectrum.obj `if test -f 'SxB2BSpectrum.cpp'; then $(CYGPATH_W) 'SxB2BSpectrum.cpp'; else $(CYGPATH_W) '$(srcdir)/SxB2BSpectrum.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxb2bspectrum-SxB2BSpectrum.Tpo $(DEPDIR)/sxb2bspectrum-SxB2BSpectrum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxB2BSpectrum.cpp' object='sxb2bspectrum-SxB2BSpectrum.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxb2bspectrum_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxb2bspectrum-SxB2BSpectrum.obj `if test -f 'SxB2BSpectrum.cpp'; then $(CYGPATH_W) 'SxB2BSpectrum.cpp'; else $(CYGPATH_W) '$(srcdir)/SxB2BSpectrum.cpp'; fi`

sxbader-SxBader.o: SxBader.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxbader_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxbader-SxBader.o -MD -MP -MF $(DEPDIR)/sxbader-SxBader.Tpo -c -o sxbader-SxBader.o `test -f 'SxBader.cpp' || echo '$(srcdir)/'`SxBader.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxbader-SxBader.Tpo $(DEPDIR)/sxbader-SxBader.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxBader.cpp' object='sxbader-SxBader.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxbader_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxbader-SxBader.o `test -f 'SxBader.cpp' || echo '$(srcdir)/'`SxBader.cpp

sxbader-SxBader.obj: SxBader.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxbader_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxbader-SxBader.obj -MD -MP -MF $(DEPDIR)/sxbader-SxBader.Tpo -c -o sxbader-SxBader.obj `if test -f 'SxBader.cpp'; then $(CYGPATH_W) 'SxBader.cpp'; else $(CYGPATH_W) '$(srcdir)/SxBader.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxbader-SxBader.Tpo $(DEPDIR)/sxbader-SxBader.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxBader.cpp' object='sxbader-SxBader.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxbader_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxbader-SxBader.obj `if test -f 'SxBader.cpp'; then $(CYGPATH_W) 'SxBader.cpp'; else $(CYGPATH_W) '$(srcdir)/SxBader.cpp'; fi`

sxbandaodecomp-SxBandAoDecomp.o: SxBandAoDecomp.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxbandaodecomp_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxbandaodecomp-SxBandAoDecomp.o -MD -MP -MF $(DEPDIR)/sxbandaodecomp-SxBandAoDecomp.Tpo -c -o sxbandaodecomp-SxBandAoDecomp.o `test -f 'SxBandAoDecomp.cpp' || echo '$(srcdir)/'`SxBandAoDecomp.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxbandaodecomp-SxBandAoDecomp.Tpo $(DEPDIR)/sxbandaodecomp-SxBandAoDecomp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxBandAoDecomp.cpp' object='sxbandaodecomp-SxBandAoDecomp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxbandaodecomp_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxbandaodecomp-SxBandAoDecomp.o `test -f 'SxBandAoDecomp.cpp' || echo '$(srcdir)/'`SxBandAoDecomp.cpp

sxbandaodecomp-SxBandAoDecomp.obj: SxBandAoDecomp.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxbandaodecomp_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxbandaodecomp-SxBandAoDecomp.obj -MD -MP -MF $(DEPDIR)/sxbandaodecomp-SxBandAoDecomp.Tpo -c -o sxbandaodecomp-SxBandAoDecomp.obj `if test -f 'SxBandAoDecomp.cpp'; then $(CYGPATH_W) 'SxBandAoDecomp.cpp'; else $(CYGPATH_W) '$(srcdir)/SxBandAoDecomp.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxbandaodecomp-SxBandAoDecomp.Tpo $(DEPDIR)/sxbandaodecomp-SxBandAoDecomp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxBandAoDecomp.cpp' object='sxbandaodecomp-SxBandAoDecomp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxbandaodecomp_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxbandaodecomp-SxBandAoDecomp.obj `if test -f 'SxBandAoDecomp.cpp'; then $(CYGPATH_W) 'SxBandAoDecomp.cpp'; else $(CYGPATH_W) '$(srcdir)/SxBandAoDecomp.cpp'; fi`

sxbandinfo-SxBandInfo.o: SxBandInfo.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxbandinfo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxbandinfo-SxBandInfo.o -MD -MP -MF $(DEPDIR)/sxbandinfo-SxBandInfo.Tpo -c -o sxbandinfo-SxBandInfo.o `test -f 'SxBandInfo.cpp' || echo '$(srcdir)/'`SxBandInfo.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxbandinfo-SxBandInfo.Tpo $(DEPDIR)/sxbandinfo-SxBandInfo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxBandInfo.cpp' object='sxbandinfo-SxBandInfo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxbandinfo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxbandinfo-SxBandInfo.o `test -f 'SxBandInfo.cpp' || echo '$(srcdir)/'`SxBandInfo.cpp

sxbandinfo-SxBandInfo.obj: SxBandInfo.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxbandinfo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxbandinfo-SxBandInfo.obj -MD -MP -MF $(DEPDIR)/sxbandinfo-SxBandInfo.Tpo -c -o sxbandinfo-SxBandInfo.obj `if test -f 'SxBandInfo.cpp'; then $(CYGPATH_W) 'SxBandInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/SxBandInfo.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxbandinfo-SxBandInfo.Tpo $(DEPDIR)/sxbandinfo-SxBandInfo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxBandInfo.cpp' object='sxbandinfo-SxBandInfo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxbandinfo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxbandinfo-SxBandInfo.obj `if test -f 'SxBandInfo.cpp'; then $(CYGPATH_W) 'SxBandInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/SxBandInfo.cpp'; fi`

sxcalcpot-SxCalcPot.o: SxCalcPot.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxcalcpot_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxcalcpot-SxCalcPot.o -MD -MP -MF $(DEPDIR)/sxcalcpot-SxCalcPot.Tpo -c -o sxcalcpot-SxCalcPot.o `test -f 'SxCalcPot.cpp' || echo '$(srcdir)/'`SxCalcPot.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxcalcpot-SxCalcPot.Tpo $(DEPDIR)/sxcalcpot-SxCalcPot.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxCalcPot.cpp' object='sxcalcpot-SxCalcPot.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxcalcpot_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxcalcpot-SxCalcPot.o `test -f 'SxCalcPot.cpp' || echo '$(srcdir)/'`SxCalcPot.cpp

sxcalcpot-SxCalcPot.obj: SxCalcPot.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxcalcpot_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxcalcpot-SxCalcPot.obj -MD -MP -MF $(DEPDIR)/sxcalcpot-SxCalcPot.Tpo -c -o sxcalcpot-SxCalcPot.obj `if test -f 'SxCalcPot.cpp'; then $(CYGPATH_W) 'SxCalcPot.cpp'; else $(CYGPATH_W) '$(srcdir)/SxCalcPot.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxcalcpot-SxCalcPot.Tpo $(DEPDIR)/sxcalcpot-SxCalcPot.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxCalcPot.cpp' object='sxcalcpot-SxCalcPot.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxcalcpot_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxcalcpot-SxCalcPot.obj `if test -f 'SxCalcPot.cpp'; then $(CYGPATH_W) 'SxCalcPot.cpp'; else $(CYGPATH_W) '$(srcdir)/SxCalcPot.cpp'; fi`

sxcalcquamoloverlap-SxCalcQuamolOverlap.o: SxCalcQuamolOverlap.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxcalcquamoloverlap_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxcalcquamoloverlap-SxCalcQuamolOverlap.o -MD -MP -MF $(DEPDIR)/sxcalcquamoloverlap-SxCalcQuamolOverlap.Tpo -c -o sxcalcquamoloverlap-SxCalcQuamolOverlap.o `test -f 'SxCalcQuamolOverlap.cpp' || echo '$(srcdir)/'`SxCalcQuamolOverlap.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxcalcquamoloverlap-SxCalcQuamolOverlap.Tpo $(DEPDIR)/sxcalcquamoloverlap-SxCalcQuamolOverlap.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxCalcQuamolOverlap.cpp' object='sxcalcquamoloverlap-SxCalcQuamolOverlap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxcalcquamoloverlap_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxcalcquamoloverlap-SxCalcQuamolOverlap.o `test -f 'SxCalcQuamolOverlap.cpp' || echo '$(srcdir)/'`SxCalcQuamolOverlap.cpp

sxcalcquamoloverlap-SxCalcQuamolOverlap.obj: SxCalcQuamolOverlap.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxcalcquamoloverlap_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxcalcquamoloverlap-SxCalcQuamolOverlap.obj -MD -MP -MF $(DEPDIR)/sxcalcquamoloverlap-SxCalcQuamolOverlap.Tpo -c -o sxcalcquamoloverlap-SxCalcQuamolOverlap.obj `if test -f 'SxCalcQuamolOverlap.cpp'; then $(CYGPATH_W) 'SxCalcQuamolOverlap.cpp'; else $(CYGPATH_W) '$(srcdir)/SxCalcQuamolOverlap.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxcalcquamoloverlap-SxCalcQuamolOverlap.Tpo $(DEPDIR)/sxcalcquamoloverlap-SxCalcQuamolOverlap.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxCalcQuamolOverlap.cpp' object='sxcalcquamoloverlap-SxCalcQuamolOverlap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxcalcquamoloverlap_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxcalcquamoloverlap-SxCalcQuamolOverlap.obj `if test -f 'SxCalcQuamolOverlap.cpp'; then $(CYGPATH_W) 'SxCalcQuamolOverlap.cpp'; else $(CYGPATH_W) '$(srcdir)/SxCalcQuamolOverlap.cpp'; fi`

sxcheckinput-SxCheckInput.o: SxCheckInput.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxcheckinput_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxcheckinput-SxCheckInput.o -MD -MP -MF $(DEPDIR)/sxcheckinput-SxCheckInput.Tpo -c -o sxcheckinput-SxCheckInput.o `test -f 'SxCheckInput.cpp' || echo '$(srcdir)/'`SxCheckInput.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxcheckinput-SxCheckInput.Tpo $(DEPDIR)/sxcheckinput-SxCheckInput.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxCheckInput.cpp' object='sxcheckinput-SxCheckInput.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxcheckinput_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxcheckinput-SxCheckInput.o `test -f 'SxCheckInput.cpp' || echo '$(srcdir)/'`SxCheckInput.cpp

sxcheckinput-SxCheckInput.obj: SxCheckInput.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxcheckinput_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxcheckinput-SxCheckInput.obj -MD -MP -MF $(DEPDIR)/sxcheckinput-SxCheckInput.Tpo -c -o sxcheckinput-SxCheckInput.obj `if test -f 'SxCheckInput.cpp'; then $(CYGPATH_W) 'SxCheckInput.cpp'; else $(CYGPATH_W) '$(srcdir)/SxCheckInput.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxcheckinput-SxCheckInput.Tpo $(DEPDIR)/sxcheckinput-SxCheckInput.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxCheckInput.cpp' object='sxcheckinput-SxCheckInput.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxcheckinput_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxcheckinput-SxCheckInput.obj `if test -f 'SxCheckInput.cpp'; then $(CYGPATH_W) 'SxCheckInput.cpp'; else $(CYGPATH_W) '$(srcdir)/SxCheckInput.cpp'; fi`

sxdefectalign-SxDefectAlign.o: SxDefectAlign.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxdefectalign_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxdefectalign-SxDefectAlign.o -MD -MP -MF $(DEPDIR)/sxdefectalign-SxDefectAlign.Tpo -c -o sxdefectalign-SxDefectAlign.o `test -f 'SxDefectAlign.cpp' || echo '$(srcdir)/'`SxDefectAlign.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxdefectalign-SxDefectAlign.Tpo $(DEPDIR)/sxdefectalign-SxDefectAlign.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxDefectAlign.cpp' object='sxdefectalign-SxDefectAlign.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxdefectalign_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxdefectalign-SxDefectAlign.o `test -f 'SxDefectAlign.cpp' || echo '$(srcdir)/'`SxDefectAlign.cpp

sxdefectalign-SxDefectAlign.obj: SxDefectAlign.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxdefectalign_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxdefectalign-SxDefectAlign.obj -MD -MP -MF $(DEPDIR)/sxdefectalign-SxDefectAlign.Tpo -c -o sxdefectalign-SxDefectAlign.obj `if test -f 'SxDefectAlign.cpp'; then $(CYGPATH_W) 'SxDefectAlign.cpp'; else $(CYGPATH_W) '$(srcdir)/SxDefectAlign.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxdefectalign-SxDefectAlign.Tpo $(DEPDIR)/sxdefectalign-SxDefectAlign.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxDefectAlign.cpp' object='sxdefectalign-SxDefectAlign.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxdefectalign_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxdefectalign-SxDefectAlign.obj `if test -f 'SxDefectAlign.cpp'; then $(CYGPATH_W) 'SxDefectAlign.cpp'; else $(CYGPATH_W) '$(srcdir)/SxDefectAlign.cpp'; fi`

sxdefectalign2d-SxDefectAlign2D.o: SxDefectAlign2D.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxdefectalign2d_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxdefectalign2d-SxDefectAlign2D.o -MD -MP -MF $(DEPDIR)/sxdefectalign2d-SxDefectAlign2D.Tpo -c -o sxdefectalign2d-SxDefectAlign2D.o `test -f 'SxDefectAlign2D.cpp' || echo '$(srcdir)/'`SxDefectAlign2D.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxdefectalign2d-SxDefectAlign2D.Tpo $(DEPDIR)/sxdefectalign2d-SxDefectAlign2D.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxDefectAlign2D.cpp' object='sxdefectalign2d-SxDefectAlign2D.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxdefectalign2d_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxdefectalign2d-SxDefectAlign2D.o `test -f 'SxDefectAlign2D.cpp' || echo '$(srcdir)/'`SxDefectAlign2D.cpp

sxdefectalign2d-SxDefectAlign2D.obj: SxDefectAlign2D.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxdefectalign2d_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxdefectalign2d-SxDefectAlign2D.obj -MD -MP -MF $(DEPDIR)/sxdefectalign2d-SxDefectAlign2D.Tpo -c -o sxdefectalign2d-SxDefectAlign2D.obj `if test -f 'SxDefectAlign2D.cpp'; then $(CYGPATH_W) 'SxDefectAlign2D.cpp'; else $(CYGPATH_W) '$(srcdir)/SxDefectAlign2D.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxdefectalign2d-SxDefectAlign2D.Tpo $(DEPDIR)/sxdefectalign2d-SxDefectAlign2D.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxDefectAlign2D.cpp' object='sxdefectalign2d-SxDefectAlign2D.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxdefectalign2d_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxdefectalign2d-SxDefectAlign2D.obj `if test -f 'SxDefectAlign2D.cpp'; then $(CYGPATH_W) 'SxDefectAlign2D.cpp'; else $(CYGPATH_W) '$(srcdir)/SxDefectAlign2D.cpp'; fi`

sxeffmass-SxEffMass.o: SxEffMass.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxeffmass_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxeffmass-SxEffMass.o -MD -MP -MF $(DEPDIR)/sxeffmass-SxEffMass.Tpo -c -o sxeffmass-SxEffMass.o `test -f 'SxEffMass.cpp' || echo '$(srcdir)/'`SxEffMass.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxeffmass-SxEffMass.Tpo $(DEPDIR)/sxeffmass-SxEffMass.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxEffMass.cpp' object='sxeffmass-SxEffMass.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxeffmass_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxeffmass-SxEffMass.o `test -f 'SxEffMass.cpp' || echo '$(srcdir)/'`SxEffMass.cpp

sxeffmass-SxEffMass.obj: SxEffMass.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxeffmass_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxeffmass-SxEffMass.obj -MD -MP -MF $(DEPDIR)/sxeffmass-SxEffMass.Tpo -c -o sxeffmass-SxEffMass.obj `if test -f 'SxEffMass.cpp'; then $(CYGPATH_W) 'SxEffMass.cpp'; else $(CYGPATH_W) '$(srcdir)/SxEffMass.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxeffmass-SxEffMass.Tpo $(DEPDIR)/sxeffmass-SxEffMass.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxEffMass.cpp' object='sxeffmass-SxEffMass.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxeffmass_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxeffmass-SxEffMass.obj `if test -f 'SxEffMass.cpp'; then $(CYGPATH_W) 'SxEffMass.cpp'; else $(CYGPATH_W) '$(srcdir)/SxEffMass.cpp'; fi`

sxelnes-SxELNES.o: SxELNES.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxelnes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxelnes-SxELNES.o -MD -MP -MF $(DEPDIR)/sxelnes-SxELNES.Tpo -c -o sxelnes-SxELNES.o `test -f 'SxELNES.cpp' || echo '$(srcdir)/'`SxELNES.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxelnes-SxELNES.Tpo $(DEPDIR)/sxelnes-SxELNES.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxELNES.cpp' object='sxelnes-SxELNES.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxelnes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxelnes-SxELNES.o `test -f 'SxELNES.cpp' || echo '$(srcdir)/'`SxELNES.cpp

sxelnes-SxELNES.obj: SxELNES.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxelnes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxelnes-SxELNES.obj -MD -MP -MF $(DEPDIR)/sxelnes-SxELNES.Tpo -c -o sxelnes-SxELNES.obj `if test -f 'SxELNES.cpp'; then $(CYGPATH_W) 'SxELNES.cpp'; else $(CYGPATH_W) '$(srcdir)/SxELNES.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxelnes-SxELNES.Tpo $(DEPDIR)/sxelnes-SxELNES.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxELNES.cpp' object='sxelnes-SxELNES.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxelnes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxelnes-SxELNES.obj `if test -f 'SxELNES.cpp'; then $(CYGPATH_W) 'SxELNES.cpp'; else $(CYGPATH_W) '$(srcdir)/SxELNES.cpp'; fi`

sxepscontrib-SxEpsContrib.o: SxEpsContrib.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxepscontrib_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxepscontrib-SxEpsContrib.o -MD -MP -MF $(DEPDIR)/sxepscontrib-SxEpsContrib.Tpo -c -o sxepscontrib-SxEpsContrib.o `test -f 'SxEpsContrib.cpp' || echo '$(srcdir)/'`SxEpsContrib.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxepscontrib-SxEpsContrib.Tpo $(DEPDIR)/sxepscontrib-SxEpsContrib.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxEpsContrib.cpp' object='sxepscontrib-SxEpsContrib.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxepscontrib_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxepscontrib-SxEpsContrib.o `test -f 'SxEpsContrib.cpp' || echo '$(srcdir)/'`SxEpsContrib.cpp

sxepscontrib-SxEpsContrib.obj: SxEpsContrib.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxepscontrib_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxepscontrib-SxEpsContrib.obj -MD -MP -MF $(DEPDIR)/sxepscontrib-SxEpsContrib.Tpo -c -o sxepscontrib-SxEpsContrib.obj `if test -f 'SxEpsContrib.cpp'; then $(CYGPATH_W) 'SxEpsContrib.cpp'; else $(CYGPATH_W) '$(srcdir)/SxEpsContrib.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxepscontrib-SxEpsContrib.Tpo $(DEPDIR)/sxepscontrib-SxEpsContrib.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxEpsContrib.cpp' object='sxepscontrib-SxEpsContrib.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxepscontrib_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxepscontrib-SxEpsContrib.obj `if test -f 'SxEpsContrib.cpp'; then $(CYGPATH_W) 'SxEpsContrib.cpp'; else $(CYGPATH_W) '$(srcdir)/SxEpsContrib.cpp'; fi`

sxepscontribpaw-SxEpsContribPAW.o: SxEpsContribPAW.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxepscontribpaw_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxepscontribpaw-SxEpsContribPAW.o -MD -MP -MF $(DEPDIR)/sxepscontribpaw-SxEpsContribPAW.Tpo -c -o sxepscontribpaw-SxEpsContribPAW.o `test -f 'SxEpsContribPAW.cpp' || echo '$(srcdir)/'`SxEpsContribPAW.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxepscontribpaw-SxEpsContribPAW.Tpo $(DEPDIR)/sxepscontribpaw-SxEpsContribPAW.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxEpsContribPAW.cpp' object='sxepscontribpaw-SxEpsContribPAW.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxepscontribpaw_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxepscontribpaw-SxEpsContribPAW.o `test -f 'SxEpsContribPAW.cpp' || echo '$(srcdir)/'`SxEpsContribPAW.cpp

sxepscontribpaw-SxEpsContribPAW.obj: SxEpsContribPAW.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxepscontribpaw_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxepscontribpaw-SxEpsContribPAW.obj -MD -MP -MF $(DEPDIR)/sxepscontribpaw-SxEpsContribPAW.Tpo -c -o sxepscontribpaw-SxEpsContribPAW.obj `if test -f 'SxEpsContribPAW.cpp'; then $(CYGPATH_W) 'SxEpsContribPAW.cpp'; else $(CYGPATH_W) '$(srcdir)/SxEpsContribPAW.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxepscontribpaw-SxEpsContribPAW.Tpo $(DEPDIR)/sxepscontribpaw-SxEpsContribPAW.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxEpsContribPAW.cpp' object='sxepscontribpaw-SxEpsContribPAW.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxepscontribpaw_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxepscontribpaw-SxEpsContribPAW.obj `if test -f 'SxEpsContribPAW.cpp'; then $(CYGPATH_W) 'SxEpsContribPAW.cpp'; else $(CYGPATH_W) '$(srcdir)/SxEpsContribPAW.cpp'; fi`

sxepsprint-SxEpsPrint.o: SxEpsPrint.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxepsprint_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxepsprint-SxEpsPrint.o -MD -MP -MF $(DEPDIR)/sxepsprint-SxEpsPrint.Tpo -c -o sxepsprint-SxEpsPrint.o `test -f 'SxEpsPrint.cpp' || echo '$(srcdir)/'`SxEpsPrint.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxepsprint-SxEpsPrint.Tpo $(DEPDIR)/sxepsprint-SxEpsPrint.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxEpsPrint.cpp' object='sxepsprint-SxEpsPrint.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxepsprint_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxepsprint-SxEpsPrint.o `test -f 'SxEpsPrint.cpp' || echo '$(srcdir)/'`SxEpsPrint.cpp

sxepsprint-SxEpsPrint.obj: SxEpsPrint.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxepsprint_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxepsprint-SxEpsPrint.obj -MD -MP -MF $(DEPDIR)/sxepsprint-SxEpsPrint.Tpo -c -o sxepsprint-SxEpsPrint.obj `if test -f 'SxEpsPrint.cpp'; then $(CYGPATH_W) 'SxEpsPrint.cpp'; else $(CYGPATH_W) '$(srcdir)/SxEpsPrint.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxepsprint-SxEpsPrint.Tpo $(DEPDIR)/sxepsprint-SxEpsPrint.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxEpsPrint.cpp' object='sxepsprint-SxEpsPrint.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxepsprint_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxepsprint-SxEpsPrint.obj `if test -f 'SxEpsPrint.cpp'; then $(CYGPATH_W) 'SxEpsPrint.cpp'; else $(CYGPATH_W) '$(srcdir)/SxEpsPrint.cpp'; fi`

sxepsslope-SxEpsSlope.o: SxEpsSlope.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxepsslope_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxepsslope-SxEpsSlope.o -MD -MP -MF $(DEPDIR)/sxepsslope-SxEpsSlope.Tpo -c -o sxepsslope-SxEpsSlope.o `test -f 'SxEpsSlope.cpp' || echo '$(srcdir)/'`SxEpsSlope.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxepsslope-SxEpsSlope.Tpo $(DEPDIR)/sxepsslope-SxEpsSlope.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxEpsSlope.cpp' object='sxepsslope-SxEpsSlope.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxepsslope_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxepsslope-SxEpsSlope.o `test -f 'SxEpsSlope.cpp' || echo '$(srcdir)/'`SxEpsSlope.cpp

sxepsslope-SxEpsSlope.obj: SxEpsSlope.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxepsslope_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxepsslope-SxEpsSlope.obj -MD -MP -MF $(DEPDIR)/sxepsslope-SxEpsSlope.Tpo -c -o sxepsslope-SxEpsSlope.obj `if test -f 'SxEpsSlope.cpp'; then $(CYGPATH_W) 'SxEpsSlope.cpp'; else $(CYGPATH_W) '$(srcdir)/SxEpsSlope.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxepsslope-SxEpsSlope.Tpo $(DEPDIR)/sxepsslope-SxEpsSlope.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxEpsSlope.cpp' object='sxepsslope-SxEpsSlope.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxepsslope_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxepsslope-SxEpsSlope.obj `if test -f 'SxEpsSlope.cpp'; then $(CYGPATH_W) 'SxEpsSlope.cpp'; else $(CYGPATH_W) '$(srcdir)/SxEpsSlope.cpp'; fi`

sxestimate-SxEstimate.o: SxEstimate.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxestimate_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxestimate-SxEstimate.o -MD -MP -MF $(DEPDIR)/sxestimate-SxEstimate.Tpo -c -o sxestimate-SxEstimate.o `test -f 'SxEstimate.cpp' || echo '$(srcdir)/'`SxEstimate.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxestimate-SxEstimate.Tpo $(DEPDIR)/sxestimate-SxEstimate.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxEstimate.cpp' object='sxestimate-SxEstimate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxestimate_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxestimate-SxEstimate.o `test -f 'SxEstimate.cpp' || echo '$(srcdir)/'`SxEstimate.cpp

sxestimate-SxEstimate.obj: SxEstimate.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxestimate_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxestimate-SxEstimate.obj -MD -MP -MF $(DEPDIR)/sxestimate-SxEstimate.Tpo -c -o sxestimate-SxEstimate.obj `if test -f 'SxEstimate.cpp'; then $(CYGPATH_W) 'SxEstimate.cpp'; else $(CYGPATH_W) '$(srcdir)/SxEstimate.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxestimate-SxEstimate.Tpo $(DEPDIR)/sxestimate-SxEstimate.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxEstimate.cpp' object='sxestimate-SxEstimate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxestimate_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxestimate-SxEstimate.obj `if test -f 'SxEstimate.cpp'; then $(CYGPATH_W) 'SxEstimate.cpp'; else $(CYGPATH_W) '$(srcdir)/SxEstimate.cpp'; fi`

sxextopt-SxExtOpt.o: SxExtOpt.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxextopt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxextopt-SxExtOpt.o -MD -MP -MF $(DEPDIR)/sxextopt-SxExtOpt.Tpo -c -o sxextopt-SxExtOpt.o `test -f 'SxExtOpt.cpp' || echo '$(srcdir)/'`SxExtOpt.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxextopt-SxExtOpt.Tpo $(DEPDIR)/sxextopt-SxExtOpt.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxExtOpt.cpp' object='sxextopt-SxExtOpt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxextopt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxextopt-SxExtOpt.o `test -f 'SxExtOpt.cpp' || echo '$(srcdir)/'`SxExtOpt.cpp

sxextopt-SxExtOpt.obj: SxExtOpt.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxextopt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxextopt-SxExtOpt.obj -MD -MP -MF $(DEPDIR)/sxextopt-SxExtOpt.Tpo -c -o sxextopt-SxExtOpt.obj `if test -f 'SxExtOpt.cpp'; then $(CYGPATH_W) 'SxExtOpt.cpp'; else $(CYGPATH_W) '$(srcdir)/SxExtOpt.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxextopt-SxExtOpt.Tpo $(DEPDIR)/sxextopt-SxExtOpt.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxExtOpt.cpp' object='sxextopt-SxExtOpt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxextopt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxextopt-SxExtOpt.obj `if test -f 'SxExtOpt.cpp'; then $(CYGPATH_W) 'SxExtOpt.cpp'; else $(CYGPATH_W) '$(srcdir)/SxExtOpt.cpp'; fi`

sxfastbs-SxFastBS.o: SxFastBS.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxfastbs_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxfastbs-SxFastBS.o -MD -MP -MF $(DEPDIR)/sxfastbs-SxFastBS.Tpo -c -o sxfastbs-SxFastBS.o `test -f 'SxFastBS.cpp' || echo '$(srcdir)/'`SxFastBS.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxfastbs-SxFastBS.Tpo $(DEPDIR)/sxfastbs-SxFastBS.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxFastBS.cpp' object='sxfastbs-SxFastBS.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxfastbs_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxfastbs-SxFastBS.o `test -f 'SxFastBS.cpp' || echo '$(srcdir)/'`SxFastBS.cpp

sxfastbs-SxFastBS.obj: SxFastBS.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxfastbs_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxfastbs-SxFastBS.obj -MD -MP -MF $(DEPDIR)/sxfastbs-SxFastBS.Tpo -c -o sxfastbs-SxFastBS.obj `if test -f 'SxFastBS.cpp'; then $(CYGPATH_W) 'SxFastBS.cpp'; else $(CYGPATH_W) '$(srcdir)/SxFastBS.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxfastbs-SxFastBS.Tpo $(DEPDIR)/sxfastbs-SxFastBS.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxFastBS.cpp' object='sxfastbs-SxFastBS.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxfastbs_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxfastbs-SxFastBS.obj `if test -f 'SxFastBS.cpp'; then $(CYGPATH_W) 'SxFastBS.cpp'; else $(CYGPATH_W) '$(srcdir)/SxFastBS.cpp'; fi`

sxfindk-SxFindK.o: SxFindK.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxfindk_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxfindk-SxFindK.o -MD -MP -MF $(DEPDIR)/sxfindk-SxFindK.Tpo -c -o sxfindk-SxFindK.o `test -f 'SxFindK.cpp' || echo '$(srcdir)/'`SxFindK.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxfindk-SxFindK.Tpo $(DEPDIR)/sxfindk-SxFindK.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxFindK.cpp' object='sxfindk-SxFindK.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxfindk_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxfindk-SxFindK.o `test -f 'SxFindK.cpp' || echo '$(srcdir)/'`SxFindK.cpp

sxfindk-SxFindK.obj: SxFindK.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxfindk_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxfindk-SxFindK.obj -MD -MP -MF $(DEPDIR)/sxfindk-SxFindK.Tpo -c -o sxfindk-SxFindK.obj `if test -f 'SxFindK.cpp'; then $(CYGPATH_W) 'SxFindK.cpp'; else $(CYGPATH_W) '$(srcdir)/SxFindK.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxfindk-SxFindK.Tpo $(DEPDIR)/sxfindk-SxFindK.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxFindK.cpp' object='sxfindk-SxFindK.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxfindk_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxfindk-SxFindK.obj `if test -f 'SxFindK.cpp'; then $(CYGPATH_W) 'SxFindK.cpp'; else $(CYGPATH_W) '$(srcdir)/SxFindK.cpp'; fi`

sxforces-SxForces.o: SxForces.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxforces_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxforces-SxForces.o -MD -MP -MF $(DEPDIR)/sxforces-SxForces.Tpo -c -o sxforces-SxForces.o `test -f 'SxForces.cpp' || echo '$(srcdir)/'`SxForces.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxforces-SxForces.Tpo $(DEPDIR)/sxforces-SxForces.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxForces.cpp' object='sxforces-SxForces.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxforces_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxforces-SxForces.o `test -f 'SxForces.cpp' || echo '$(srcdir)/'`SxForces.cpp

sxforces-SxForces.obj: SxForces.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxforces_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxforces-SxForces.obj -MD -MP -MF $(DEPDIR)/sxforces-SxForces.Tpo -c -o sxforces-SxForces.obj `if test -f 'SxForces.cpp'; then $(CYGPATH_W) 'SxForces.cpp'; else $(CYGPATH_W) '$(srcdir)/SxForces.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxforces-SxForces.Tpo $(DEPDIR)/sxforces-SxForces.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxForces.cpp' object='sxforces-SxForces.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxforces_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxforces-SxForces.obj `if test -f 'SxForces.cpp'; then $(CYGPATH_W) 'SxForces.cpp'; else $(CYGPATH_W) '$(srcdir)/SxForces.cpp'; fi`

sxgetfermi-SxGetFermi.o: SxGetFermi.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxgetfermi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxgetfermi-SxGetFermi.o -MD -MP -MF $(DEPDIR)/sxgetfermi-SxGetFermi.Tpo -c -o sxgetfermi-SxGetFermi.o `test -f 'SxGetFermi.cpp' || echo '$(srcdir)/'`SxGetFermi.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxgetfermi-SxGetFermi.Tpo $(DEPDIR)/sxgetfermi-SxGetFermi.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxGetFermi.cpp' object='sxgetfermi-SxGetFermi.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxgetfermi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxgetfermi-SxGetFermi.o `test -f 'SxGetFermi.cpp' || echo '$(srcdir)/'`SxGetFermi.cpp

sxgetfermi-SxGetFermi.obj: SxGetFermi.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxgetfermi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxgetfermi-SxGetFermi.obj -MD -MP -MF $(DEPDIR)/sxgetfermi-SxGetFermi.Tpo -c -o sxgetfermi-SxGetFermi.obj `if test -f 'SxGetFermi.cpp'; then $(CYGPATH_W) 'SxGetFermi.cpp'; else $(CYGPATH_W) '$(srcdir)/SxGetFermi.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxgetfermi-SxGetFermi.Tpo $(DEPDIR)/sxgetfermi-SxGetFermi.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxGetFermi.cpp' object='sxgetfermi-SxGetFermi.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxgetfermi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxgetfermi-SxGetFermi.obj `if test -f 'SxGetFermi.cpp'; then $(CYGPATH_W) 'SxGetFermi.cpp'; else $(CYGPATH_W) '$(srcdir)/SxGetFermi.cpp'; fi`

sxharmpottst-SxHarmPotTst.o: SxHarmPotTst.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxharmpottst_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxharmpottst-SxHarmPotTst.o -MD -MP -MF $(DEPDIR)/sxharmpottst-SxHarmPotTst.Tpo -c -o sxharmpottst-SxHarmPotTst.o `test -f 'SxHarmPotTst.cpp' || echo '$(srcdir)/'`SxHarmPotTst.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxharmpottst-SxHarmPotTst.Tpo $(DEPDIR)/sxharmpottst-SxHarmPotTst.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxHarmPotTst.cpp' object='sxharmpottst-SxHarmPotTst.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxharmpottst_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxharmpottst-SxHarmPotTst.o `test -f 'SxHarmPotTst.cpp' || echo '$(srcdir)/'`SxHarmPotTst.cpp

sxharmpottst-SxHarmPotTst.obj: SxHarmPotTst.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxharmpottst_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxharmpottst-SxHarmPotTst.obj -MD -MP -MF $(DEPDIR)/sxharmpottst-SxHarmPotTst.Tpo -c -o sxharmpottst-SxHarmPotTst.obj `if test -f 'SxHarmPotTst.cpp'; then $(CYGPATH_W) 'SxHarmPotTst.cpp'; else $(CYGPATH_W) '$(srcdir)/SxHarmPotTst.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxharmpottst-SxHarmPotTst.Tpo $(DEPDIR)/sxharmpottst-SxHarmPotTst.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxHarmPotTst.cpp' object='sxharmpottst-SxHarmPotTst.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxharmpottst_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxharmpottst-SxHarmPotTst.obj `if test -f 'SxHarmPotTst.cpp'; then $(CYGPATH_W) 'SxHarmPotTst.cpp'; else $(CYGPATH_W) '$(srcdir)/SxHarmPotTst.cpp'; fi`

sxinterpol-SxInterpol.o: SxInterpol.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxinterpol_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxinterpol-SxInterpol.o -MD -MP -MF $(DEPDIR)/sxinterpol-SxInterpol.Tpo -c -o sxinterpol-SxInterpol.o `test -f 'SxInterpol.cpp' || echo '$(srcdir)/'`SxInterpol.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxinterpol-SxInterpol.Tpo $(DEPDIR)/sxinterpol-SxInterpol.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxInterpol.cpp' object='sxinterpol-SxInterpol.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxinterpol_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxinterpol-SxInterpol.o `test -f 'SxInterpol.cpp' || echo '$(srcdir)/'`SxInterpol.cpp

sxinterpol-SxInterpol.obj: SxInterpol.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxinterpol_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxinterpol-SxInterpol.obj -MD -MP -MF $(DEPDIR)/sxinterpol-SxInterpol.Tpo -c -o sxinterpol-SxInterpol.obj `if test -f 'SxInterpol.cpp'; then $(CYGPATH_W) 'SxInterpol.cpp'; else $(CYGPATH_W) '$(srcdir)/SxInterpol.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxinterpol-SxInterpol.Tpo $(DEPDIR)/sxinterpol-SxInterpol.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxInterpol.cpp' object='sxinterpol-SxInterpol.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxinterpol_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxinterpol-SxInterpol.obj `if test -f 'SxInterpol.cpp'; then $(CYGPATH_W) 'SxInterpol.cpp'; else $(CYGPATH_W) '$(srcdir)/SxInterpol.cpp'; fi`

sxkpprint-SxKPPrint.o: SxKPPrint.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxkpprint_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxkpprint-SxKPPrint.o -MD -MP -MF $(DEPDIR)/sxkpprint-SxKPPrint.Tpo -c -o sxkpprint-SxKPPrint.o `test -f 'SxKPPrint.cpp' || echo '$(srcdir)/'`SxKPPrint.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxkpprint-SxKPPrint.Tpo $(DEPDIR)/sxkpprint-SxKPPrint.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxKPPrint.cpp' object='sxkpprint-SxKPPrint.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxkpprint_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxkpprint-SxKPPrint.o `test -f 'SxKPPrint.cpp' || echo '$(srcdir)/'`SxKPPrint.cpp

sxkpprint-SxKPPrint.obj: SxKPPrint.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxkpprint_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxkpprint-SxKPPrint.obj -MD -MP -MF $(DEPDIR)/sxkpprint-SxKPPrint.Tpo -c -o sxkpprint-SxKPPrint.obj `if test -f 'SxKPPrint.cpp'; then $(CYGPATH_W) 'SxKPPrint.cpp'; else $(CYGPATH_W) '$(srcdir)/SxKPPrint.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxkpprint-SxKPPrint.Tpo $(DEPDIR)/sxkpprint-SxKPPrint.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxKPPrint.cpp' object='sxkpprint-SxKPPrint.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxkpprint_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxkpprint-SxKPPrint.obj `if test -f 'SxKPPrint.cpp'; then $(CYGPATH_W) 'SxKPPrint.cpp'; else $(CYGPATH_W) '$(srcdir)/SxKPPrint.cpp'; fi`

sxlocalenergy-SxLocalEnergy.o: SxLocalEnergy.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxlocalenergy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxlocalenergy-SxLocalEnergy.o -MD -MP -MF $(DEPDIR)/sxlocalenergy-SxLocalEnergy.Tpo -c -o sxlocalenergy-SxLocalEnergy.o `test -f 'SxLocalEnergy.cpp' || echo '$(srcdir)/'`SxLocalEnergy.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxlocalenergy-SxLocalEnergy.Tpo $(DEPDIR)/sxlocalenergy-SxLocalEnergy.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxLocalEnergy.cpp' object='sxlocalenergy-SxLocalEnergy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxlocalenergy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxlocalenergy-SxLocalEnergy.o `test -f 'SxLocalEnergy.cpp' || echo '$(srcdir)/'`SxLocalEnergy.cpp

sxlocalenergy-SxLocalEnergy.obj: SxLocalEnergy.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxlocalenergy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxlocalenergy-SxLocalEnergy.obj -MD -MP -MF $(DEPDIR)/sxlocalenergy-SxLocalEnergy.Tpo -c -o sxlocalenergy-SxLocalEnergy.obj `if test -f 'SxLocalEnergy.cpp'; then $(CYGPATH_W) 'SxLocalEnergy.cpp'; else $(CYGPATH_W) '$(srcdir)/SxLocalEnergy.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxlocalenergy-SxLocalEnergy.Tpo $(DEPDIR)/sxlocalenergy-SxLocalEnergy.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxLocalEnergy.cpp' object='sxlocalenergy-SxLocalEnergy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxlocalenergy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxlocalenergy-SxLocalEnergy.obj `if test -f 'SxLocalEnergy.cpp'; then $(CYGPATH_W) 'SxLocalEnergy.cpp'; else $(CYGPATH_W) '$(srcdir)/SxLocalEnergy.cpp'; fi`

sxmeshline-SxMeshLine.o: SxMeshLine.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxmeshline_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxmeshline-SxMeshLine.o -MD -MP -MF $(DEPDIR)/sxmeshline-SxMeshLine.Tpo -c -o sxmeshline-SxMeshLine.o `test -f 'SxMeshLine.cpp' || echo '$(srcdir)/'`SxMeshLine.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxmeshline-SxMeshLine.Tpo $(DEPDIR)/sxmeshline-SxMeshLine.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxMeshLine.cpp' object='sxmeshline-SxMeshLine.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxmeshline_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxmeshline-SxMeshLine.o `test -f 'SxMeshLine.cpp' || echo '$(srcdir)/'`SxMeshLine.cpp

sxmeshline-SxMeshLine.obj: SxMeshLine.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxmeshline_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxmeshline-SxMeshLine.obj -MD -MP -MF $(DEPDIR)/sxmeshline-SxMeshLine.Tpo -c -o sxmeshline-SxMeshLine.obj `if test -f 'SxMeshLine.cpp'; then $(CYGPATH_W) 'SxMeshLine.cpp'; else $(CYGPATH_W) '$(srcdir)/SxMeshLine.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxmeshline-SxMeshLine.Tpo $(DEPDIR)/sxmeshline-SxMeshLine.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxMeshLine.cpp' object='sxmeshline-SxMeshLine.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxmeshline_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxmeshline-SxMeshLine.obj `if test -f 'SxMeshLine.cpp'; then $(CYGPATH_W) 'SxMeshLine.cpp'; else $(CYGPATH_W) '$(srcdir)/SxMeshLine.cpp'; fi`

sxmeshtrace-SxMeshTrace.o: SxMeshTrace.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxmeshtrace_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxmeshtrace-SxMeshTrace.o -MD -MP -MF $(DEPDIR)/sxmeshtrace-SxMeshTrace.Tpo -c -o sxmeshtrace-SxMeshTrace.o `test -f 'SxMeshTrace.cpp' || echo '$(srcdir)/'`SxMeshTrace.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxmeshtrace-SxMeshTrace.Tpo $(DEPDIR)/sxmeshtrace-SxMeshTrace.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxMeshTrace.cpp' object='sxmeshtrace-SxMeshTrace.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxmeshtrace_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxmeshtrace-SxMeshTrace.o `test -f 'SxMeshTrace.cpp' || echo '$(srcdir)/'`SxMeshTrace.cpp

sxmeshtrace-SxMeshTrace.obj: SxMeshTrace.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxmeshtrace_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxmeshtrace-SxMeshTrace.obj -MD -MP -MF $(DEPDIR)/sxmeshtrace-SxMeshTrace.Tpo -c -o sxmeshtrace-SxMeshTrace.obj `if test -f 'SxMeshTrace.cpp'; then $(CYGPATH_W) 'SxMeshTrace.cpp'; else $(CYGPATH_W) '$(srcdir)/SxMeshTrace.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxmeshtrace-SxMeshTrace.Tpo $(DEPDIR)/sxmeshtrace-SxMeshTrace.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxMeshTrace.cpp' object='sxmeshtrace-SxMeshTrace.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxmeshtrace_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxmeshtrace-SxMeshTrace.obj `if test -f 'SxMeshTrace.cpp'; then $(CYGPATH_W) 'SxMeshTrace.cpp'; else $(CYGPATH_W) '$(srcdir)/SxMeshTrace.cpp'; fi`

sxmies-SxMIES.o: SxMIES.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxmies_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxmies-SxMIES.o -MD -MP -MF $(DEPDIR)/sxmies-SxMIES.Tpo -c -o sxmies-SxMIES.o `test -f 'SxMIES.cpp' || echo '$(srcdir)/'`SxMIES.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxmies-SxMIES.Tpo $(DEPDIR)/sxmies-SxMIES.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxMIES.cpp' object='sxmies-SxMIES.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxmies_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxmies-SxMIES.o `test -f 'SxMIES.cpp' || echo '$(srcdir)/'`SxMIES.cpp

sxmies-SxMIES.obj: SxMIES.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxmies_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxmies-SxMIES.obj -MD -MP -MF $(DEPDIR)/sxmies-SxMIES.Tpo -c -o sxmies-SxMIES.obj `if test -f 'SxMIES.cpp'; then $(CYGPATH_W) 'SxMIES.cpp'; else $(CYGPATH_W) '$(srcdir)/SxMIES.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxmies-SxMIES.Tpo $(DEPDIR)/sxmies-SxMIES.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxMIES.cpp' object='sxmies-SxMIES.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxmies_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxmies-SxMIES.obj `if test -f 'SxMIES.cpp'; then $(CYGPATH_W) 'SxMIES.cpp'; else $(CYGPATH_W) '$(srcdir)/SxMIES.cpp'; fi`

sxmulliken-SxMulliken.o: SxMulliken.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxmulliken_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxmulliken-SxMulliken.o -MD -MP -MF $(DEPDIR)/sxmulliken-SxMulliken.Tpo -c -o sxmulliken-SxMulliken.o `test -f 'SxMulliken.cpp' || echo '$(srcdir)/'`SxMulliken.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxmulliken-SxMulliken.Tpo $(DEPDIR)/sxmulliken-SxMulliken.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxMulliken.cpp' object='sxmulliken-SxMulliken.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxmulliken_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxmulliken-SxMulliken.o `test -f 'SxMulliken.cpp' || echo '$(srcdir)/'`SxMulliken.cpp

sxmulliken-SxMulliken.obj: SxMulliken.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxmulliken_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxmulliken-SxMulliken.obj -MD -MP -MF $(DEPDIR)/sxmulliken-SxMulliken.Tpo -c -o sxmulliken-SxMulliken.obj `if test -f 'SxMulliken.cpp'; then $(CYGPATH_W) 'SxMulliken.cpp'; else $(CYGPATH_W) '$(srcdir)/SxMulliken.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxmulliken-SxMulliken.Tpo $(DEPDIR)/sxmulliken-SxMulliken.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxMulliken.cpp' object='sxmulliken-SxMulliken.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxmulliken_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxmulliken-SxMulliken.obj `if test -f 'SxMulliken.cpp'; then $(CYGPATH_W) 'SxMulliken.cpp'; else $(CYGPATH_W) '$(srcdir)/SxMulliken.cpp'; fi`

sxpdos-SxPDOS.o: SxPDOS.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxpdos_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxpdos-SxPDOS.o -MD -MP -MF $(DEPDIR)/sxpdos-SxPDOS.Tpo -c -o sxpdos-SxPDOS.o `test -f 'SxPDOS.cpp' || echo '$(srcdir)/'`SxPDOS.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxpdos-SxPDOS.Tpo $(DEPDIR)/sxpdos-SxPDOS.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxPDOS.cpp' object='sxpdos-SxPDOS.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxpdos_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxpdos-SxPDOS.o `test -f 'SxPDOS.cpp' || echo '$(srcdir)/'`SxPDOS.cpp

sxpdos-SxPDOS.obj: SxPDOS.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxpdos_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxpdos-SxPDOS.obj -MD -MP -MF $(DEPDIR)/sxpdos-SxPDOS.Tpo -c -o sxpdos-SxPDOS.obj `if test -f 'SxPDOS.cpp'; then $(CYGPATH_W) 'SxPDOS.cpp'; else $(CYGPATH_W) '$(srcdir)/SxPDOS.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxpdos-SxPDOS.Tpo $(DEPDIR)/sxpdos-SxPDOS.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxPDOS.cpp' object='sxpdos-SxPDOS.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxpdos_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxpdos-SxPDOS.obj `if test -f 'SxPDOS.cpp'; then $(CYGPATH_W) 'SxPDOS.cpp'; else $(CYGPATH_W) '$(srcdir)/SxPDOS.cpp'; fi`

sxpespectrum-SxPESpectrum.o: SxPESpectrum.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxpespectrum_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxpespectrum-SxPESpectrum.o -MD -MP -MF $(DEPDIR)/sxpespectrum-SxPESpectrum.Tpo -c -o sxpespectrum-SxPESpectrum.o `test -f 'SxPESpectrum.cpp' || echo '$(srcdir)/'`SxPESpectrum.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxpespectrum-SxPESpectrum.Tpo $(DEPDIR)/sxpespectrum-SxPESpectrum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxPESpectrum.cpp' object='sxpespectrum-SxPESpectrum.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxpespectrum_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxpespectrum-SxPESpectrum.o `test -f 'SxPESpectrum.cpp' || echo '$(srcdir)/'`SxPESpectrum.cpp

sxpespectrum-SxPESpectrum.obj: SxPESpectrum.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxpespectrum_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxpespectrum-SxPESpectrum.obj -MD -MP -MF $(DEPDIR)/sxpespectrum-SxPESpectrum.Tpo -c -o sxpespectrum-SxPESpectrum.obj `if test -f 'SxPESpectrum.cpp'; then $(CYGPATH_W) 'SxPESpectrum.cpp'; else $(CYGPATH_W) '$(srcdir)/SxPESpectrum.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxpespectrum-SxPESpectrum.Tpo $(DEPDIR)/sxpespectrum-SxPESpectrum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxPESpectrum.cpp' object='sxpespectrum-SxPESpectrum.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxpespectrum_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxpespectrum-SxPESpectrum.obj `if test -f 'SxPESpectrum.cpp'; then $(CYGPATH_W) 'SxPESpectrum.cpp'; else $(CYGPATH_W) '$(srcdir)/SxPESpectrum.cpp'; fi`

sxposmatel-SxPosMatEl.o: SxPosMatEl.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxposmatel_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxposmatel-SxPosMatEl.o -MD -MP -MF $(DEPDIR)/sxposmatel-SxPosMatEl.Tpo -c -o sxposmatel-SxPosMatEl.o `test -f 'SxPosMatEl.cpp' || echo '$(srcdir)/'`SxPosMatEl.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxposmatel-SxPosMatEl.Tpo $(DEPDIR)/sxposmatel-SxPosMatEl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxPosMatEl.cpp' object='sxposmatel-SxPosMatEl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxposmatel_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxposmatel-SxPosMatEl.o `test -f 'SxPosMatEl.cpp' || echo '$(srcdir)/'`SxPosMatEl.cpp

sxposmatel-SxPosMatEl.obj: SxPosMatEl.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxposmatel_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxposmatel-SxPosMatEl.obj -MD -MP -MF $(DEPDIR)/sxposmatel-SxPosMatEl.Tpo -c -o sxposmatel-SxPosMatEl.obj `if test -f 'SxPosMatEl.cpp'; then $(CYGPATH_W) 'SxPosMatEl.cpp'; else $(CYGPATH_W) '$(srcdir)/SxPosMatEl.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxposmatel-SxPosMatEl.Tpo $(DEPDIR)/sxposmatel-SxPosMatEl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxPosMatEl.cpp' object='sxposmatel-SxPosMatEl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxposmatel_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxposmatel-SxPosMatEl.obj `if test -f 'SxPosMatEl.cpp'; then $(CYGPATH_W) 'SxPosMatEl.cpp'; else $(CYGPATH_W) '$(srcdir)/SxPosMatEl.cpp'; fi`

sxprintocc-SxPrintOcc.o: SxPrintOcc.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxprintocc_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxprintocc-SxPrintOcc.o -MD -MP -MF $(DEPDIR)/sxprintocc-SxPrintOcc.Tpo -c -o sxprintocc-SxPrintOcc.o `test -f 'SxPrintOcc.cpp' || echo '$(srcdir)/'`SxPrintOcc.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxprintocc-SxPrintOcc.Tpo $(DEPDIR)/sxprintocc-SxPrintOcc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxPrintOcc.cpp' object='sxprintocc-SxPrintOcc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxprintocc_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxprintocc-SxPrintOcc.o `test -f 'SxPrintOcc.cpp' || echo '$(srcdir)/'`SxPrintOcc.cpp

sxprintocc-SxPrintOcc.obj: SxPrintOcc.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxprintocc_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxprintocc-SxPrintOcc.obj -MD -MP -MF $(DEPDIR)/sxprintocc-SxPrintOcc.Tpo -c -o sxprintocc-SxPrintOcc.obj `if test -f 'SxPrintOcc.cpp'; then $(CYGPATH_W) 'SxPrintOcc.cpp'; else $(CYGPATH_W) '$(srcdir)/SxPrintOcc.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxprintocc-SxPrintOcc.Tpo $(DEPDIR)/sxprintocc-SxPrintOcc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxPrintOcc.cpp' object='sxprintocc-SxPrintOcc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxprintocc_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxprintocc-SxPrintOcc.obj `if test -f 'SxPrintOcc.cpp'; then $(CYGPATH_W) 'SxPrintOcc.cpp'; else $(CYGPATH_W) '$(srcdir)/SxPrintOcc.cpp'; fi`

sxrho2dx-SxRho2DX.o: SxRho2DX.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxrho2dx_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxrho2dx-SxRho2DX.o -MD -MP -MF $(DEPDIR)/sxrho2dx-SxRho2DX.Tpo -c -o sxrho2dx-SxRho2DX.o `test -f 'SxRho2DX.cpp' || echo '$(srcdir)/'`SxRho2DX.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxrho2dx-SxRho2DX.Tpo $(DEPDIR)/sxrho2dx-SxRho2DX.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxRho2DX.cpp' object='sxrho2dx-SxRho2DX.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxrho2dx_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxrho2dx-SxRho2DX.o `test -f 'SxRho2DX.cpp' || echo '$(srcdir)/'`SxRho2DX.cpp

sxrho2dx-SxRho2DX.obj: SxRho2DX.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxrho2dx_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxrho2dx-SxRho2DX.obj -MD -MP -MF $(DEPDIR)/sxrho2dx-SxRho2DX.Tpo -c -o sxrho2dx-SxRho2DX.obj `if test -f 'SxRho2DX.cpp'; then $(CYGPATH_W) 'SxRho2DX.cpp'; else $(CYGPATH_W) '$(srcdir)/SxRho2DX.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxrho2dx-SxRho2DX.Tpo $(DEPDIR)/sxrho2dx-SxRho2DX.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxRho2DX.cpp' object='sxrho2dx-SxRho2DX.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxrho2dx_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxrho2dx-SxRho2DX.obj `if test -f 'SxRho2DX.cpp'; then $(CYGPATH_W) 'SxRho2DX.cpp'; else $(CYGPATH_W) '$(srcdir)/SxRho2DX.cpp'; fi`

sxrhodiff-SxRhoDiff.o: SxRhoDiff.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxrhodiff_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxrhodiff-SxRhoDiff.o -MD -MP -MF $(DEPDIR)/sxrhodiff-SxRhoDiff.Tpo -c -o sxrhodiff-SxRhoDiff.o `test -f 'SxRhoDiff.cpp' || echo '$(srcdir)/'`SxRhoDiff.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxrhodiff-SxRhoDiff.Tpo $(DEPDIR)/sxrhodiff-SxRhoDiff.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxRhoDiff.cpp' object='sxrhodiff-SxRhoDiff.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxrhodiff_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxrhodiff-SxRhoDiff.o `test -f 'SxRhoDiff.cpp' || echo '$(srcdir)/'`SxRhoDiff.cpp

sxrhodiff-SxRhoDiff.obj: SxRhoDiff.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxrhodiff_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxrhodiff-SxRhoDiff.obj -MD -MP -MF $(DEPDIR)/sxrhodiff-SxRhoDiff.Tpo -c -o sxrhodiff-SxRhoDiff.obj `if test -f 'SxRhoDiff.cpp'; then $(CYGPATH_W) 'SxRhoDiff.cpp'; else $(CYGPATH_W) '$(srcdir)/SxRhoDiff.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxrhodiff-SxRhoDiff.Tpo $(DEPDIR)/sxrhodiff-SxRhoDiff.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxRhoDiff.cpp' object='sxrhodiff-SxRhoDiff.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxrhodiff_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxrhodiff-SxRhoDiff.obj `if test -f 'SxRhoDiff.cpp'; then $(CYGPATH_W) 'SxRhoDiff.cpp'; else $(CYGPATH_W) '$(srcdir)/SxRhoDiff.cpp'; fi`

sxrhograd-SxRhoGrad.o: SxRhoGrad.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxrhograd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxrhograd-SxRhoGrad.o -MD -MP -MF $(DEPDIR)/sxrhograd-SxRhoGrad.Tpo -c -o sxrhograd-SxRhoGrad.o `test -f 'SxRhoGrad.cpp' || echo '$(srcdir)/'`SxRhoGrad.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxrhograd-SxRhoGrad.Tpo $(DEPDIR)/sxrhograd-SxRhoGrad.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxRhoGrad.cpp' object='sxrhograd-SxRhoGrad.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxrhograd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxrhograd-SxRhoGrad.o `test -f 'SxRhoGrad.cpp' || echo '$(srcdir)/'`SxRhoGrad.cpp

sxrhograd-SxRhoGrad.obj: SxRhoGrad.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxrhograd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxrhograd-SxRhoGrad.obj -MD -MP -MF $(DEPDIR)/sxrhograd-SxRhoGrad.Tpo -c -o sxrhograd-SxRhoGrad.obj `if test -f 'SxRhoGrad.cpp'; then $(CYGPATH_W) 'SxRhoGrad.cpp'; else $(CYGPATH_W) '$(srcdir)/SxRhoGrad.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxrhograd-SxRhoGrad.Tpo $(DEPDIR)/sxrhograd-SxRhoGrad.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxRhoGrad.cpp' object='sxrhograd-SxRhoGrad.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxrhograd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxrhograd-SxRhoGrad.obj `if test -f 'SxRhoGrad.cpp'; then $(CYGPATH_W) 'SxRhoGrad.cpp'; else $(CYGPATH_W) '$(srcdir)/SxRhoGrad.cpp'; fi`

sxrhorep-SxRhoRep.o: SxRhoRep.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxrhorep_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxrhorep-SxRhoRep.o -MD -MP -MF $(DEPDIR)/sxrhorep-SxRhoRep.Tpo -c -o sxrhorep-SxRhoRep.o `test -f 'SxRhoRep.cpp' || echo '$(srcdir)/'`SxRhoRep.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxrhorep-SxRhoRep.Tpo $(DEPDIR)/sxrhorep-SxRhoRep.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxRhoRep.cpp' object='sxrhorep-SxRhoRep.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxrhorep_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxrhorep-SxRhoRep.o `test -f 'SxRhoRep.cpp' || echo '$(srcdir)/'`SxRhoRep.cpp

sxrhorep-SxRhoRep.obj: SxRhoRep.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxrhorep_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxrhorep-SxRhoRep.obj -MD -MP -MF $(DEPDIR)/sxrhorep-SxRhoRep.Tpo -c -o sxrhorep-SxRhoRep.obj `if test -f 'SxRhoRep.cpp'; then $(CYGPATH_W) 'SxRhoRep.cpp'; else $(CYGPATH_W) '$(srcdir)/SxRhoRep.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxrhorep-SxRhoRep.Tpo $(DEPDIR)/sxrhorep-SxRhoRep.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxRhoRep.cpp' object='sxrhorep-SxRhoRep.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxrhorep_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxrhorep-SxRhoRep.obj `if test -f 'SxRhoRep.cpp'; then $(CYGPATH_W) 'SxRhoRep.cpp'; else $(CYGPATH_W) '$(srcdir)/SxRhoRep.cpp'; fi`

sxrhosplit-SxRhoSplit.o: SxRhoSplit.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxrhosplit_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxrhosplit-SxRhoSplit.o -MD -MP -MF $(DEPDIR)/sxrhosplit-SxRhoSplit.Tpo -c -o sxrhosplit-SxRhoSplit.o `test -f 'SxRhoSplit.cpp' || echo '$(srcdir)/'`SxRhoSplit.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxrhosplit-SxRhoSplit.Tpo $(DEPDIR)/sxrhosplit-SxRhoSplit.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxRhoSplit.cpp' object='sxrhosplit-SxRhoSplit.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxrhosplit_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxrhosplit-SxRhoSplit.o `test -f 'SxRhoSplit.cpp' || echo '$(srcdir)/'`SxRhoSplit.cpp

sxrhosplit-SxRhoSplit.obj: SxRhoSplit.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxrhosplit_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxrhosplit-SxRhoSplit.obj -MD -MP -MF $(DEPDIR)/sxrhosplit-SxRhoSplit.Tpo -c -o sxrhosplit-SxRhoSplit.obj `if test -f 'SxRhoSplit.cpp'; then $(CYGPATH_W) 'SxRhoSplit.cpp'; else $(CYGPATH_W) '$(srcdir)/SxRhoSplit.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxrhosplit-SxRhoSplit.Tpo $(DEPDIR)/sxrhosplit-SxRhoSplit.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxRhoSplit.cpp' object='sxrhosplit-SxRhoSplit.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxrhosplit_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxrhosplit-SxRhoSplit.obj `if test -f 'SxRhoSplit.cpp'; then $(CYGPATH_W) 'SxRhoSplit.cpp'; else $(CYGPATH_W) '$(srcdir)/SxRhoSplit.cpp'; fi`

sxrictst-SxRicTst.o: SxRicTst.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxrictst_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxrictst-SxRicTst.o -MD -MP -MF $(DEPDIR)/sxrictst-SxRicTst.Tpo -c -o sxrictst-SxRicTst.o `test -f 'SxRicTst.cpp' || echo '$(srcdir)/'`SxRicTst.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxrictst-SxRicTst.Tpo $(DEPDIR)/sxrictst-SxRicTst.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxRicTst.cpp' object='sxrictst-SxRicTst.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxrictst_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxrictst-SxRicTst.o `test -f 'SxRicTst.cpp' || echo '$(srcdir)/'`SxRicTst.cpp

sxrictst-SxRicTst.obj: SxRicTst.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxrictst_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxrictst-SxRicTst.obj -MD -MP -MF $(DEPDIR)/sxrictst-SxRicTst.Tpo -c -o sxrictst-SxRicTst.obj `if test -f 'SxRicTst.cpp'; then $(CYGPATH_W) 'SxRicTst.cpp'; else $(CYGPATH_W) '$(srcdir)/SxRicTst.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxrictst-SxRicTst.Tpo $(DEPDIR)/sxrictst-SxRicTst.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxRicTst.cpp' object='sxrictst-SxRicTst.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxrictst_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxrictst-SxRicTst.obj `if test -f 'SxRicTst.cpp'; then $(CYGPATH_W) 'SxRicTst.cpp'; else $(CYGPATH_W) '$(srcdir)/SxRicTst.cpp'; fi`

sxsawtooth-SxSawTooth.o: SxSawTooth.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxsawtooth_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxsawtooth-SxSawTooth.o -MD -MP -MF $(DEPDIR)/sxsawtooth-SxSawTooth.Tpo -c -o sxsawtooth-SxSawTooth.o `test -f 'SxSawTooth.cpp' || echo '$(srcdir)/'`SxSawTooth.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxsawtooth-SxSawTooth.Tpo $(DEPDIR)/sxsawtooth-SxSawTooth.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxSawTooth.cpp' object='sxsawtooth-SxSawTooth.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxsawtooth_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxsawtooth-SxSawTooth.o `test -f 'SxSawTooth.cpp' || echo '$(srcdir)/'`SxSawTooth.cpp

sxsawtooth-SxSawTooth.obj: SxSawTooth.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxsawtooth_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxsawtooth-SxSawTooth.obj -MD -MP -MF $(DEPDIR)/sxsawtooth-SxSawTooth.Tpo -c -o sxsawtooth-SxSawTooth.obj `if test -f 'SxSawTooth.cpp'; then $(CYGPATH_W) 'SxSawTooth.cpp'; else $(CYGPATH_W) '$(srcdir)/SxSawTooth.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxsawtooth-SxSawTooth.Tpo $(DEPDIR)/sxsawtooth-SxSawTooth.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxSawTooth.cpp' object='sxsawtooth-SxSawTooth.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxsawtooth_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxsawtooth-SxSawTooth.obj `if test -f 'SxSawTooth.cpp'; then $(CYGPATH_W) 'SxSawTooth.cpp'; else $(CYGPATH_W) '$(srcdir)/SxSawTooth.cpp'; fi`

sxstructcom-SxStructCOM.o: SxStructCOM.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructcom_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxstructcom-SxStructCOM.o -MD -MP -MF $(DEPDIR)/sxstructcom-SxStructCOM.Tpo -c -o sxstructcom-SxStructCOM.o `test -f 'SxStructCOM.cpp' || echo '$(srcdir)/'`SxStructCOM.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxstructcom-SxStructCOM.Tpo $(DEPDIR)/sxstructcom-SxStructCOM.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxStructCOM.cpp' object='sxstructcom-SxStructCOM.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructcom_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxstructcom-SxStructCOM.o `test -f 'SxStructCOM.cpp' || echo '$(srcdir)/'`SxStructCOM.cpp

sxstructcom-SxStructCOM.obj: SxStructCOM.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructcom_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxstructcom-SxStructCOM.obj -MD -MP -MF $(DEPDIR)/sxstructcom-SxStructCOM.Tpo -c -o sxstructcom-SxStructCOM.obj `if test -f 'SxStructCOM.cpp'; then $(CYGPATH_W) 'SxStructCOM.cpp'; else $(CYGPATH_W) '$(srcdir)/SxStructCOM.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxstructcom-SxStructCOM.Tpo $(DEPDIR)/sxstructcom-SxStructCOM.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxStructCOM.cpp' object='sxstructcom-SxStructCOM.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructcom_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxstructcom-SxStructCOM.obj `if test -f 'SxStructCOM.cpp'; then $(CYGPATH_W) 'SxStructCOM.cpp'; else $(CYGPATH_W) '$(srcdir)/SxStructCOM.cpp'; fi`

sxstructdiff-SxStructDiff.o: SxStructDiff.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructdiff_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxstructdiff-SxStructDiff.o -MD -MP -MF $(DEPDIR)/sxstructdiff-SxStructDiff.Tpo -c -o sxstructdiff-SxStructDiff.o `test -f 'SxStructDiff.cpp' || echo '$(srcdir)/'`SxStructDiff.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxstructdiff-SxStructDiff.Tpo $(DEPDIR)/sxstructdiff-SxStructDiff.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxStructDiff.cpp' object='sxstructdiff-SxStructDiff.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructdiff_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxstructdiff-SxStructDiff.o `test -f 'SxStructDiff.cpp' || echo '$(srcdir)/'`SxStructDiff.cpp

sxstructdiff-SxStructDiff.obj: SxStructDiff.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructdiff_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxstructdiff-SxStructDiff.obj -MD -MP -MF $(DEPDIR)/sxstructdiff-SxStructDiff.Tpo -c -o sxstructdiff-SxStructDiff.obj `if test -f 'SxStructDiff.cpp'; then $(CYGPATH_W) 'SxStructDiff.cpp'; else $(CYGPATH_W) '$(srcdir)/SxStructDiff.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxstructdiff-SxStructDiff.Tpo $(DEPDIR)/sxstructdiff-SxStructDiff.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxStructDiff.cpp' object='sxstructdiff-SxStructDiff.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructdiff_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxstructdiff-SxStructDiff.obj `if test -f 'SxStructDiff.cpp'; then $(CYGPATH_W) 'SxStructDiff.cpp'; else $(CYGPATH_W) '$(srcdir)/SxStructDiff.cpp'; fi`

sxstructjoin-SxStructJoin.o: SxStructJoin.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructjoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxstructjoin-SxStructJoin.o -MD -MP -MF $(DEPDIR)/sxstructjoin-SxStructJoin.Tpo -c -o sxstructjoin-SxStructJoin.o `test -f 'SxStructJoin.cpp' || echo '$(srcdir)/'`SxStructJoin.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxstructjoin-SxStructJoin.Tpo $(DEPDIR)/sxstructjoin-SxStructJoin.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxStructJoin.cpp' object='sxstructjoin-SxStructJoin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructjoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxstructjoin-SxStructJoin.o `test -f 'SxStructJoin.cpp' || echo '$(srcdir)/'`SxStructJoin.cpp

sxstructjoin-SxStructJoin.obj: SxStructJoin.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructjoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxstructjoin-SxStructJoin.obj -MD -MP -MF $(DEPDIR)/sxstructjoin-SxStructJoin.Tpo -c -o sxstructjoin-SxStructJoin.obj `if test -f 'SxStructJoin.cpp'; then $(CYGPATH_W) 'SxStructJoin.cpp'; else $(CYGPATH_W) '$(srcdir)/SxStructJoin.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxstructjoin-SxStructJoin.Tpo $(DEPDIR)/sxstructjoin-SxStructJoin.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxStructJoin.cpp' object='sxstructjoin-SxStructJoin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructjoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxstructjoin-SxStructJoin.obj `if test -f 'SxStructJoin.cpp'; then $(CYGPATH_W) 'SxStructJoin.cpp'; else $(CYGPATH_W) '$(srcdir)/SxStructJoin.cpp'; fi`

sxstructparam-SxStructParam.o: SxStructParam.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructparam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxstructparam-SxStructParam.o -MD -MP -MF $(DEPDIR)/sxstructparam-SxStructParam.Tpo -c -o sxstructparam-SxStructParam.o `test -f 'SxStructParam.cpp' || echo '$(srcdir)/'`SxStructParam.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxstructparam-SxStructParam.Tpo $(DEPDIR)/sxstructparam-SxStructParam.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxStructParam.cpp' object='sxstructparam-SxStructParam.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructparam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxstructparam-SxStructParam.o `test -f 'SxStructParam.cpp' || echo '$(srcdir)/'`SxStructParam.cpp

sxstructparam-SxStructParam.obj: SxStructParam.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructparam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxstructparam-SxStructParam.obj -MD -MP -MF $(DEPDIR)/sxstructparam-SxStructParam.Tpo -c -o sxstructparam-SxStructParam.obj `if test -f 'SxStructParam.cpp'; then $(CYGPATH_W) 'SxStructParam.cpp'; else $(CYGPATH_W) '$(srcdir)/SxStructParam.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxstructparam-SxStructParam.Tpo $(DEPDIR)/sxstructparam-SxStructParam.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxStructParam.cpp' object='sxstructparam-SxStructParam.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructparam_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxstructparam-SxStructParam.obj `if test -f 'SxStructParam.cpp'; then $(CYGPATH_W) 'SxStructParam.cpp'; else $(CYGPATH_W) '$(srcdir)/SxStructParam.cpp'; fi`

sxstructpatch-SxStructPatch.o: SxStructPatch.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructpatch_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxstructpatch-SxStructPatch.o -MD -MP -MF $(DEPDIR)/sxstructpatch-SxStructPatch.Tpo -c -o sxstructpatch-SxStructPatch.o `test -f 'SxStructPatch.cpp' || echo '$(srcdir)/'`SxStructPatch.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxstructpatch-SxStructPatch.Tpo $(DEPDIR)/sxstructpatch-SxStructPatch.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxStructPatch.cpp' object='sxstructpatch-SxStructPatch.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructpatch_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxstructpatch-SxStructPatch.o `test -f 'SxStructPatch.cpp' || echo '$(srcdir)/'`SxStructPatch.cpp

sxstructpatch-SxStructPatch.obj: SxStructPatch.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructpatch_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxstructpatch-SxStructPatch.obj -MD -MP -MF $(DEPDIR)/sxstructpatch-SxStructPatch.Tpo -c -o sxstructpatch-SxStructPatch.obj `if test -f 'SxStructPatch.cpp'; then $(CYGPATH_W) 'SxStructPatch.cpp'; else $(CYGPATH_W) '$(srcdir)/SxStructPatch.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxstructpatch-SxStructPatch.Tpo $(DEPDIR)/sxstructpatch-SxStructPatch.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxStructPatch.cpp' object='sxstructpatch-SxStructPatch.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructpatch_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxstructpatch-SxStructPatch.obj `if test -f 'SxStructPatch.cpp'; then $(CYGPATH_W) 'SxStructPatch.cpp'; else $(CYGPATH_W) '$(srcdir)/SxStructPatch.cpp'; fi`

sxstructprint-SxStructPrint.o: SxStructPrint.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructprint_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxstructprint-SxStructPrint.o -MD -MP -MF $(DEPDIR)/sxstructprint-SxStructPrint.Tpo -c -o sxstructprint-SxStructPrint.o `test -f 'SxStructPrint.cpp' || echo '$(srcdir)/'`SxStructPrint.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxstructprint-SxStructPrint.Tpo $(DEPDIR)/sxstructprint-SxStructPrint.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxStructPrint.cpp' object='sxstructprint-SxStructPrint.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructprint_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxstructprint-SxStructPrint.o `test -f 'SxStructPrint.cpp' || echo '$(srcdir)/'`SxStructPrint.cpp

sxstructprint-SxStructPrint.obj: SxStructPrint.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructprint_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxstructprint-SxStructPrint.obj -MD -MP -MF $(DEPDIR)/sxstructprint-SxStructPrint.Tpo -c -o sxstructprint-SxStructPrint.obj `if test -f 'SxStructPrint.cpp'; then $(CYGPATH_W) 'SxStructPrint.cpp'; else $(CYGPATH_W) '$(srcdir)/SxStructPrint.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxstructprint-SxStructPrint.Tpo $(DEPDIR)/sxstructprint-SxStructPrint.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxStructPrint.cpp' object='sxstructprint-SxStructPrint.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructprint_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxstructprint-SxStructPrint.obj `if test -f 'SxStructPrint.cpp'; then $(CYGPATH_W) 'SxStructPrint.cpp'; else $(CYGPATH_W) '$(srcdir)/SxStructPrint.cpp'; fi`

sxstructrel-SxStructRel.o: SxStructRel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructrel_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxstructrel-SxStructRel.o -MD -MP -MF $(DEPDIR)/sxstructrel-SxStructRel.Tpo -c -o sxstructrel-SxStructRel.o `test -f 'SxStructRel.cpp' || echo '$(srcdir)/'`SxStructRel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxstructrel-SxStructRel.Tpo $(DEPDIR)/sxstructrel-SxStructRel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxStructRel.cpp' object='sxstructrel-SxStructRel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructrel_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxstructrel-SxStructRel.o `test -f 'SxStructRel.cpp' || echo '$(srcdir)/'`SxStructRel.cpp

sxstructrel-SxStructRel.obj: SxStructRel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructrel_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxstructrel-SxStructRel.obj -MD -MP -MF $(DEPDIR)/sxstructrel-SxStructRel.Tpo -c -o sxstructrel-SxStructRel.obj `if test -f 'SxStructRel.cpp'; then $(CYGPATH_W) 'SxStructRel.cpp'; else $(CYGPATH_W) '$(srcdir)/SxStructRel.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxstructrel-SxStructRel.Tpo $(DEPDIR)/sxstructrel-SxStructRel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxStructRel.cpp' object='sxstructrel-SxStructRel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructrel_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxstructrel-SxStructRel.obj `if test -f 'SxStructRel.cpp'; then $(CYGPATH_W) 'SxStructRel.cpp'; else $(CYGPATH_W) '$(srcdir)/SxStructRel.cpp'; fi`

sxstructrep-SxStructRep.o: SxStructRep.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructrep_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxstructrep-SxStructRep.o -MD -MP -MF $(DEPDIR)/sxstructrep-SxStructRep.Tpo -c -o sxstructrep-SxStructRep.o `test -f 'SxStructRep.cpp' || echo '$(srcdir)/'`SxStructRep.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxstructrep-SxStructRep.Tpo $(DEPDIR)/sxstructrep-SxStructRep.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxStructRep.cpp' object='sxstructrep-SxStructRep.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructrep_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxstructrep-SxStructRep.o `test -f 'SxStructRep.cpp' || echo '$(srcdir)/'`SxStructRep.cpp

sxstructrep-SxStructRep.obj: SxStructRep.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructrep_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxstructrep-SxStructRep.obj -MD -MP -MF $(DEPDIR)/sxstructrep-SxStructRep.Tpo -c -o sxstructrep-SxStructRep.obj `if test -f 'SxStructRep.cpp'; then $(CYGPATH_W) 'SxStructRep.cpp'; else $(CYGPATH_W) '$(srcdir)/SxStructRep.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxstructrep-SxStructRep.Tpo $(DEPDIR)/sxstructrep-SxStructRep.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxStructRep.cpp' object='sxstructrep-SxStructRep.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructrep_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxstructrep-SxStructRep.obj `if test -f 'SxStructRep.cpp'; then $(CYGPATH_W) 'SxStructRep.cpp'; else $(CYGPATH_W) '$(srcdir)/SxStructRep.cpp'; fi`

sxstructrot-SxStructRot.o: SxStructRot.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructrot_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxstructrot-SxStructRot.o -MD -MP -MF $(DEPDIR)/sxstructrot-SxStructRot.Tpo -c -o sxstructrot-SxStructRot.o `test -f 'SxStructRot.cpp' || echo '$(srcdir)/'`SxStructRot.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxstructrot-SxStructRot.Tpo $(DEPDIR)/sxstructrot-SxStructRot.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxStructRot.cpp' object='sxstructrot-SxStructRot.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructrot_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxstructrot-SxStructRot.o `test -f 'SxStructRot.cpp' || echo '$(srcdir)/'`SxStructRot.cpp

sxstructrot-SxStructRot.obj: SxStructRot.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructrot_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxstructrot-SxStructRot.obj -MD -MP -MF $(DEPDIR)/sxstructrot-SxStructRot.Tpo -c -o sxstructrot-SxStructRot.obj `if test -f 'SxStructRot.cpp'; then $(CYGPATH_W) 'SxStructRot.cpp'; else $(CYGPATH_W) '$(srcdir)/SxStructRot.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxstructrot-SxStructRot.Tpo $(DEPDIR)/sxstructrot-SxStructRot.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxStructRot.cpp' object='sxstructrot-SxStructRot.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructrot_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxstructrot-SxStructRot.obj `if test -f 'SxStructRot.cpp'; then $(CYGPATH_W) 'SxStructRot.cpp'; else $(CYGPATH_W) '$(srcdir)/SxStructRot.cpp'; fi`

sxstructshift-SxStructShift.o: SxStructShift.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructshift_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxstructshift-SxStructShift.o -MD -MP -MF $(DEPDIR)/sxstructshift-SxStructShift.Tpo -c -o sxstructshift-SxStructShift.o `test -f 'SxStructShift.cpp' || echo '$(srcdir)/'`SxStructShift.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxstructshift-SxStructShift.Tpo $(DEPDIR)/sxstructshift-SxStructShift.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxStructShift.cpp' object='sxstructshift-SxStructShift.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructshift_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxstructshift-SxStructShift.o `test -f 'SxStructShift.cpp' || echo '$(srcdir)/'`SxStructShift.cpp

sxstructshift-SxStructShift.obj: SxStructShift.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructshift_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxstructshift-SxStructShift.obj -MD -MP -MF $(DEPDIR)/sxstructshift-SxStructShift.Tpo -c -o sxstructshift-SxStructShift.obj `if test -f 'SxStructShift.cpp'; then $(CYGPATH_W) 'SxStructShift.cpp'; else $(CYGPATH_W) '$(srcdir)/SxStructShift.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxstructshift-SxStructShift.Tpo $(DEPDIR)/sxstructshift-SxStructShift.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxStructShift.cpp' object='sxstructshift-SxStructShift.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructshift_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxstructshift-SxStructShift.obj `if test -f 'SxStructShift.cpp'; then $(CYGPATH_W) 'SxStructShift.cpp'; else $(CYGPATH_W) '$(srcdir)/SxStructShift.cpp'; fi`

sxstructsort-SxStructSort.o: SxStructSort.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructsort_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxstructsort-SxStructSort.o -MD -MP -MF $(DEPDIR)/sxstructsort-SxStructSort.Tpo -c -o sxstructsort-SxStructSort.o `test -f 'SxStructSort.cpp' || echo '$(srcdir)/'`SxStructSort.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxstructsort-SxStructSort.Tpo $(DEPDIR)/sxstructsort-SxStructSort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxStructSort.cpp' object='sxstructsort-SxStructSort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructsort_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxstructsort-SxStructSort.o `test -f 'SxStructSort.cpp' || echo '$(srcdir)/'`SxStructSort.cpp

sxstructsort-SxStructSort.obj: SxStructSort.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructsort_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxstructsort-SxStructSort.obj -MD -MP -MF $(DEPDIR)/sxstructsort-SxStructSort.Tpo -c -o sxstructsort-SxStructSort.obj `if test -f 'SxStructSort.cpp'; then $(CYGPATH_W) 'SxStructSort.cpp'; else $(CYGPATH_W) '$(srcdir)/SxStructSort.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxstructsort-SxStructSort.Tpo $(DEPDIR)/sxstructsort-SxStructSort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxStructSort.cpp' object='sxstructsort-SxStructSort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructsort_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxstructsort-SxStructSort.obj `if test -f 'SxStructSort.cpp'; then $(CYGPATH_W) 'SxStructSort.cpp'; else $(CYGPATH_W) '$(srcdir)/SxStructSort.cpp'; fi`

sxstructsym-SxStructSym.o: SxStructSym.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructsym_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxstructsym-SxStructSym.o -MD -MP -MF $(DEPDIR)/sxstructsym-SxStructSym.Tpo -c -o sxstructsym-SxStructSym.o `test -f 'SxStructSym.cpp' || echo '$(srcdir)/'`SxStructSym.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxstructsym-SxStructSym.Tpo $(DEPDIR)/sxstructsym-SxStructSym.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxStructSym.cpp' object='sxstructsym-SxStructSym.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructsym_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxstructsym-SxStructSym.o `test -f 'SxStructSym.cpp' || echo '$(srcdir)/'`SxStructSym.cpp

sxstructsym-SxStructSym.obj: SxStructSym.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructsym_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxstructsym-SxStructSym.obj -MD -MP -MF $(DEPDIR)/sxstructsym-SxStructSym.Tpo -c -o sxstructsym-SxStructSym.obj `if test -f 'SxStructSym.cpp'; then $(CYGPATH_W) 'SxStructSym.cpp'; else $(CYGPATH_W) '$(srcdir)/SxStructSym.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxstructsym-SxStructSym.Tpo $(DEPDIR)/sxstructsym-SxStructSym.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxStructSym.cpp' object='sxstructsym-SxStructSym.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxstructsym_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxstructsym-SxStructSym.obj `if test -f 'SxStructSym.cpp'; then $(CYGPATH_W) 'SxStructSym.cpp'; else $(CYGPATH_W) '$(srcdir)/SxStructSym.cpp'; fi`

sxsym-SxSym.o: SxSym.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxsym_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxsym-SxSym.o -MD -MP -MF $(DEPDIR)/sxsym-SxSym.Tpo -c -o sxsym-SxSym.o `test -f 'SxSym.cpp' || echo '$(srcdir)/'`SxSym.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxsym-SxSym.Tpo $(DEPDIR)/sxsym-SxSym.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxSym.cpp' object='sxsym-SxSym.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxsym_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxsym-SxSym.o `test -f 'SxSym.cpp' || echo '$(srcdir)/'`SxSym.cpp

sxsym-SxSym.obj: SxSym.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxsym_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxsym-SxSym.obj -MD -MP -MF $(DEPDIR)/sxsym-SxSym.Tpo -c -o sxsym-SxSym.obj `if test -f 'SxSym.cpp'; then $(CYGPATH_W) 'SxSym.cpp'; else $(CYGPATH_W) '$(srcdir)/SxSym.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxsym-SxSym.Tpo $(DEPDIR)/sxsym-SxSym.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxSym.cpp' object='sxsym-SxSym.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxsym_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxsym-SxSym.obj `if test -f 'SxSym.cpp'; then $(CYGPATH_W) 'SxSym.cpp'; else $(CYGPATH_W) '$(srcdir)/SxSym.cpp'; fi`

sxtdos-SxTDOS.o: SxTDOS.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxtdos_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxtdos-SxTDOS.o -MD -MP -MF $(DEPDIR)/sxtdos-SxTDOS.Tpo -c -o sxtdos-SxTDOS.o `test -f 'SxTDOS.cpp' || echo '$(srcdir)/'`SxTDOS.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxtdos-SxTDOS.Tpo $(DEPDIR)/sxtdos-SxTDOS.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxTDOS.cpp' object='sxtdos-SxTDOS.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxtdos_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxtdos-SxTDOS.o `test -f 'SxTDOS.cpp' || echo '$(srcdir)/'`SxTDOS.cpp

sxtdos-SxTDOS.obj: SxTDOS.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxtdos_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxtdos-SxTDOS.obj -MD -MP -MF $(DEPDIR)/sxtdos-SxTDOS.Tpo -c -o sxtdos-SxTDOS.obj `if test -f 'SxTDOS.cpp'; then $(CYGPATH_W) 'SxTDOS.cpp'; else $(CYGPATH_W) '$(srcdir)/SxTDOS.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxtdos-SxTDOS.Tpo $(DEPDIR)/sxtdos-SxTDOS.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxTDOS.cpp' object='sxtdos-SxTDOS.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxtdos_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxtdos-SxTDOS.obj `if test -f 'SxTDOS.cpp'; then $(CYGPATH_W) 'SxTDOS.cpp'; else $(CYGPATH_W) '$(srcdir)/SxTDOS.cpp'; fi`

sxuniqdispl-SxUniqDispl.o: SxUniqDispl.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxuniqdispl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxuniqdispl-SxUniqDispl.o -MD -MP -MF $(DEPDIR)/sxuniqdispl-SxUniqDispl.Tpo -c -o sxuniqdispl-SxUniqDispl.o `test -f 'SxUniqDispl.cpp' || echo '$(srcdir)/'`SxUniqDispl.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxuniqdispl-SxUniqDispl.Tpo $(DEPDIR)/sxuniqdispl-SxUniqDispl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxUniqDispl.cpp' object='sxuniqdispl-SxUniqDispl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxuniqdispl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxuniqdispl-SxUniqDispl.o `test -f 'SxUniqDispl.cpp' || echo '$(srcdir)/'`SxUniqDispl.cpp

sxuniqdispl-SxUniqDispl.obj: SxUniqDispl.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxuniqdispl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxuniqdispl-SxUniqDispl.obj -MD -MP -MF $(DEPDIR)/sxuniqdispl-SxUniqDispl.Tpo -c -o sxuniqdispl-SxUniqDispl.obj `if test -f 'SxUniqDispl.cpp'; then $(CYGPATH_W) 'SxUniqDispl.cpp'; else $(CYGPATH_W) '$(srcdir)/SxUniqDispl.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxuniqdispl-SxUniqDispl.Tpo $(DEPDIR)/sxuniqdispl-SxUniqDispl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxUniqDispl.cpp' object='sxuniqdispl-SxUniqDispl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxuniqdispl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxuniqdispl-SxUniqDispl.obj `if test -f 'SxUniqDispl.cpp'; then $(CYGPATH_W) 'SxUniqDispl.cpp'; else $(CYGPATH_W) '$(srcdir)/SxUniqDispl.cpp'; fi`

sxwaveh5tosxb-SxWaveH5ToSxb.o: SxWaveH5ToSxb.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxwaveh5tosxb_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxwaveh5tosxb-SxWaveH5ToSxb.o -MD -MP -MF $(DEPDIR)/sxwaveh5tosxb-SxWaveH5ToSxb.Tpo -c -o sxwaveh5tosxb-SxWaveH5ToSxb.o `test -f 'SxWaveH5ToSxb.cpp' || echo '$(srcdir)/'`SxWaveH5ToSxb.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxwaveh5tosxb-SxWaveH5ToSxb.Tpo $(DEPDIR)/sxwaveh5tosxb-SxWaveH5ToSxb.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxWaveH5ToSxb.cpp' object='sxwaveh5tosxb-SxWaveH5ToSxb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxwaveh5tosxb_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxwaveh5tosxb-SxWaveH5ToSxb.o `test -f 'SxWaveH5ToSxb.cpp' || echo '$(srcdir)/'`SxWaveH5ToSxb.cpp

sxwaveh5tosxb-SxWaveH5ToSxb.obj: SxWaveH5ToSxb.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxwaveh5tosxb_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxwaveh5tosxb-SxWaveH5ToSxb.obj -MD -MP -MF $(DEPDIR)/sxwaveh5tosxb-SxWaveH5ToSxb.Tpo -c -o sxwaveh5tosxb-SxWaveH5ToSxb.obj `if test -f 'SxWaveH5ToSxb.cpp'; then $(CYGPATH_W) 'SxWaveH5ToSxb.cpp'; else $(CYGPATH_W) '$(srcdir)/SxWaveH5ToSxb.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxwaveh5tosxb-SxWaveH5ToSxb.Tpo $(DEPDIR)/sxwaveh5tosxb-SxWaveH5ToSxb.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxWaveH5ToSxb.cpp' object='sxwaveh5tosxb-SxWaveH5ToSxb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxwaveh5tosxb_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxwaveh5tosxb-SxWaveH5ToSxb.obj `if test -f 'SxWaveH5ToSxb.cpp'; then $(CYGPATH_W) 'SxWaveH5ToSxb.cpp'; else $(CYGPATH_W) '$(srcdir)/SxWaveH5ToSxb.cpp'; fi`

sxwavesym-SxWaveSym.o: SxWaveSym.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxwavesym_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxwavesym-SxWaveSym.o -MD -MP -MF $(DEPDIR)/sxwavesym-SxWaveSym.Tpo -c -o sxwavesym-SxWaveSym.o `test -f 'SxWaveSym.cpp' || echo '$(srcdir)/'`SxWaveSym.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxwavesym-SxWaveSym.Tpo $(DEPDIR)/sxwavesym-SxWaveSym.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxWaveSym.cpp' object='sxwavesym-SxWaveSym.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxwavesym_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxwavesym-SxWaveSym.o `test -f 'SxWaveSym.cpp' || echo '$(srcdir)/'`SxWaveSym.cpp

sxwavesym-SxWaveSym.obj: SxWaveSym.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxwavesym_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxwavesym-SxWaveSym.obj -MD -MP -MF $(DEPDIR)/sxwavesym-SxWaveSym.Tpo -c -o sxwavesym-SxWaveSym.obj `if test -f 'SxWaveSym.cpp'; then $(CYGPATH_W) 'SxWaveSym.cpp'; else $(CYGPATH_W) '$(srcdir)/SxWaveSym.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxwavesym-SxWaveSym.Tpo $(DEPDIR)/sxwavesym-SxWaveSym.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxWaveSym.cpp' object='sxwavesym-SxWaveSym.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxwavesym_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxwavesym-SxWaveSym.obj `if test -f 'SxWaveSym.cpp'; then $(CYGPATH_W) 'SxWaveSym.cpp'; else $(CYGPATH_W) '$(srcdir)/SxWaveSym.cpp'; fi`

sxwavetransfer-SxWaveTransfer.o: SxWaveTransfer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxwavetransfer_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxwavetransfer-SxWaveTransfer.o -MD -MP -MF $(DEPDIR)/sxwavetransfer-SxWaveTransfer.Tpo -c -o sxwavetransfer-SxWaveTransfer.o `test -f 'SxWaveTransfer.cpp' || echo '$(srcdir)/'`SxWaveTransfer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxwavetransfer-SxWaveTransfer.Tpo $(DEPDIR)/sxwavetransfer-SxWaveTransfer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxWaveTransfer.cpp' object='sxwavetransfer-SxWaveTransfer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxwavetransfer_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxwavetransfer-SxWaveTransfer.o `test -f 'SxWaveTransfer.cpp' || echo '$(srcdir)/'`SxWaveTransfer.cpp

sxwavetransfer-SxWaveTransfer.obj: SxWaveTransfer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxwavetransfer_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxwavetransfer-SxWaveTransfer.obj -MD -MP -MF $(DEPDIR)/sxwavetransfer-SxWaveTransfer.Tpo -c -o sxwavetransfer-SxWaveTransfer.obj `if test -f 'SxWaveTransfer.cpp'; then $(CYGPATH_W) 'SxWaveTransfer.cpp'; else $(CYGPATH_W) '$(srcdir)/SxWaveTransfer.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxwavetransfer-SxWaveTransfer.Tpo $(DEPDIR)/sxwavetransfer-SxWaveTransfer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxWaveTransfer.cpp' object='sxwavetransfer-SxWaveTransfer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxwavetransfer_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxwavetransfer-SxWaveTransfer.obj `if test -f 'SxWaveTransfer.cpp'; then $(CYGPATH_W) 'SxWaveTransfer.cpp'; else $(CYGPATH_W) '$(srcdir)/SxWaveTransfer.cpp'; fi`

sxzdos-SxZDOS.o: SxZDOS.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxzdos_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxzdos-SxZDOS.o -MD -MP -MF $(DEPDIR)/sxzdos-SxZDOS.Tpo -c -o sxzdos-SxZDOS.o `test -f 'SxZDOS.cpp' || echo '$(srcdir)/'`SxZDOS.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxzdos-SxZDOS.Tpo $(DEPDIR)/sxzdos-SxZDOS.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxZDOS.cpp' object='sxzdos-SxZDOS.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxzdos_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxzdos-SxZDOS.o `test -f 'SxZDOS.cpp' || echo '$(srcdir)/'`SxZDOS.cpp

sxzdos-SxZDOS.obj: SxZDOS.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxzdos_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxzdos-SxZDOS.obj -MD -MP -MF $(DEPDIR)/sxzdos-SxZDOS.Tpo -c -o sxzdos-SxZDOS.obj `if test -f 'SxZDOS.cpp'; then $(CYGPATH_W) 'SxZDOS.cpp'; else $(CYGPATH_W) '$(srcdir)/SxZDOS.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxzdos-SxZDOS.Tpo $(DEPDIR)/sxzdos-SxZDOS.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxZDOS.cpp' object='sxzdos-SxZDOS.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxzdos_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxzdos-SxZDOS.obj `if test -f 'SxZDOS.cpp'; then $(CYGPATH_W) 'SxZDOS.cpp'; else $(CYGPATH_W) '$(srcdir)/SxZDOS.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) $(SCRIPTS) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(scriptsdir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-includeHEADERS install-scriptsSCRIPTS

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-includeHEADERS \
	uninstall-scriptsSCRIPTS

.MAKE: $(am__recursive_targets) install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-am clean clean-binPROGRAMS clean-generic clean-libtool \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-includeHEADERS install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-scriptsSCRIPTS install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-includeHEADERS \
	uninstall-scriptsSCRIPTS

.PRECIOUS: Makefile


c: clean

ca: clean distclean

filelist: filelist_unix

filelist_unix:
	@echo "Updating UNIX Makefiles..."
	@a=$(UNIX_DEPDIRS) && b=$(UNIX_NUMLIBS) \
     && $(SXACCELERATE_SRC)/system/sxmkmakeinc.sh   \
         $(srcdir) $(NAME) ./Make-inc.am $(MODE) "$$a" "$$b"

msfilelist:
	@echo "Updating MSVC Project files in "`pwd`"..."
	@a=$(MSVC_DEPDIRS) && b=$(MSVC_NUMLIBS) \
     && cd $(srcdir) && $(SXACCELERATE)/bin/sxmsvcproj   \
         --name $(NAME) \
         --depth $(top_builddir) \
         --srctop $(top_srcdir) \
         --sxaccltop $(top_srcdir)/../sxaccelerate --mode $(MODE) \
         --deps "$$a,$$b"
sln:
	@echo "Project (\"{`$(getguid) $(NAME) slnFolder`}\") = \"$(NAME)\", \"$(subdir)\\$(NAME).vcproj\", \"{`$(getguid) $(NAME) slnProj`}\"" >> $(OUT)
	@echo "   ProjectSection(ProjectDependencies) = postProject" >> $(OUT)
	@for d in $(DEP_DIRS); do  \
      echo "      {`$(getguid) $$d slnDepDir`} = {`$(getguid) $$d slnDepDir`}" >> $(OUT); \
    done
	@echo "   EndProjectSection" >> $(OUT)
	@echo "EndProject" >> $(OUT)

unixdepdirs_:
	@echo $(SX_DEPLIBS)

unixdepdirs:
	@$(MAKE) @MAKE_SILENT_ARGS@\
            SXNONSTD=\@SXACCELERATE_SRC\@/nonstd \
            SXUTIL='\@SXACCELERATE_SRC\@/util \@SXACCELERATE_BUILD\@/util' \
            SXMATH=\@SXACCELERATE_SRC\@/math \
            SXFS=\@SXACCELERATE_SRC\@/fs \
            SXIPC=\@SXACCELERATE_SRC\@/ipc \
            SXIO='\@SXACCELERATE_SRC\@/io \@SXACCELERATE_BUILD\@/io' \
            SXMPI='\@SXACCELERATE_SRC\@/mpi \@SXACCELERATE_BUILD\@/mpi' \
            SXDIRAC=dirac \
            SXGEOM=geom \
            SXDFT=dft \
            SXEXX=exx \
            SXCLASSIC=classic \
            SXSTRUCT=struct \
            SXEXT=add-ons \
            unixdepdirs_

unixnumlibs_:
	@echo $(NUM_DEPLIBS)

unixnumlibs:
	@$(MAKE) @MAKE_SILENT_ARGS@\
            FFT="\@SX_FFT_LIBS\@" \
            BLAS="\@SX_BLAS_LIBS\@" \
            REGEX="" \
            NETCDF="\@SX_NETCDF_LIBS\@" \
            SHORTCUT="" \
            unixnumlibs_

msvcdepdirs_:
	@echo $(SX_DEPLIBS)

msvcdepdirs:
	@$(MAKE) @MAKE_SILENT_ARGS@\
            SXNONSTD=../../sxaccelerate/src/nonstd \
            SXUTIL=../../sxaccelerate/src/util \
            SXMATH=../../sxaccelerate/src/math \
            SXFS=../../sxaccelerate/src/fs \
            SXIPC=../../sxaccelerate/src/ipc \
            SXIO=../../sxaccelerate/src/io \
            SXMPI=../sxaccelerate/src/mpi \
            SXDIRAC=dirac \
            SXGEOM=geom \
            SXDFT=dft \
            SXEXX=exx \
            SXCLASSIC=classic \
            SXSTRUCT=struct \
            SXEXT=add-ons \
            msvcdepdirs_

msvcnumlibs_:
	@echo $(NUM_DEPLIBS)

msvcnumlibs:
	@$(MAKE) @MAKE_SILENT_ARGS@\
            FFT="" \
            BLAS="mkl_intel_c_dll.lib\;mkl_sequential_dll.lib\;mkl_core_dll.lib"\
            REGEX=gnurx.lib \
            NETCDF=netcdf.lib \
            SHORTCUT= \
            msvcnumlibs_

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
