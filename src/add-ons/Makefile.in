# Makefile.in generated by automake 1.15.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# ---------------------------------------------------------------------------
#
#      The ab-initio based multiscale library
#
#                  S / P H I / n X
#
#      Copyright:  Max-Planck-Institute for Iron Research
#                  40237 Duesseldorf, Germany
#
#      Contact:    https://sxlib.mpie.de
#      Authors:    see sphinx/AUTHORS
#      License:    see sphinx/LICENSE
#
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
#
#      The ab-initio based multiscale library
#
#                  S / P H I / n X
#
#      Copyright:  Max-Planck-Institute for Iron Research
#                  40237 Duesseldorf, Germany
#
#      Contact:    https://sxlib.mpie.de
#      Authors:    see sphinx/AUTHORS
#      License:    see sphinx/LICENSE
#
# ---------------------------------------------------------------------------
# SXACCELERATE_SRC/system/make.am.filelist
# ----------------------------------------------------------------------------
#
# Requires:
#    NAME   -  e.g. "libsxutil.a"
#    MODE   -  "libOnly"  or  "withWrappers"

# This file has been generated automatically.
# Do not edit it. Instead invoke
#    (g)make filelist
# From the source folder

# ---------------------------------------------------------------------------
#
#      The ab-initio based multiscale library
#
#                  S / P H I / n X
#
#      Copyright:  Max-Planck-Institute for Iron Research
#                  40237 Duesseldorf, Germany
#
#      Contact:    https://sxlib.mpie.de
#      Authors:    see sphinx/AUTHORS
#      License:    see sphinx/LICENSE
#
# ---------------------------------------------------------------------------
# SXDIR/src/system/make.am.components
# ----------------------------------------------------------------------------

# ---------------------------------------------------------------------------
#
#      The ab-initio based multiscale library
#
#                  S / P H I / n X
#
#      Copyright:  Max-Planck-Institute for Iron Research
#                  40237 Duesseldorf, Germany
#
#      Contact:    https://sxlib.mpie.de
#      Authors:    see sphinx/AUTHORS
#      License:    see sphinx/LICENSE
#
# ---------------------------------------------------------------------------
# SXDIR/src/system/make.am.apps
# ----------------------------------------------------------------------------





VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@COND_BUILD_WIN32_TRUE@am__append_1 = -D_EXPORT_$(NAME)
@COND_BUILD_ADDONS_TRUE@bin_PROGRAMS = sphinx$(EXEEXT) \
@COND_BUILD_ADDONS_TRUE@	sxaomattb$(EXEEXT) \
@COND_BUILD_ADDONS_TRUE@	sxdefectconc$(EXEEXT) \
@COND_BUILD_ADDONS_TRUE@	sxdielec$(EXEEXT) sxdynmat$(EXEEXT) \
@COND_BUILD_ADDONS_TRUE@	sxeprhyper$(EXEEXT) \
@COND_BUILD_ADDONS_TRUE@	sxgetskfiles$(EXEEXT) sxmurn$(EXEEXT) \
@COND_BUILD_ADDONS_TRUE@	sxpartialrho$(EXEEXT) \
@COND_BUILD_ADDONS_TRUE@	sxphonon$(EXEEXT) sxquamol$(EXEEXT) \
@COND_BUILD_ADDONS_TRUE@	sxquamolredsubspace$(EXEEXT) \
@COND_BUILD_ADDONS_TRUE@	sxslab$(EXEEXT) sxthermo$(EXEEXT) \
@COND_BUILD_ADDONS_TRUE@	sxvibrations$(EXEEXT) \
@COND_BUILD_ADDONS_TRUE@	sxwannier$(EXEEXT) \
@COND_BUILD_ADDONS_TRUE@	sxwannierham$(EXEEXT) \
@COND_BUILD_ADDONS_TRUE@	sxwavescmp$(EXEEXT) \
@COND_BUILD_ADDONS_TRUE@	sxwavesjoin$(EXEEXT)
@COND_BUILD_WIN32_TRUE@am__append_2 = -no-undefined
@COND_BUILD_WIN32_TRUE@am__append_3 = @SXACCELERATE_BUILD@/nonstd/libsxnonstd.la
@COND_BUILD_WIN32_TRUE@am__append_4 = @WIN32FLAGS@
subdir = add-ons
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps =  \
	$(top_srcdir)/../sxaccelerate/src/system/m4/sxargs.m4 \
	$(top_srcdir)/../sxaccelerate/src/system/m4/sxcompflags.m4 \
	$(top_srcdir)/../sxaccelerate/src/system/m4/sxenv.m4 \
	$(top_srcdir)/../sxaccelerate/src/system/m4/sxnumlibs.m4 \
	$(top_srcdir)/../sxaccelerate/src/system/m4/sxprint.m4 \
	$(top_srcdir)/system/m4/libtool.m4 \
	$(top_srcdir)/system/m4/ltoptions.m4 \
	$(top_srcdir)/system/m4/ltsugar.m4 \
	$(top_srcdir)/system/m4/ltversion.m4 \
	$(top_srcdir)/system/m4/lt~obsolete.m4 \
	$(top_srcdir)/system/m4/sxaccelerate.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(include_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/dummy-config \
	$(top_builddir)/dft/SxDFTConfig.h
CONFIG_CLEAN_FILES = sxget
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(scriptsdir)" "$(DESTDIR)$(scriptsdir)" \
	"$(DESTDIR)$(includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 = $(SX_DEPLIBS)
libsxext_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libsxext_la_OBJECTS = SPHInX.lo SxAOMatTB.lo SxDefectConc.lo \
	SxDielec.lo SxDynMat.lo SxEPRHyper.lo SxGetSKFiles.lo \
	SxMurn.lo SxPartialRho.lo SxPhonon.lo SxQuamol.lo \
	SxQuamolRedSubSpace.lo SxSlab.lo SxThermo.lo SxVibrations.lo \
	SxWannier.lo SxWannierHam.lo SxWavesCmp.lo SxWavesJoin.lo
libsxext_la_OBJECTS = $(am_libsxext_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
libsxext_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libsxext_la_LDFLAGS) $(LDFLAGS) -o $@
PROGRAMS = $(bin_PROGRAMS)
am_sphinx_OBJECTS = sphinx-SPHInX.$(OBJEXT)
sphinx_OBJECTS = $(am_sphinx_OBJECTS)
sphinx_DEPENDENCIES = libsxext.la $(am__DEPENDENCIES_1)
am_sxaomattb_OBJECTS = sxaomattb-SxAOMatTB.$(OBJEXT)
sxaomattb_OBJECTS = $(am_sxaomattb_OBJECTS)
sxaomattb_DEPENDENCIES = libsxext.la $(am__DEPENDENCIES_1)
am_sxdefectconc_OBJECTS = sxdefectconc-SxDefectConc.$(OBJEXT)
sxdefectconc_OBJECTS = $(am_sxdefectconc_OBJECTS)
sxdefectconc_DEPENDENCIES = libsxext.la $(am__DEPENDENCIES_1)
am_sxdielec_OBJECTS = sxdielec-SxDielec.$(OBJEXT)
sxdielec_OBJECTS = $(am_sxdielec_OBJECTS)
sxdielec_DEPENDENCIES = libsxext.la $(am__DEPENDENCIES_1)
am_sxdynmat_OBJECTS = sxdynmat-SxDynMat.$(OBJEXT)
sxdynmat_OBJECTS = $(am_sxdynmat_OBJECTS)
sxdynmat_DEPENDENCIES = libsxext.la $(am__DEPENDENCIES_1)
am_sxeprhyper_OBJECTS = sxeprhyper-SxEPRHyper.$(OBJEXT)
sxeprhyper_OBJECTS = $(am_sxeprhyper_OBJECTS)
sxeprhyper_DEPENDENCIES = libsxext.la $(am__DEPENDENCIES_1)
am_sxgetskfiles_OBJECTS = sxgetskfiles-SxGetSKFiles.$(OBJEXT)
sxgetskfiles_OBJECTS = $(am_sxgetskfiles_OBJECTS)
sxgetskfiles_DEPENDENCIES = libsxext.la $(am__DEPENDENCIES_1)
am_sxmurn_OBJECTS = sxmurn-SxMurn.$(OBJEXT)
sxmurn_OBJECTS = $(am_sxmurn_OBJECTS)
sxmurn_DEPENDENCIES = libsxext.la $(am__DEPENDENCIES_1)
am_sxpartialrho_OBJECTS = sxpartialrho-SxPartialRho.$(OBJEXT)
sxpartialrho_OBJECTS = $(am_sxpartialrho_OBJECTS)
sxpartialrho_DEPENDENCIES = libsxext.la $(am__DEPENDENCIES_1)
am_sxphonon_OBJECTS = sxphonon-SxPhonon.$(OBJEXT)
sxphonon_OBJECTS = $(am_sxphonon_OBJECTS)
sxphonon_DEPENDENCIES = libsxext.la $(am__DEPENDENCIES_1)
am_sxquamol_OBJECTS = sxquamol-SxQuamol.$(OBJEXT)
sxquamol_OBJECTS = $(am_sxquamol_OBJECTS)
sxquamol_DEPENDENCIES = libsxext.la $(am__DEPENDENCIES_1)
am_sxquamolredsubspace_OBJECTS =  \
	sxquamolredsubspace-SxQuamolRedSubSpace.$(OBJEXT)
sxquamolredsubspace_OBJECTS = $(am_sxquamolredsubspace_OBJECTS)
sxquamolredsubspace_DEPENDENCIES = libsxext.la $(am__DEPENDENCIES_1)
am_sxslab_OBJECTS = sxslab-SxSlab.$(OBJEXT)
sxslab_OBJECTS = $(am_sxslab_OBJECTS)
sxslab_DEPENDENCIES = libsxext.la $(am__DEPENDENCIES_1)
am_sxthermo_OBJECTS = sxthermo-SxThermo.$(OBJEXT)
sxthermo_OBJECTS = $(am_sxthermo_OBJECTS)
sxthermo_DEPENDENCIES = libsxext.la $(am__DEPENDENCIES_1)
am_sxvibrations_OBJECTS = sxvibrations-SxVibrations.$(OBJEXT)
sxvibrations_OBJECTS = $(am_sxvibrations_OBJECTS)
sxvibrations_DEPENDENCIES = libsxext.la $(am__DEPENDENCIES_1)
am_sxwannier_OBJECTS = sxwannier-SxWannier.$(OBJEXT)
sxwannier_OBJECTS = $(am_sxwannier_OBJECTS)
sxwannier_DEPENDENCIES = libsxext.la $(am__DEPENDENCIES_1)
am_sxwannierham_OBJECTS = sxwannierham-SxWannierHam.$(OBJEXT)
sxwannierham_OBJECTS = $(am_sxwannierham_OBJECTS)
sxwannierham_DEPENDENCIES = libsxext.la $(am__DEPENDENCIES_1)
am_sxwavescmp_OBJECTS = sxwavescmp-SxWavesCmp.$(OBJEXT)
sxwavescmp_OBJECTS = $(am_sxwavescmp_OBJECTS)
sxwavescmp_DEPENDENCIES = libsxext.la $(am__DEPENDENCIES_1)
am_sxwavesjoin_OBJECTS = sxwavesjoin-SxWavesJoin.$(OBJEXT)
sxwavesjoin_OBJECTS = $(am_sxwavesjoin_OBJECTS)
sxwavesjoin_DEPENDENCIES = libsxext.la $(am__DEPENDENCIES_1)
SCRIPTS = $(scripts_SCRIPTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir) -I$(top_builddir)/dft
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libsxext_la_SOURCES) $(sphinx_SOURCES) \
	$(sxaomattb_SOURCES) $(sxdefectconc_SOURCES) \
	$(sxdielec_SOURCES) $(sxdynmat_SOURCES) $(sxeprhyper_SOURCES) \
	$(sxgetskfiles_SOURCES) $(sxmurn_SOURCES) \
	$(sxpartialrho_SOURCES) $(sxphonon_SOURCES) \
	$(sxquamol_SOURCES) $(sxquamolredsubspace_SOURCES) \
	$(sxslab_SOURCES) $(sxthermo_SOURCES) $(sxvibrations_SOURCES) \
	$(sxwannier_SOURCES) $(sxwannierham_SOURCES) \
	$(sxwavescmp_SOURCES) $(sxwavesjoin_SOURCES)
DIST_SOURCES = $(libsxext_la_SOURCES) $(sphinx_SOURCES) \
	$(sxaomattb_SOURCES) $(sxdefectconc_SOURCES) \
	$(sxdielec_SOURCES) $(sxdynmat_SOURCES) $(sxeprhyper_SOURCES) \
	$(sxgetskfiles_SOURCES) $(sxmurn_SOURCES) \
	$(sxpartialrho_SOURCES) $(sxphonon_SOURCES) \
	$(sxquamol_SOURCES) $(sxquamolredsubspace_SOURCES) \
	$(sxslab_SOURCES) $(sxthermo_SOURCES) $(sxvibrations_SOURCES) \
	$(sxwannier_SOURCES) $(sxwannierham_SOURCES) \
	$(sxwavescmp_SOURCES) $(sxwavesjoin_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(scripts_DATA)
HEADERS = $(include_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Make-inc.am $(srcdir)/Makefile.in \
	$(srcdir)/sxget.pl.in $(top_srcdir)/depcomp \
	$(top_srcdir)/system/make.am.apps \
	$(top_srcdir)/system/make.am.components \
	$(top_srcdir)/system/make.am.filelist
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_CXXFLAGS = @AM_CXXFLAGS@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CP_A = @CP_A@
CUDA = @CUDA@
CUDA_CFLAGS = @CUDA_CFLAGS@
CUDA_LDFLAGS = @CUDA_LDFLAGS@
CUDA_LIBS = @CUDA_LIBS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CXXLD = @CXXLD@
CXX_M_ARCH = @CXX_M_ARCH@
CXX_PEDANTIC = @CXX_PEDANTIC@
CXX_WARNING_IS_ERROR = @CXX_WARNING_IS_ERROR@
CYGPATH_W = @CYGPATH_W@
DBG_MODE = @DBG_MODE@

# --- avoid automatic definition of -DPACKAGE* as they are redefined
#     by automake in SxConfig.h anyway
#     that's why we overwrite DEFS explicitly.
DEFS = -DLDFLAGS="\"$(AM_LDFLAGS) $(LDFLAGS)\""
DEPDIR = @DEPDIR@
DIST_MAJOR = @DIST_MAJOR@
DIST_MINOR = @DIST_MINOR@
DIST_NAME = @DIST_NAME@
DIST_OS = @DIST_OS@
DIST_PATCH = @DIST_PATCH@
DIST_REPO_VER = @DIST_REPO_VER@
DIST_VERSION = @DIST_VERSION@
DLLLIBEXT = @DLLLIBEXT@
DLLTOOL = @DLLTOOL@
DOXYGEN = @DOXYGEN@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
FIND = @FIND@
GCCERRORLIMIT = @GCCERRORLIMIT@
GDB = @GDB@
GREP = @GREP@
IMPLIBEXT = @IMPLIBEXT@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDD = @LDD@
LDD_AWK_COL = @LDD_AWK_COL@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_CXXFLAGS = @LEX_CXXFLAGS@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBEXT = @LIBEXT@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MACHINE_SPECIFIC = @MACHINE_SPECIFIC@
MAKEINFO = @MAKEINFO@
MAKE_SILENT_ARGS = @MAKE_SILENT_ARGS@
MANIFEST_TOOL = @MANIFEST_TOOL@
MEMTRACER = @MEMTRACER@
MKDIR_P = @MKDIR_P@
MKLPATH = @MKLPATH@
MPICC = @MPICC@
MPICXX = @MPICXX@
NM = @NM@
NMEDIT = @NMEDIT@
NUMLIBS = @NUMLIBS@
NUMLIBS_CHECKS = @NUMLIBS_CHECKS@
NVCC = @NVCC@
OBJCXX = @OBJCXX@
OBJCXXDEPMODE = @OBJCXXDEPMODE@
OBJCXXFLAGS = @OBJCXXFLAGS@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_TYPE = @PKG_TYPE@
PROCESSOR = @PROCESSOR@
PRO_MODE = @PRO_MODE@
RANLIB = @RANLIB@
REPOPROC = @REPOPROC@
RM = @RM@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHARED_VERSION_INFO = @SHARED_VERSION_INFO@
SHELL = @SHELL@
STRIP = @STRIP@
SUBDIRS = @SUBDIRS@
SXACCELERATE = @SXACCELERATE@
SXACCELERATE_BUILD = @SXACCELERATE_BUILD@
SXACCELERATE_SRC = @SXACCELERATE_SRC@
SXBINTARGET = @SXBINTARGET@
SXDIR = @SXDIR@
SXLIBTOOL = @SXLIBTOOL@
SX_BLAS_LIBS = @SX_BLAS_LIBS@
SX_FFT_LIBS = @SX_FFT_LIBS@
SX_NETCDF_LIBS = @SX_NETCDF_LIBS@
SX_PARAM_ACML = @SX_PARAM_ACML@
SX_PARAM_ACMLFFT = @SX_PARAM_ACMLFFT@
SX_PARAM_ATLAS = @SX_PARAM_ATLAS@
SX_PARAM_FFTW = @SX_PARAM_FFTW@
SX_PARAM_MKL = @SX_PARAM_MKL@
SX_PARAM_MKLFFT = @SX_PARAM_MKLFFT@
SX_PARAM_NUMLIBS = @SX_PARAM_NUMLIBS@
SX_PARAM_SXMATH = @SX_PARAM_SXMATH@
SX_SHORTCUT_LIBS = @SX_SHORTCUT_LIBS@
TAIL = @TAIL@
TODAY = @TODAY@
UNAME = @UNAME@
USE_ACML = @USE_ACML@
USE_ACML_FFT = @USE_ACML_FFT@
USE_ATLAS = @USE_ATLAS@
USE_FFTW = @USE_FFTW@
USE_GOTO = @USE_GOTO@
USE_GPU = @USE_GPU@
USE_HDF5 = @USE_HDF5@
USE_INTEL_MKL = @USE_INTEL_MKL@
USE_MKL_FFT = @USE_MKL_FFT@
USE_MPI = @USE_MPI@
USE_NETCDF4 = @USE_NETCDF4@
USE_OPENMP = @USE_OPENMP@
USE_PARALLEL_NETCDF4 = @USE_PARALLEL_NETCDF4@
USE_PCRE2 = @USE_PCRE2@
USE_SXGEMMM = @USE_SXGEMMM@
USE_SX_LOG = @USE_SX_LOG@
VERSION = "1:0:0"
WHOAMI = @WHOAMI@
WITH_ADDONS = @WITH_ADDONS@
WITH_DBGDIR = @WITH_DBGDIR@
WITH_EXAMPLES = @WITH_EXAMPLES@
WITH_TESTS = @WITH_TESTS@
WITH_TOOLS = @WITH_TOOLS@
WITH_VIM_SYNTAX = @WITH_VIM_SYNTAX@
YACC = @YACC@
YFLAGS = @YFLAGS@
ZCAT = @ZCAT@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_GDB = @ac_ct_GDB@
ac_ct_MPICC = @ac_ct_MPICC@
ac_ct_MPICXX = @ac_ct_MPICXX@
ac_ct_OBJCXX = @ac_ct_OBJCXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
NAME = "sxext"
MODE = "withApps"
SX_DEPLIBS = $(SXSTRUCT) $(SXDFT) $(SXGEOM) $(SXCLASSIC) $(SXEXX) \
	$(SXDIRAC) $(SXIO) $(SXIPC) $(SXFS) $(SXMATH) $(SXUTIL) \
	$(SXNONSTD) $(SXMPI)
NUM_DEPLIBS = $(FFT) $(BLAS) $(NETCDF) $(REGEX) $(SHORTCUT)

# ----------------------------------------------------------------------------
ACLOCAL_AMFLAGS = -I system/m4
scriptsdir = $(prefix)/scripts
scripts_SCRIPTS = sxget

# --- setup proper export/import behavior for shared libs
# done here, since stuff in config header is always from sxbase
AM_CPPFLAGS = $(am__append_1) -I$(top_builddir)/struct \
	-I$(top_srcdir)/struct -I$(top_builddir)/dft \
	-I$(top_srcdir)/dft -I$(top_builddir)/geom \
	-I$(top_srcdir)/geom -I$(top_builddir)/classic \
	-I$(top_srcdir)/classic -I$(top_builddir)/exx \
	-I$(top_srcdir)/exx -I$(top_builddir)/dirac \
	-I$(top_srcdir)/dirac -I@SXACCELERATE_SRC@/io \
	-I@SXACCELERATE_BUILD@/io -I@SXACCELERATE_SRC@/ipc \
	-I@SXACCELERATE_SRC@/fs -I@SXACCELERATE_SRC@/math \
	-I@SXACCELERATE_SRC@/util -I@SXACCELERATE_BUILD@/util \
	-I@SXACCELERATE_SRC@/nonstd -I@SXACCELERATE_SRC@/mpi \
	-I@SXACCELERATE_BUILD@/mpi -I$(abs_builddir) -I$(srcdir) \
	@CXX_PEDANTIC@ -I@NUMLIBS@/include $(am__append_4) \
	@CXX_PEDANTIC@ -DSXDATE=`date +%s` \
	-DSXPACKAGE='"@PACKAGE_NAME@"' \
	-DSXRELEASE='"@PACKAGE_VERSION@"' @CXX_PEDANTIC@

# --- define dynamic files to be deleted at "make clean"
tmp_filelists = .files .files.cur MAKE.log

# --- clean up files
CLEANFILES = $(tmp_filelists) $(abs_builddir)/*.tab.cpp \
	$(abs_builddir)/*.tab.hpp $(abs_builddir)/*.yy.cpp \
	$(abs_builddir)/*-x.cpp $(abs_builddir)/*.log $(bin_SCRIPTS)

# --- print dependencies (used to generate MSVC solution files)
getguid = $(top_srcdir)/system/sxmkguid.sh $(subdir) $(abs_srcdir)
include_HEADERS = SPHInX.h \
                  SxAOMatTB.h \
                  SxDefectConc.h \
                  SxDielec.h \
                  SxDynMat.h \
                  SxEPRHyper.h \
                  SxExt.h \
                  SxGetSKFiles.h \
                  SxMurn.h \
                  SxPartialRho.h \
                  SxPhonon.h \
                  SxQuamol.h \
                  SxQuamolRedSubSpace.h \
                  SxSlab.h \
                  SxTestbed.h \
                  SxThermo.h \
                  SxVibrations.h \
                  SxWannier.h \
                  SxWannierHam.h \
                  SxWavesCmp.h \
                  SxWavesJoin.h

lib_LTLIBRARIES = libsxext.la
libsxext_la_SOURCES = $(AUX_SRC) SPHInX.cpp SxAOMatTB.cpp \
	SxDefectConc.cpp SxDielec.cpp SxDynMat.cpp SxEPRHyper.cpp \
	SxGetSKFiles.cpp SxMurn.cpp SxPartialRho.cpp SxPhonon.cpp \
	SxQuamol.cpp SxQuamolRedSubSpace.cpp SxSlab.cpp SxThermo.cpp \
	SxVibrations.cpp SxWannier.cpp SxWannierHam.cpp SxWavesCmp.cpp \
	SxWavesJoin.cpp
libsxext_la_LIBADD = $(SXIMPORTLIBS) @SX_FFT_LIBS@ @SX_BLAS_LIBS@ \
	@SX_NETCDF_LIBS@ $(SXIMPORTOBJS)
libsxext_la_LDFLAGS = -version-info $(VERSION) $(am__append_2)
sphinx_SOURCES = $(AUX_SRC) SPHInX.cpp
sphinx_CPPFLAGS = $(AM_CPPFLAGS) -DSX_STANDALONE \
	-DSXLIBTOOL="\"@SXLIBTOOL@\""
sphinx_LDADD = libsxext.la $(SXIMPORTLIBS) @SX_FFT_LIBS@ \
	@SX_BLAS_LIBS@ @SX_NETCDF_LIBS@ $(SXIMPORTOBJS)
sxaomattb_SOURCES = $(AUX_SRC) SxAOMatTB.cpp
sxaomattb_CPPFLAGS = $(AM_CPPFLAGS) -DSX_STANDALONE \
	-DSXLIBTOOL="\"@SXLIBTOOL@\""
sxaomattb_LDADD = libsxext.la $(SXIMPORTLIBS) @SX_FFT_LIBS@ \
	@SX_BLAS_LIBS@ @SX_NETCDF_LIBS@ $(SXIMPORTOBJS)
sxdefectconc_SOURCES = $(AUX_SRC) SxDefectConc.cpp
sxdefectconc_CPPFLAGS = $(AM_CPPFLAGS) -DSX_STANDALONE \
	-DSXLIBTOOL="\"@SXLIBTOOL@\""
sxdefectconc_LDADD = libsxext.la $(SXIMPORTLIBS) @SX_FFT_LIBS@ \
	@SX_BLAS_LIBS@ @SX_NETCDF_LIBS@ $(SXIMPORTOBJS)
sxdielec_SOURCES = $(AUX_SRC) SxDielec.cpp
sxdielec_CPPFLAGS = $(AM_CPPFLAGS) -DSX_STANDALONE \
	-DSXLIBTOOL="\"@SXLIBTOOL@\""
sxdielec_LDADD = libsxext.la $(SXIMPORTLIBS) @SX_FFT_LIBS@ \
	@SX_BLAS_LIBS@ @SX_NETCDF_LIBS@ $(SXIMPORTOBJS)
sxdynmat_SOURCES = $(AUX_SRC) SxDynMat.cpp
sxdynmat_CPPFLAGS = $(AM_CPPFLAGS) -DSX_STANDALONE \
	-DSXLIBTOOL="\"@SXLIBTOOL@\""
sxdynmat_LDADD = libsxext.la $(SXIMPORTLIBS) @SX_FFT_LIBS@ \
	@SX_BLAS_LIBS@ @SX_NETCDF_LIBS@ $(SXIMPORTOBJS)
sxeprhyper_SOURCES = $(AUX_SRC) SxEPRHyper.cpp
sxeprhyper_CPPFLAGS = $(AM_CPPFLAGS) -DSX_STANDALONE \
	-DSXLIBTOOL="\"@SXLIBTOOL@\""
sxeprhyper_LDADD = libsxext.la $(SXIMPORTLIBS) @SX_FFT_LIBS@ \
	@SX_BLAS_LIBS@ @SX_NETCDF_LIBS@ $(SXIMPORTOBJS)
sxgetskfiles_SOURCES = $(AUX_SRC) SxGetSKFiles.cpp
sxgetskfiles_CPPFLAGS = $(AM_CPPFLAGS) -DSX_STANDALONE \
	-DSXLIBTOOL="\"@SXLIBTOOL@\""
sxgetskfiles_LDADD = libsxext.la $(SXIMPORTLIBS) @SX_FFT_LIBS@ \
	@SX_BLAS_LIBS@ @SX_NETCDF_LIBS@ $(SXIMPORTOBJS)
sxmurn_SOURCES = $(AUX_SRC) SxMurn.cpp
sxmurn_CPPFLAGS = $(AM_CPPFLAGS) -DSX_STANDALONE \
	-DSXLIBTOOL="\"@SXLIBTOOL@\""
sxmurn_LDADD = libsxext.la $(SXIMPORTLIBS) @SX_FFT_LIBS@ \
	@SX_BLAS_LIBS@ @SX_NETCDF_LIBS@ $(SXIMPORTOBJS)
sxpartialrho_SOURCES = $(AUX_SRC) SxPartialRho.cpp
sxpartialrho_CPPFLAGS = $(AM_CPPFLAGS) -DSX_STANDALONE \
	-DSXLIBTOOL="\"@SXLIBTOOL@\""
sxpartialrho_LDADD = libsxext.la $(SXIMPORTLIBS) @SX_FFT_LIBS@ \
	@SX_BLAS_LIBS@ @SX_NETCDF_LIBS@ $(SXIMPORTOBJS)
sxphonon_SOURCES = $(AUX_SRC) SxPhonon.cpp
sxphonon_CPPFLAGS = $(AM_CPPFLAGS) -DSX_STANDALONE \
	-DSXLIBTOOL="\"@SXLIBTOOL@\""
sxphonon_LDADD = libsxext.la $(SXIMPORTLIBS) @SX_FFT_LIBS@ \
	@SX_BLAS_LIBS@ @SX_NETCDF_LIBS@ $(SXIMPORTOBJS)
sxquamol_SOURCES = $(AUX_SRC) SxQuamol.cpp
sxquamol_CPPFLAGS = $(AM_CPPFLAGS) -DSX_STANDALONE \
	-DSXLIBTOOL="\"@SXLIBTOOL@\""
sxquamol_LDADD = libsxext.la $(SXIMPORTLIBS) @SX_FFT_LIBS@ \
	@SX_BLAS_LIBS@ @SX_NETCDF_LIBS@ $(SXIMPORTOBJS)
sxquamolredsubspace_SOURCES = $(AUX_SRC) SxQuamolRedSubSpace.cpp
sxquamolredsubspace_CPPFLAGS = $(AM_CPPFLAGS) -DSX_STANDALONE \
	-DSXLIBTOOL="\"@SXLIBTOOL@\""
sxquamolredsubspace_LDADD = libsxext.la $(SXIMPORTLIBS) @SX_FFT_LIBS@ \
	@SX_BLAS_LIBS@ @SX_NETCDF_LIBS@ $(SXIMPORTOBJS)
sxslab_SOURCES = $(AUX_SRC) SxSlab.cpp
sxslab_CPPFLAGS = $(AM_CPPFLAGS) -DSX_STANDALONE \
	-DSXLIBTOOL="\"@SXLIBTOOL@\""
sxslab_LDADD = libsxext.la $(SXIMPORTLIBS) @SX_FFT_LIBS@ \
	@SX_BLAS_LIBS@ @SX_NETCDF_LIBS@ $(SXIMPORTOBJS)
sxthermo_SOURCES = $(AUX_SRC) SxThermo.cpp
sxthermo_CPPFLAGS = $(AM_CPPFLAGS) -DSX_STANDALONE \
	-DSXLIBTOOL="\"@SXLIBTOOL@\""
sxthermo_LDADD = libsxext.la $(SXIMPORTLIBS) @SX_FFT_LIBS@ \
	@SX_BLAS_LIBS@ @SX_NETCDF_LIBS@ $(SXIMPORTOBJS)
sxvibrations_SOURCES = $(AUX_SRC) SxVibrations.cpp
sxvibrations_CPPFLAGS = $(AM_CPPFLAGS) -DSX_STANDALONE \
	-DSXLIBTOOL="\"@SXLIBTOOL@\""
sxvibrations_LDADD = libsxext.la $(SXIMPORTLIBS) @SX_FFT_LIBS@ \
	@SX_BLAS_LIBS@ @SX_NETCDF_LIBS@ $(SXIMPORTOBJS)
sxwannier_SOURCES = $(AUX_SRC) SxWannier.cpp
sxwannier_CPPFLAGS = $(AM_CPPFLAGS) -DSX_STANDALONE \
	-DSXLIBTOOL="\"@SXLIBTOOL@\""
sxwannier_LDADD = libsxext.la $(SXIMPORTLIBS) @SX_FFT_LIBS@ \
	@SX_BLAS_LIBS@ @SX_NETCDF_LIBS@ $(SXIMPORTOBJS)
sxwannierham_SOURCES = $(AUX_SRC) SxWannierHam.cpp
sxwannierham_CPPFLAGS = $(AM_CPPFLAGS) -DSX_STANDALONE \
	-DSXLIBTOOL="\"@SXLIBTOOL@\""
sxwannierham_LDADD = libsxext.la $(SXIMPORTLIBS) @SX_FFT_LIBS@ \
	@SX_BLAS_LIBS@ @SX_NETCDF_LIBS@ $(SXIMPORTOBJS)
sxwavescmp_SOURCES = $(AUX_SRC) SxWavesCmp.cpp
sxwavescmp_CPPFLAGS = $(AM_CPPFLAGS) -DSX_STANDALONE \
	-DSXLIBTOOL="\"@SXLIBTOOL@\""
sxwavescmp_LDADD = libsxext.la $(SXIMPORTLIBS) @SX_FFT_LIBS@ \
	@SX_BLAS_LIBS@ @SX_NETCDF_LIBS@ $(SXIMPORTOBJS)
sxwavesjoin_SOURCES = $(AUX_SRC) SxWavesJoin.cpp
sxwavesjoin_CPPFLAGS = $(AM_CPPFLAGS) -DSX_STANDALONE \
	-DSXLIBTOOL="\"@SXLIBTOOL@\""
sxwavesjoin_LDADD = libsxext.la $(SXIMPORTLIBS) @SX_FFT_LIBS@ \
	@SX_BLAS_LIBS@ @SX_NETCDF_LIBS@ $(SXIMPORTOBJS)

# --- numlibs
FFT = 
BLAS = 
REGEX = 
NETCDF = 
SHORTCUT = 

# --- S/PHI/nX BaseLibs
SXNONSTD = $(am__append_3)
@COND_BUILD_ACCELERATE_FALSE@SXUTIL = @SXACCELERATE_BUILD@/lib/@SXBINTARGET@/libsxutil.la
@COND_BUILD_ACCELERATE_TRUE@SXUTIL = $(SXACCELERATE_BUILD)/util/libsxutil.la
@COND_BUILD_ACCELERATE_FALSE@SXMATH = @SXACCELERATE_BUILD@/lib/@SXBINTARGET@/libsxmath.la
@COND_BUILD_ACCELERATE_TRUE@SXMATH = $(SXACCELERATE_BUILD)/math/libsxmath.la
@COND_BUILD_ACCELERATE_FALSE@SXFS = @SXACCELERATE_BUILD@/lib/@SXBINTARGET@/libsxfs.la
@COND_BUILD_ACCELERATE_TRUE@SXFS = $(SXACCELERATE_BUILD)/fs/libsxfs.la
@COND_BUILD_ACCELERATE_FALSE@SXIPC = @SXACCELERATE_BUILD@/lib/@SXBINTARGET@/libsxipc.la
@COND_BUILD_ACCELERATE_TRUE@SXIPC = $(SXACCELERATE_BUILD)/ipc/libsxipc.la
@COND_BUILD_ACCELERATE_FALSE@SXIO = @SXACCELERATE_BUILD@/lib/@SXBINTARGET@/libsxio.la
@COND_BUILD_ACCELERATE_TRUE@SXIO = $(SXACCELERATE_BUILD)/io/libsxio.la
@COND_BUILD_ACCELERATE_FALSE@SXMPI = @SXACCELERATE_BUILD@/lib/libsxmpi.la
@COND_BUILD_ACCELERATE_TRUE@SXMPI = $(SXACCELERATE_BUILD)/mpi/libsxmpi.la

# --- S/PHI/nX PhysLibs
SXDIRAC = $(top_builddir)/dirac/libsxdirac.la
SXGEOM = $(top_builddir)/geom/libsxgeom.la
SXDFT = $(top_builddir)/dft/libsxdft.la
SXEXX = $(top_builddir)/exx/libsxexx.la
SXCLASSIC = $(top_builddir)/classic/libsxclassic.la
SXSTRUCT = $(top_builddir)/struct/libsxstruct.la
SXEXT = $(top_builddir)/add-ons/libsxext.la
SXPLAY = $(top_builddir)/playground/libsxplay.la
SXIMPORTLIBS = $(EXT_LIBS) $(SX_DEPLIBS) @LIBS@

# --- save linkage for external usage
#scripts_SCRIPTS += $(top_srcdir)/system/sphinx.$(NAME).opts
#CLEANFILES  += $(top_srcdir)/system/sphinx.$(NAME).opts
#$(top_srcdir)/system/sphinx.$(NAME).opts:
#	@test -f $@ -o x"$(MODE)" = x"withBin" \
#    || echo `echo $(NAME) | tr "[:lower:]" "[:upper:]"`"=\"lib$(NAME).la $(UNIX_NUMLIBS)\"" \
#    > $@

# --- prepare dependencies for UNIX makefiles
UNIX_DEPDIRS = `$(MAKE) @MAKE_SILENT_ARGS@ unixdepdirs | tail -1`
UNIX_NUMLIBS = `$(MAKE) @MAKE_SILENT_ARGS@ unixnumlibs | tail -1`

# --- prepare dependencies for MSVC
MSVC_DEPDIRS = `$(MAKE) @MAKE_SILENT_ARGS@ msvcdepdirs | tail -1`
MSVC_NUMLIBS = `$(MAKE) @MAKE_SILENT_ARGS@ msvcnumlibs | tail -1`
scripts_DATA = sxget.rc
EXTRA_DIST = sxget.rc hamiltonian.vim sphinx.vim sxcomplete.pl
all: all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/system/make.am.filelist $(srcdir)/Make-inc.am $(top_srcdir)/system/make.am.components $(top_srcdir)/system/make.am.apps $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign add-ons/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign add-ons/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/system/make.am.filelist $(srcdir)/Make-inc.am $(top_srcdir)/system/make.am.components $(top_srcdir)/system/make.am.apps $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
sxget: $(top_builddir)/config.status $(srcdir)/sxget.pl.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libsxext.la: $(libsxext_la_OBJECTS) $(libsxext_la_DEPENDENCIES) $(EXTRA_libsxext_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libsxext_la_LINK) -rpath $(libdir) $(libsxext_la_OBJECTS) $(libsxext_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

sphinx$(EXEEXT): $(sphinx_OBJECTS) $(sphinx_DEPENDENCIES) $(EXTRA_sphinx_DEPENDENCIES) 
	@rm -f sphinx$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sphinx_OBJECTS) $(sphinx_LDADD) $(LIBS)

sxaomattb$(EXEEXT): $(sxaomattb_OBJECTS) $(sxaomattb_DEPENDENCIES) $(EXTRA_sxaomattb_DEPENDENCIES) 
	@rm -f sxaomattb$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxaomattb_OBJECTS) $(sxaomattb_LDADD) $(LIBS)

sxdefectconc$(EXEEXT): $(sxdefectconc_OBJECTS) $(sxdefectconc_DEPENDENCIES) $(EXTRA_sxdefectconc_DEPENDENCIES) 
	@rm -f sxdefectconc$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxdefectconc_OBJECTS) $(sxdefectconc_LDADD) $(LIBS)

sxdielec$(EXEEXT): $(sxdielec_OBJECTS) $(sxdielec_DEPENDENCIES) $(EXTRA_sxdielec_DEPENDENCIES) 
	@rm -f sxdielec$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxdielec_OBJECTS) $(sxdielec_LDADD) $(LIBS)

sxdynmat$(EXEEXT): $(sxdynmat_OBJECTS) $(sxdynmat_DEPENDENCIES) $(EXTRA_sxdynmat_DEPENDENCIES) 
	@rm -f sxdynmat$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxdynmat_OBJECTS) $(sxdynmat_LDADD) $(LIBS)

sxeprhyper$(EXEEXT): $(sxeprhyper_OBJECTS) $(sxeprhyper_DEPENDENCIES) $(EXTRA_sxeprhyper_DEPENDENCIES) 
	@rm -f sxeprhyper$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxeprhyper_OBJECTS) $(sxeprhyper_LDADD) $(LIBS)

sxgetskfiles$(EXEEXT): $(sxgetskfiles_OBJECTS) $(sxgetskfiles_DEPENDENCIES) $(EXTRA_sxgetskfiles_DEPENDENCIES) 
	@rm -f sxgetskfiles$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxgetskfiles_OBJECTS) $(sxgetskfiles_LDADD) $(LIBS)

sxmurn$(EXEEXT): $(sxmurn_OBJECTS) $(sxmurn_DEPENDENCIES) $(EXTRA_sxmurn_DEPENDENCIES) 
	@rm -f sxmurn$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxmurn_OBJECTS) $(sxmurn_LDADD) $(LIBS)

sxpartialrho$(EXEEXT): $(sxpartialrho_OBJECTS) $(sxpartialrho_DEPENDENCIES) $(EXTRA_sxpartialrho_DEPENDENCIES) 
	@rm -f sxpartialrho$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxpartialrho_OBJECTS) $(sxpartialrho_LDADD) $(LIBS)

sxphonon$(EXEEXT): $(sxphonon_OBJECTS) $(sxphonon_DEPENDENCIES) $(EXTRA_sxphonon_DEPENDENCIES) 
	@rm -f sxphonon$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxphonon_OBJECTS) $(sxphonon_LDADD) $(LIBS)

sxquamol$(EXEEXT): $(sxquamol_OBJECTS) $(sxquamol_DEPENDENCIES) $(EXTRA_sxquamol_DEPENDENCIES) 
	@rm -f sxquamol$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxquamol_OBJECTS) $(sxquamol_LDADD) $(LIBS)

sxquamolredsubspace$(EXEEXT): $(sxquamolredsubspace_OBJECTS) $(sxquamolredsubspace_DEPENDENCIES) $(EXTRA_sxquamolredsubspace_DEPENDENCIES) 
	@rm -f sxquamolredsubspace$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxquamolredsubspace_OBJECTS) $(sxquamolredsubspace_LDADD) $(LIBS)

sxslab$(EXEEXT): $(sxslab_OBJECTS) $(sxslab_DEPENDENCIES) $(EXTRA_sxslab_DEPENDENCIES) 
	@rm -f sxslab$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxslab_OBJECTS) $(sxslab_LDADD) $(LIBS)

sxthermo$(EXEEXT): $(sxthermo_OBJECTS) $(sxthermo_DEPENDENCIES) $(EXTRA_sxthermo_DEPENDENCIES) 
	@rm -f sxthermo$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxthermo_OBJECTS) $(sxthermo_LDADD) $(LIBS)

sxvibrations$(EXEEXT): $(sxvibrations_OBJECTS) $(sxvibrations_DEPENDENCIES) $(EXTRA_sxvibrations_DEPENDENCIES) 
	@rm -f sxvibrations$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxvibrations_OBJECTS) $(sxvibrations_LDADD) $(LIBS)

sxwannier$(EXEEXT): $(sxwannier_OBJECTS) $(sxwannier_DEPENDENCIES) $(EXTRA_sxwannier_DEPENDENCIES) 
	@rm -f sxwannier$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxwannier_OBJECTS) $(sxwannier_LDADD) $(LIBS)

sxwannierham$(EXEEXT): $(sxwannierham_OBJECTS) $(sxwannierham_DEPENDENCIES) $(EXTRA_sxwannierham_DEPENDENCIES) 
	@rm -f sxwannierham$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxwannierham_OBJECTS) $(sxwannierham_LDADD) $(LIBS)

sxwavescmp$(EXEEXT): $(sxwavescmp_OBJECTS) $(sxwavescmp_DEPENDENCIES) $(EXTRA_sxwavescmp_DEPENDENCIES) 
	@rm -f sxwavescmp$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxwavescmp_OBJECTS) $(sxwavescmp_LDADD) $(LIBS)

sxwavesjoin$(EXEEXT): $(sxwavesjoin_OBJECTS) $(sxwavesjoin_DEPENDENCIES) $(EXTRA_sxwavesjoin_DEPENDENCIES) 
	@rm -f sxwavesjoin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sxwavesjoin_OBJECTS) $(sxwavesjoin_LDADD) $(LIBS)
install-scriptsSCRIPTS: $(scripts_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(scripts_SCRIPTS)'; test -n "$(scriptsdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(scriptsdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(scriptsdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(scriptsdir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(scriptsdir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-scriptsSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(scripts_SCRIPTS)'; test -n "$(scriptsdir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(scriptsdir)'; $(am__uninstall_files_from_dir)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SPHInX.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SxAOMatTB.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SxDefectConc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SxDielec.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SxDynMat.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SxEPRHyper.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SxGetSKFiles.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SxMurn.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SxPartialRho.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SxPhonon.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SxQuamol.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SxQuamolRedSubSpace.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SxSlab.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SxThermo.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SxVibrations.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SxWannier.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SxWannierHam.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SxWavesCmp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SxWavesJoin.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sphinx-SPHInX.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxaomattb-SxAOMatTB.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxdefectconc-SxDefectConc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxdielec-SxDielec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxdynmat-SxDynMat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxeprhyper-SxEPRHyper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxgetskfiles-SxGetSKFiles.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxmurn-SxMurn.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxpartialrho-SxPartialRho.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxphonon-SxPhonon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxquamol-SxQuamol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxquamolredsubspace-SxQuamolRedSubSpace.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxslab-SxSlab.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxthermo-SxThermo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxvibrations-SxVibrations.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxwannier-SxWannier.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxwannierham-SxWannierHam.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxwavescmp-SxWavesCmp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sxwavesjoin-SxWavesJoin.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

sphinx-SPHInX.o: SPHInX.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sphinx_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sphinx-SPHInX.o -MD -MP -MF $(DEPDIR)/sphinx-SPHInX.Tpo -c -o sphinx-SPHInX.o `test -f 'SPHInX.cpp' || echo '$(srcdir)/'`SPHInX.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sphinx-SPHInX.Tpo $(DEPDIR)/sphinx-SPHInX.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SPHInX.cpp' object='sphinx-SPHInX.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sphinx_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sphinx-SPHInX.o `test -f 'SPHInX.cpp' || echo '$(srcdir)/'`SPHInX.cpp

sphinx-SPHInX.obj: SPHInX.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sphinx_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sphinx-SPHInX.obj -MD -MP -MF $(DEPDIR)/sphinx-SPHInX.Tpo -c -o sphinx-SPHInX.obj `if test -f 'SPHInX.cpp'; then $(CYGPATH_W) 'SPHInX.cpp'; else $(CYGPATH_W) '$(srcdir)/SPHInX.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sphinx-SPHInX.Tpo $(DEPDIR)/sphinx-SPHInX.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SPHInX.cpp' object='sphinx-SPHInX.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sphinx_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sphinx-SPHInX.obj `if test -f 'SPHInX.cpp'; then $(CYGPATH_W) 'SPHInX.cpp'; else $(CYGPATH_W) '$(srcdir)/SPHInX.cpp'; fi`

sxaomattb-SxAOMatTB.o: SxAOMatTB.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxaomattb_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxaomattb-SxAOMatTB.o -MD -MP -MF $(DEPDIR)/sxaomattb-SxAOMatTB.Tpo -c -o sxaomattb-SxAOMatTB.o `test -f 'SxAOMatTB.cpp' || echo '$(srcdir)/'`SxAOMatTB.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxaomattb-SxAOMatTB.Tpo $(DEPDIR)/sxaomattb-SxAOMatTB.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxAOMatTB.cpp' object='sxaomattb-SxAOMatTB.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxaomattb_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxaomattb-SxAOMatTB.o `test -f 'SxAOMatTB.cpp' || echo '$(srcdir)/'`SxAOMatTB.cpp

sxaomattb-SxAOMatTB.obj: SxAOMatTB.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxaomattb_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxaomattb-SxAOMatTB.obj -MD -MP -MF $(DEPDIR)/sxaomattb-SxAOMatTB.Tpo -c -o sxaomattb-SxAOMatTB.obj `if test -f 'SxAOMatTB.cpp'; then $(CYGPATH_W) 'SxAOMatTB.cpp'; else $(CYGPATH_W) '$(srcdir)/SxAOMatTB.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxaomattb-SxAOMatTB.Tpo $(DEPDIR)/sxaomattb-SxAOMatTB.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxAOMatTB.cpp' object='sxaomattb-SxAOMatTB.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxaomattb_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxaomattb-SxAOMatTB.obj `if test -f 'SxAOMatTB.cpp'; then $(CYGPATH_W) 'SxAOMatTB.cpp'; else $(CYGPATH_W) '$(srcdir)/SxAOMatTB.cpp'; fi`

sxdefectconc-SxDefectConc.o: SxDefectConc.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxdefectconc_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxdefectconc-SxDefectConc.o -MD -MP -MF $(DEPDIR)/sxdefectconc-SxDefectConc.Tpo -c -o sxdefectconc-SxDefectConc.o `test -f 'SxDefectConc.cpp' || echo '$(srcdir)/'`SxDefectConc.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxdefectconc-SxDefectConc.Tpo $(DEPDIR)/sxdefectconc-SxDefectConc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxDefectConc.cpp' object='sxdefectconc-SxDefectConc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxdefectconc_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxdefectconc-SxDefectConc.o `test -f 'SxDefectConc.cpp' || echo '$(srcdir)/'`SxDefectConc.cpp

sxdefectconc-SxDefectConc.obj: SxDefectConc.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxdefectconc_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxdefectconc-SxDefectConc.obj -MD -MP -MF $(DEPDIR)/sxdefectconc-SxDefectConc.Tpo -c -o sxdefectconc-SxDefectConc.obj `if test -f 'SxDefectConc.cpp'; then $(CYGPATH_W) 'SxDefectConc.cpp'; else $(CYGPATH_W) '$(srcdir)/SxDefectConc.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxdefectconc-SxDefectConc.Tpo $(DEPDIR)/sxdefectconc-SxDefectConc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxDefectConc.cpp' object='sxdefectconc-SxDefectConc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxdefectconc_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxdefectconc-SxDefectConc.obj `if test -f 'SxDefectConc.cpp'; then $(CYGPATH_W) 'SxDefectConc.cpp'; else $(CYGPATH_W) '$(srcdir)/SxDefectConc.cpp'; fi`

sxdielec-SxDielec.o: SxDielec.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxdielec_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxdielec-SxDielec.o -MD -MP -MF $(DEPDIR)/sxdielec-SxDielec.Tpo -c -o sxdielec-SxDielec.o `test -f 'SxDielec.cpp' || echo '$(srcdir)/'`SxDielec.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxdielec-SxDielec.Tpo $(DEPDIR)/sxdielec-SxDielec.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxDielec.cpp' object='sxdielec-SxDielec.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxdielec_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxdielec-SxDielec.o `test -f 'SxDielec.cpp' || echo '$(srcdir)/'`SxDielec.cpp

sxdielec-SxDielec.obj: SxDielec.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxdielec_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxdielec-SxDielec.obj -MD -MP -MF $(DEPDIR)/sxdielec-SxDielec.Tpo -c -o sxdielec-SxDielec.obj `if test -f 'SxDielec.cpp'; then $(CYGPATH_W) 'SxDielec.cpp'; else $(CYGPATH_W) '$(srcdir)/SxDielec.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxdielec-SxDielec.Tpo $(DEPDIR)/sxdielec-SxDielec.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxDielec.cpp' object='sxdielec-SxDielec.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxdielec_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxdielec-SxDielec.obj `if test -f 'SxDielec.cpp'; then $(CYGPATH_W) 'SxDielec.cpp'; else $(CYGPATH_W) '$(srcdir)/SxDielec.cpp'; fi`

sxdynmat-SxDynMat.o: SxDynMat.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxdynmat_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxdynmat-SxDynMat.o -MD -MP -MF $(DEPDIR)/sxdynmat-SxDynMat.Tpo -c -o sxdynmat-SxDynMat.o `test -f 'SxDynMat.cpp' || echo '$(srcdir)/'`SxDynMat.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxdynmat-SxDynMat.Tpo $(DEPDIR)/sxdynmat-SxDynMat.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxDynMat.cpp' object='sxdynmat-SxDynMat.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxdynmat_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxdynmat-SxDynMat.o `test -f 'SxDynMat.cpp' || echo '$(srcdir)/'`SxDynMat.cpp

sxdynmat-SxDynMat.obj: SxDynMat.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxdynmat_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxdynmat-SxDynMat.obj -MD -MP -MF $(DEPDIR)/sxdynmat-SxDynMat.Tpo -c -o sxdynmat-SxDynMat.obj `if test -f 'SxDynMat.cpp'; then $(CYGPATH_W) 'SxDynMat.cpp'; else $(CYGPATH_W) '$(srcdir)/SxDynMat.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxdynmat-SxDynMat.Tpo $(DEPDIR)/sxdynmat-SxDynMat.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxDynMat.cpp' object='sxdynmat-SxDynMat.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxdynmat_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxdynmat-SxDynMat.obj `if test -f 'SxDynMat.cpp'; then $(CYGPATH_W) 'SxDynMat.cpp'; else $(CYGPATH_W) '$(srcdir)/SxDynMat.cpp'; fi`

sxeprhyper-SxEPRHyper.o: SxEPRHyper.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxeprhyper_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxeprhyper-SxEPRHyper.o -MD -MP -MF $(DEPDIR)/sxeprhyper-SxEPRHyper.Tpo -c -o sxeprhyper-SxEPRHyper.o `test -f 'SxEPRHyper.cpp' || echo '$(srcdir)/'`SxEPRHyper.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxeprhyper-SxEPRHyper.Tpo $(DEPDIR)/sxeprhyper-SxEPRHyper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxEPRHyper.cpp' object='sxeprhyper-SxEPRHyper.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxeprhyper_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxeprhyper-SxEPRHyper.o `test -f 'SxEPRHyper.cpp' || echo '$(srcdir)/'`SxEPRHyper.cpp

sxeprhyper-SxEPRHyper.obj: SxEPRHyper.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxeprhyper_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxeprhyper-SxEPRHyper.obj -MD -MP -MF $(DEPDIR)/sxeprhyper-SxEPRHyper.Tpo -c -o sxeprhyper-SxEPRHyper.obj `if test -f 'SxEPRHyper.cpp'; then $(CYGPATH_W) 'SxEPRHyper.cpp'; else $(CYGPATH_W) '$(srcdir)/SxEPRHyper.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxeprhyper-SxEPRHyper.Tpo $(DEPDIR)/sxeprhyper-SxEPRHyper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxEPRHyper.cpp' object='sxeprhyper-SxEPRHyper.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxeprhyper_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxeprhyper-SxEPRHyper.obj `if test -f 'SxEPRHyper.cpp'; then $(CYGPATH_W) 'SxEPRHyper.cpp'; else $(CYGPATH_W) '$(srcdir)/SxEPRHyper.cpp'; fi`

sxgetskfiles-SxGetSKFiles.o: SxGetSKFiles.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxgetskfiles_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxgetskfiles-SxGetSKFiles.o -MD -MP -MF $(DEPDIR)/sxgetskfiles-SxGetSKFiles.Tpo -c -o sxgetskfiles-SxGetSKFiles.o `test -f 'SxGetSKFiles.cpp' || echo '$(srcdir)/'`SxGetSKFiles.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxgetskfiles-SxGetSKFiles.Tpo $(DEPDIR)/sxgetskfiles-SxGetSKFiles.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxGetSKFiles.cpp' object='sxgetskfiles-SxGetSKFiles.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxgetskfiles_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxgetskfiles-SxGetSKFiles.o `test -f 'SxGetSKFiles.cpp' || echo '$(srcdir)/'`SxGetSKFiles.cpp

sxgetskfiles-SxGetSKFiles.obj: SxGetSKFiles.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxgetskfiles_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxgetskfiles-SxGetSKFiles.obj -MD -MP -MF $(DEPDIR)/sxgetskfiles-SxGetSKFiles.Tpo -c -o sxgetskfiles-SxGetSKFiles.obj `if test -f 'SxGetSKFiles.cpp'; then $(CYGPATH_W) 'SxGetSKFiles.cpp'; else $(CYGPATH_W) '$(srcdir)/SxGetSKFiles.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxgetskfiles-SxGetSKFiles.Tpo $(DEPDIR)/sxgetskfiles-SxGetSKFiles.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxGetSKFiles.cpp' object='sxgetskfiles-SxGetSKFiles.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxgetskfiles_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxgetskfiles-SxGetSKFiles.obj `if test -f 'SxGetSKFiles.cpp'; then $(CYGPATH_W) 'SxGetSKFiles.cpp'; else $(CYGPATH_W) '$(srcdir)/SxGetSKFiles.cpp'; fi`

sxmurn-SxMurn.o: SxMurn.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxmurn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxmurn-SxMurn.o -MD -MP -MF $(DEPDIR)/sxmurn-SxMurn.Tpo -c -o sxmurn-SxMurn.o `test -f 'SxMurn.cpp' || echo '$(srcdir)/'`SxMurn.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxmurn-SxMurn.Tpo $(DEPDIR)/sxmurn-SxMurn.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxMurn.cpp' object='sxmurn-SxMurn.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxmurn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxmurn-SxMurn.o `test -f 'SxMurn.cpp' || echo '$(srcdir)/'`SxMurn.cpp

sxmurn-SxMurn.obj: SxMurn.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxmurn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxmurn-SxMurn.obj -MD -MP -MF $(DEPDIR)/sxmurn-SxMurn.Tpo -c -o sxmurn-SxMurn.obj `if test -f 'SxMurn.cpp'; then $(CYGPATH_W) 'SxMurn.cpp'; else $(CYGPATH_W) '$(srcdir)/SxMurn.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxmurn-SxMurn.Tpo $(DEPDIR)/sxmurn-SxMurn.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxMurn.cpp' object='sxmurn-SxMurn.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxmurn_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxmurn-SxMurn.obj `if test -f 'SxMurn.cpp'; then $(CYGPATH_W) 'SxMurn.cpp'; else $(CYGPATH_W) '$(srcdir)/SxMurn.cpp'; fi`

sxpartialrho-SxPartialRho.o: SxPartialRho.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxpartialrho_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxpartialrho-SxPartialRho.o -MD -MP -MF $(DEPDIR)/sxpartialrho-SxPartialRho.Tpo -c -o sxpartialrho-SxPartialRho.o `test -f 'SxPartialRho.cpp' || echo '$(srcdir)/'`SxPartialRho.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxpartialrho-SxPartialRho.Tpo $(DEPDIR)/sxpartialrho-SxPartialRho.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxPartialRho.cpp' object='sxpartialrho-SxPartialRho.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxpartialrho_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxpartialrho-SxPartialRho.o `test -f 'SxPartialRho.cpp' || echo '$(srcdir)/'`SxPartialRho.cpp

sxpartialrho-SxPartialRho.obj: SxPartialRho.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxpartialrho_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxpartialrho-SxPartialRho.obj -MD -MP -MF $(DEPDIR)/sxpartialrho-SxPartialRho.Tpo -c -o sxpartialrho-SxPartialRho.obj `if test -f 'SxPartialRho.cpp'; then $(CYGPATH_W) 'SxPartialRho.cpp'; else $(CYGPATH_W) '$(srcdir)/SxPartialRho.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxpartialrho-SxPartialRho.Tpo $(DEPDIR)/sxpartialrho-SxPartialRho.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxPartialRho.cpp' object='sxpartialrho-SxPartialRho.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxpartialrho_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxpartialrho-SxPartialRho.obj `if test -f 'SxPartialRho.cpp'; then $(CYGPATH_W) 'SxPartialRho.cpp'; else $(CYGPATH_W) '$(srcdir)/SxPartialRho.cpp'; fi`

sxphonon-SxPhonon.o: SxPhonon.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxphonon_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxphonon-SxPhonon.o -MD -MP -MF $(DEPDIR)/sxphonon-SxPhonon.Tpo -c -o sxphonon-SxPhonon.o `test -f 'SxPhonon.cpp' || echo '$(srcdir)/'`SxPhonon.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxphonon-SxPhonon.Tpo $(DEPDIR)/sxphonon-SxPhonon.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxPhonon.cpp' object='sxphonon-SxPhonon.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxphonon_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxphonon-SxPhonon.o `test -f 'SxPhonon.cpp' || echo '$(srcdir)/'`SxPhonon.cpp

sxphonon-SxPhonon.obj: SxPhonon.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxphonon_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxphonon-SxPhonon.obj -MD -MP -MF $(DEPDIR)/sxphonon-SxPhonon.Tpo -c -o sxphonon-SxPhonon.obj `if test -f 'SxPhonon.cpp'; then $(CYGPATH_W) 'SxPhonon.cpp'; else $(CYGPATH_W) '$(srcdir)/SxPhonon.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxphonon-SxPhonon.Tpo $(DEPDIR)/sxphonon-SxPhonon.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxPhonon.cpp' object='sxphonon-SxPhonon.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxphonon_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxphonon-SxPhonon.obj `if test -f 'SxPhonon.cpp'; then $(CYGPATH_W) 'SxPhonon.cpp'; else $(CYGPATH_W) '$(srcdir)/SxPhonon.cpp'; fi`

sxquamol-SxQuamol.o: SxQuamol.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxquamol_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxquamol-SxQuamol.o -MD -MP -MF $(DEPDIR)/sxquamol-SxQuamol.Tpo -c -o sxquamol-SxQuamol.o `test -f 'SxQuamol.cpp' || echo '$(srcdir)/'`SxQuamol.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxquamol-SxQuamol.Tpo $(DEPDIR)/sxquamol-SxQuamol.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxQuamol.cpp' object='sxquamol-SxQuamol.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxquamol_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxquamol-SxQuamol.o `test -f 'SxQuamol.cpp' || echo '$(srcdir)/'`SxQuamol.cpp

sxquamol-SxQuamol.obj: SxQuamol.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxquamol_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxquamol-SxQuamol.obj -MD -MP -MF $(DEPDIR)/sxquamol-SxQuamol.Tpo -c -o sxquamol-SxQuamol.obj `if test -f 'SxQuamol.cpp'; then $(CYGPATH_W) 'SxQuamol.cpp'; else $(CYGPATH_W) '$(srcdir)/SxQuamol.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxquamol-SxQuamol.Tpo $(DEPDIR)/sxquamol-SxQuamol.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxQuamol.cpp' object='sxquamol-SxQuamol.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxquamol_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxquamol-SxQuamol.obj `if test -f 'SxQuamol.cpp'; then $(CYGPATH_W) 'SxQuamol.cpp'; else $(CYGPATH_W) '$(srcdir)/SxQuamol.cpp'; fi`

sxquamolredsubspace-SxQuamolRedSubSpace.o: SxQuamolRedSubSpace.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxquamolredsubspace_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxquamolredsubspace-SxQuamolRedSubSpace.o -MD -MP -MF $(DEPDIR)/sxquamolredsubspace-SxQuamolRedSubSpace.Tpo -c -o sxquamolredsubspace-SxQuamolRedSubSpace.o `test -f 'SxQuamolRedSubSpace.cpp' || echo '$(srcdir)/'`SxQuamolRedSubSpace.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxquamolredsubspace-SxQuamolRedSubSpace.Tpo $(DEPDIR)/sxquamolredsubspace-SxQuamolRedSubSpace.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxQuamolRedSubSpace.cpp' object='sxquamolredsubspace-SxQuamolRedSubSpace.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxquamolredsubspace_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxquamolredsubspace-SxQuamolRedSubSpace.o `test -f 'SxQuamolRedSubSpace.cpp' || echo '$(srcdir)/'`SxQuamolRedSubSpace.cpp

sxquamolredsubspace-SxQuamolRedSubSpace.obj: SxQuamolRedSubSpace.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxquamolredsubspace_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxquamolredsubspace-SxQuamolRedSubSpace.obj -MD -MP -MF $(DEPDIR)/sxquamolredsubspace-SxQuamolRedSubSpace.Tpo -c -o sxquamolredsubspace-SxQuamolRedSubSpace.obj `if test -f 'SxQuamolRedSubSpace.cpp'; then $(CYGPATH_W) 'SxQuamolRedSubSpace.cpp'; else $(CYGPATH_W) '$(srcdir)/SxQuamolRedSubSpace.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxquamolredsubspace-SxQuamolRedSubSpace.Tpo $(DEPDIR)/sxquamolredsubspace-SxQuamolRedSubSpace.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxQuamolRedSubSpace.cpp' object='sxquamolredsubspace-SxQuamolRedSubSpace.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxquamolredsubspace_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxquamolredsubspace-SxQuamolRedSubSpace.obj `if test -f 'SxQuamolRedSubSpace.cpp'; then $(CYGPATH_W) 'SxQuamolRedSubSpace.cpp'; else $(CYGPATH_W) '$(srcdir)/SxQuamolRedSubSpace.cpp'; fi`

sxslab-SxSlab.o: SxSlab.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxslab_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxslab-SxSlab.o -MD -MP -MF $(DEPDIR)/sxslab-SxSlab.Tpo -c -o sxslab-SxSlab.o `test -f 'SxSlab.cpp' || echo '$(srcdir)/'`SxSlab.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxslab-SxSlab.Tpo $(DEPDIR)/sxslab-SxSlab.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxSlab.cpp' object='sxslab-SxSlab.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxslab_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxslab-SxSlab.o `test -f 'SxSlab.cpp' || echo '$(srcdir)/'`SxSlab.cpp

sxslab-SxSlab.obj: SxSlab.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxslab_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxslab-SxSlab.obj -MD -MP -MF $(DEPDIR)/sxslab-SxSlab.Tpo -c -o sxslab-SxSlab.obj `if test -f 'SxSlab.cpp'; then $(CYGPATH_W) 'SxSlab.cpp'; else $(CYGPATH_W) '$(srcdir)/SxSlab.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxslab-SxSlab.Tpo $(DEPDIR)/sxslab-SxSlab.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxSlab.cpp' object='sxslab-SxSlab.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxslab_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxslab-SxSlab.obj `if test -f 'SxSlab.cpp'; then $(CYGPATH_W) 'SxSlab.cpp'; else $(CYGPATH_W) '$(srcdir)/SxSlab.cpp'; fi`

sxthermo-SxThermo.o: SxThermo.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxthermo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxthermo-SxThermo.o -MD -MP -MF $(DEPDIR)/sxthermo-SxThermo.Tpo -c -o sxthermo-SxThermo.o `test -f 'SxThermo.cpp' || echo '$(srcdir)/'`SxThermo.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxthermo-SxThermo.Tpo $(DEPDIR)/sxthermo-SxThermo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxThermo.cpp' object='sxthermo-SxThermo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxthermo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxthermo-SxThermo.o `test -f 'SxThermo.cpp' || echo '$(srcdir)/'`SxThermo.cpp

sxthermo-SxThermo.obj: SxThermo.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxthermo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxthermo-SxThermo.obj -MD -MP -MF $(DEPDIR)/sxthermo-SxThermo.Tpo -c -o sxthermo-SxThermo.obj `if test -f 'SxThermo.cpp'; then $(CYGPATH_W) 'SxThermo.cpp'; else $(CYGPATH_W) '$(srcdir)/SxThermo.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxthermo-SxThermo.Tpo $(DEPDIR)/sxthermo-SxThermo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxThermo.cpp' object='sxthermo-SxThermo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxthermo_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxthermo-SxThermo.obj `if test -f 'SxThermo.cpp'; then $(CYGPATH_W) 'SxThermo.cpp'; else $(CYGPATH_W) '$(srcdir)/SxThermo.cpp'; fi`

sxvibrations-SxVibrations.o: SxVibrations.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxvibrations_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxvibrations-SxVibrations.o -MD -MP -MF $(DEPDIR)/sxvibrations-SxVibrations.Tpo -c -o sxvibrations-SxVibrations.o `test -f 'SxVibrations.cpp' || echo '$(srcdir)/'`SxVibrations.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxvibrations-SxVibrations.Tpo $(DEPDIR)/sxvibrations-SxVibrations.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxVibrations.cpp' object='sxvibrations-SxVibrations.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxvibrations_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxvibrations-SxVibrations.o `test -f 'SxVibrations.cpp' || echo '$(srcdir)/'`SxVibrations.cpp

sxvibrations-SxVibrations.obj: SxVibrations.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxvibrations_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxvibrations-SxVibrations.obj -MD -MP -MF $(DEPDIR)/sxvibrations-SxVibrations.Tpo -c -o sxvibrations-SxVibrations.obj `if test -f 'SxVibrations.cpp'; then $(CYGPATH_W) 'SxVibrations.cpp'; else $(CYGPATH_W) '$(srcdir)/SxVibrations.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxvibrations-SxVibrations.Tpo $(DEPDIR)/sxvibrations-SxVibrations.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxVibrations.cpp' object='sxvibrations-SxVibrations.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxvibrations_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxvibrations-SxVibrations.obj `if test -f 'SxVibrations.cpp'; then $(CYGPATH_W) 'SxVibrations.cpp'; else $(CYGPATH_W) '$(srcdir)/SxVibrations.cpp'; fi`

sxwannier-SxWannier.o: SxWannier.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxwannier_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxwannier-SxWannier.o -MD -MP -MF $(DEPDIR)/sxwannier-SxWannier.Tpo -c -o sxwannier-SxWannier.o `test -f 'SxWannier.cpp' || echo '$(srcdir)/'`SxWannier.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxwannier-SxWannier.Tpo $(DEPDIR)/sxwannier-SxWannier.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxWannier.cpp' object='sxwannier-SxWannier.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxwannier_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxwannier-SxWannier.o `test -f 'SxWannier.cpp' || echo '$(srcdir)/'`SxWannier.cpp

sxwannier-SxWannier.obj: SxWannier.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxwannier_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxwannier-SxWannier.obj -MD -MP -MF $(DEPDIR)/sxwannier-SxWannier.Tpo -c -o sxwannier-SxWannier.obj `if test -f 'SxWannier.cpp'; then $(CYGPATH_W) 'SxWannier.cpp'; else $(CYGPATH_W) '$(srcdir)/SxWannier.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxwannier-SxWannier.Tpo $(DEPDIR)/sxwannier-SxWannier.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxWannier.cpp' object='sxwannier-SxWannier.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxwannier_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxwannier-SxWannier.obj `if test -f 'SxWannier.cpp'; then $(CYGPATH_W) 'SxWannier.cpp'; else $(CYGPATH_W) '$(srcdir)/SxWannier.cpp'; fi`

sxwannierham-SxWannierHam.o: SxWannierHam.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxwannierham_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxwannierham-SxWannierHam.o -MD -MP -MF $(DEPDIR)/sxwannierham-SxWannierHam.Tpo -c -o sxwannierham-SxWannierHam.o `test -f 'SxWannierHam.cpp' || echo '$(srcdir)/'`SxWannierHam.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxwannierham-SxWannierHam.Tpo $(DEPDIR)/sxwannierham-SxWannierHam.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxWannierHam.cpp' object='sxwannierham-SxWannierHam.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxwannierham_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxwannierham-SxWannierHam.o `test -f 'SxWannierHam.cpp' || echo '$(srcdir)/'`SxWannierHam.cpp

sxwannierham-SxWannierHam.obj: SxWannierHam.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxwannierham_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxwannierham-SxWannierHam.obj -MD -MP -MF $(DEPDIR)/sxwannierham-SxWannierHam.Tpo -c -o sxwannierham-SxWannierHam.obj `if test -f 'SxWannierHam.cpp'; then $(CYGPATH_W) 'SxWannierHam.cpp'; else $(CYGPATH_W) '$(srcdir)/SxWannierHam.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxwannierham-SxWannierHam.Tpo $(DEPDIR)/sxwannierham-SxWannierHam.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxWannierHam.cpp' object='sxwannierham-SxWannierHam.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxwannierham_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxwannierham-SxWannierHam.obj `if test -f 'SxWannierHam.cpp'; then $(CYGPATH_W) 'SxWannierHam.cpp'; else $(CYGPATH_W) '$(srcdir)/SxWannierHam.cpp'; fi`

sxwavescmp-SxWavesCmp.o: SxWavesCmp.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxwavescmp_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxwavescmp-SxWavesCmp.o -MD -MP -MF $(DEPDIR)/sxwavescmp-SxWavesCmp.Tpo -c -o sxwavescmp-SxWavesCmp.o `test -f 'SxWavesCmp.cpp' || echo '$(srcdir)/'`SxWavesCmp.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxwavescmp-SxWavesCmp.Tpo $(DEPDIR)/sxwavescmp-SxWavesCmp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxWavesCmp.cpp' object='sxwavescmp-SxWavesCmp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxwavescmp_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxwavescmp-SxWavesCmp.o `test -f 'SxWavesCmp.cpp' || echo '$(srcdir)/'`SxWavesCmp.cpp

sxwavescmp-SxWavesCmp.obj: SxWavesCmp.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxwavescmp_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxwavescmp-SxWavesCmp.obj -MD -MP -MF $(DEPDIR)/sxwavescmp-SxWavesCmp.Tpo -c -o sxwavescmp-SxWavesCmp.obj `if test -f 'SxWavesCmp.cpp'; then $(CYGPATH_W) 'SxWavesCmp.cpp'; else $(CYGPATH_W) '$(srcdir)/SxWavesCmp.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxwavescmp-SxWavesCmp.Tpo $(DEPDIR)/sxwavescmp-SxWavesCmp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxWavesCmp.cpp' object='sxwavescmp-SxWavesCmp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxwavescmp_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxwavescmp-SxWavesCmp.obj `if test -f 'SxWavesCmp.cpp'; then $(CYGPATH_W) 'SxWavesCmp.cpp'; else $(CYGPATH_W) '$(srcdir)/SxWavesCmp.cpp'; fi`

sxwavesjoin-SxWavesJoin.o: SxWavesJoin.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxwavesjoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxwavesjoin-SxWavesJoin.o -MD -MP -MF $(DEPDIR)/sxwavesjoin-SxWavesJoin.Tpo -c -o sxwavesjoin-SxWavesJoin.o `test -f 'SxWavesJoin.cpp' || echo '$(srcdir)/'`SxWavesJoin.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxwavesjoin-SxWavesJoin.Tpo $(DEPDIR)/sxwavesjoin-SxWavesJoin.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxWavesJoin.cpp' object='sxwavesjoin-SxWavesJoin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxwavesjoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxwavesjoin-SxWavesJoin.o `test -f 'SxWavesJoin.cpp' || echo '$(srcdir)/'`SxWavesJoin.cpp

sxwavesjoin-SxWavesJoin.obj: SxWavesJoin.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxwavesjoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sxwavesjoin-SxWavesJoin.obj -MD -MP -MF $(DEPDIR)/sxwavesjoin-SxWavesJoin.Tpo -c -o sxwavesjoin-SxWavesJoin.obj `if test -f 'SxWavesJoin.cpp'; then $(CYGPATH_W) 'SxWavesJoin.cpp'; else $(CYGPATH_W) '$(srcdir)/SxWavesJoin.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sxwavesjoin-SxWavesJoin.Tpo $(DEPDIR)/sxwavesjoin-SxWavesJoin.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SxWavesJoin.cpp' object='sxwavesjoin-SxWavesJoin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sxwavesjoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sxwavesjoin-SxWavesJoin.obj `if test -f 'SxWavesJoin.cpp'; then $(CYGPATH_W) 'SxWavesJoin.cpp'; else $(CYGPATH_W) '$(srcdir)/SxWavesJoin.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-scriptsDATA: $(scripts_DATA)
	@$(NORMAL_INSTALL)
	@list='$(scripts_DATA)'; test -n "$(scriptsdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(scriptsdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(scriptsdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(scriptsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(scriptsdir)" || exit $$?; \
	done

uninstall-scriptsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(scripts_DATA)'; test -n "$(scriptsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(scriptsdir)'; $(am__uninstall_files_from_dir)
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(SCRIPTS) $(DATA) \
		$(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(scriptsdir)" "$(DESTDIR)$(scriptsdir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-includeHEADERS install-scriptsDATA \
	install-scriptsSCRIPTS

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES uninstall-scriptsDATA \
	uninstall-scriptsSCRIPTS

.MAKE: $(am__recursive_targets) install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-am clean clean-binPROGRAMS clean-generic \
	clean-libLTLIBRARIES clean-libtool cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-scriptsDATA \
	install-scriptsSCRIPTS install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-includeHEADERS uninstall-libLTLIBRARIES \
	uninstall-scriptsDATA uninstall-scriptsSCRIPTS

.PRECIOUS: Makefile


c: clean

ca: clean distclean

filelist: filelist_unix

filelist_unix:
	@echo "Updating UNIX Makefiles..."
	@a=$(UNIX_DEPDIRS) && b=$(UNIX_NUMLIBS) \
     && $(SXACCELERATE_SRC)/system/sxmkmakeinc.sh   \
         $(srcdir) $(NAME) ./Make-inc.am $(MODE) "$$a" "$$b"

msfilelist:
	@echo "Updating MSVC Project files in "`pwd`"..."
	@a=$(MSVC_DEPDIRS) && b=$(MSVC_NUMLIBS) \
     && cd $(srcdir) && $(SXACCELERATE)/bin/sxmsvcproj   \
         --name $(NAME) \
         --depth $(top_builddir) \
         --srctop $(top_srcdir) \
         --sxaccltop $(top_srcdir)/../sxaccelerate --mode $(MODE) \
         --deps "$$a,$$b"
sln:
	@echo "Project (\"{`$(getguid) $(NAME) slnFolder`}\") = \"$(NAME)\", \"$(subdir)\\$(NAME).vcproj\", \"{`$(getguid) $(NAME) slnProj`}\"" >> $(OUT)
	@echo "   ProjectSection(ProjectDependencies) = postProject" >> $(OUT)
	@for d in $(DEP_DIRS); do  \
      echo "      {`$(getguid) $$d slnDepDir`} = {`$(getguid) $$d slnDepDir`}" >> $(OUT); \
    done
	@echo "   EndProjectSection" >> $(OUT)
	@echo "EndProject" >> $(OUT)

unixdepdirs_:
	@echo $(SX_DEPLIBS)

unixdepdirs:
	@$(MAKE) @MAKE_SILENT_ARGS@\
            SXNONSTD=\@SXACCELERATE_SRC\@/nonstd \
            SXUTIL='\@SXACCELERATE_SRC\@/util \@SXACCELERATE_BUILD\@/util' \
            SXMATH=\@SXACCELERATE_SRC\@/math \
            SXFS=\@SXACCELERATE_SRC\@/fs \
            SXIPC=\@SXACCELERATE_SRC\@/ipc \
            SXIO='\@SXACCELERATE_SRC\@/io \@SXACCELERATE_BUILD\@/io' \
            SXMPI='\@SXACCELERATE_SRC\@/mpi \@SXACCELERATE_BUILD\@/mpi' \
            SXDIRAC=dirac \
            SXGEOM=geom \
            SXDFT=dft \
            SXEXX=exx \
            SXCLASSIC=classic \
            SXSTRUCT=struct \
            SXEXT=add-ons \
            unixdepdirs_

unixnumlibs_:
	@echo $(NUM_DEPLIBS)

unixnumlibs:
	@$(MAKE) @MAKE_SILENT_ARGS@\
            FFT="\@SX_FFT_LIBS\@" \
            BLAS="\@SX_BLAS_LIBS\@" \
            REGEX="" \
            NETCDF="\@SX_NETCDF_LIBS\@" \
            SHORTCUT="" \
            unixnumlibs_

msvcdepdirs_:
	@echo $(SX_DEPLIBS)

msvcdepdirs:
	@$(MAKE) @MAKE_SILENT_ARGS@\
            SXNONSTD=../../sxaccelerate/src/nonstd \
            SXUTIL=../../sxaccelerate/src/util \
            SXMATH=../../sxaccelerate/src/math \
            SXFS=../../sxaccelerate/src/fs \
            SXIPC=../../sxaccelerate/src/ipc \
            SXIO=../../sxaccelerate/src/io \
            SXMPI=../sxaccelerate/src/mpi \
            SXDIRAC=dirac \
            SXGEOM=geom \
            SXDFT=dft \
            SXEXX=exx \
            SXCLASSIC=classic \
            SXSTRUCT=struct \
            SXEXT=add-ons \
            msvcdepdirs_

msvcnumlibs_:
	@echo $(NUM_DEPLIBS)

msvcnumlibs:
	@$(MAKE) @MAKE_SILENT_ARGS@\
            FFT="" \
            BLAS="mkl_intel_c_dll.lib\;mkl_sequential_dll.lib\;mkl_core_dll.lib"\
            REGEX=gnurx.lib \
            NETCDF=netcdf.lib \
            SHORTCUT= \
            msvcnumlibs_

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
