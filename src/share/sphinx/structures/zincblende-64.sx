// --------------------------------------------------------------------------
// SFHIngX  -  Zinkblend structure
//             64 atom cell
//             generated by [2x2x2] folding of zincblend-8.sx
//
// Sixten Boeck, boeck@fhi-berlin.mpg.de
// 02/24/2003
//
// --------------------------------------------------------------------------
// Arguments:
//    aLat                lattice parameter a [Bohr]
//    species_1           filename of 1st species file
//    species_2           filename of 2nd species file
// --------------------------------------------------------------------------


needs aLat;
needs species_1;
needs species_2;

global aLat;

include <structures/sc.sx>;


species {
   include species_1;
   atom { coords = 1/2 * [0 + 0,   0 + 0,   0 + 0  ]; relative; }
   atom { coords = 1/2 * [0 + 0,   0 + 1/2, 0 + 1/2]; relative; }
   atom { coords = 1/2 * [0 + 1/2, 0 + 0,   0 + 1/2]; relative; }
   atom { coords = 1/2 * [0 + 1/2, 0 + 1/2, 0 + 0  ]; relative; }

   atom { coords = 1/2 * [1 + 0,   0 + 0,   0 + 0  ]; relative; }
   atom { coords = 1/2 * [1 + 0,   0 + 1/2, 0 + 1/2]; relative; }
   atom { coords = 1/2 * [1 + 1/2, 0 + 0,   0 + 1/2]; relative; }
   atom { coords = 1/2 * [1 + 1/2, 0 + 1/2, 0 + 0  ]; relative; }

   atom { coords = 1/2 * [0 + 0,   1 + 0,   0 + 0  ]; relative; }
   atom { coords = 1/2 * [0 + 0,   1 + 1/2, 0 + 1/2]; relative; }
   atom { coords = 1/2 * [0 + 1/2, 1 + 0,   0 + 1/2]; relative; }
   atom { coords = 1/2 * [0 + 1/2, 1 + 1/2, 0 + 0  ]; relative; }

   atom { coords = 1/2 * [1 + 0,   1 + 0,   0 + 0  ]; relative; }
   atom { coords = 1/2 * [1 + 0,   1 + 1/2, 0 + 1/2]; relative; }
   atom { coords = 1/2 * [1 + 1/2, 1 + 0,   0 + 1/2]; relative; }
   atom { coords = 1/2 * [1 + 1/2, 1 + 1/2, 0 + 0  ]; relative; }

   atom { coords = 1/2 * [0 + 0,   0 + 0,   1 + 0  ]; relative; }
   atom { coords = 1/2 * [0 + 0,   0 + 1/2, 1 + 1/2]; relative; }
   atom { coords = 1/2 * [0 + 1/2, 0 + 0,   1 + 1/2]; relative; }
   atom { coords = 1/2 * [0 + 1/2, 0 + 1/2, 1 + 0  ]; relative; }

   atom { coords = 1/2 * [1 + 0,   0 + 0,   1 + 0  ]; relative; }
   atom { coords = 1/2 * [1 + 0,   0 + 1/2, 1 + 1/2]; relative; }
   atom { coords = 1/2 * [1 + 1/2, 0 + 0,   1 + 1/2]; relative; }
   atom { coords = 1/2 * [1 + 1/2, 0 + 1/2, 1 + 0  ]; relative; }

   atom { coords = 1/2 * [0 + 0,   1 + 0,   1 + 0  ]; relative; }
   atom { coords = 1/2 * [0 + 0,   1 + 1/2, 1 + 1/2]; relative; }
   atom { coords = 1/2 * [0 + 1/2, 1 + 0,   1 + 1/2]; relative; }
   atom { coords = 1/2 * [0 + 1/2, 1 + 1/2, 1 + 0  ]; relative; }

   atom { coords = 1/2 * [1 + 0,   1 + 0,   1 + 0  ]; relative; }
   atom { coords = 1/2 * [1 + 0,   1 + 1/2, 1 + 1/2]; relative; }
   atom { coords = 1/2 * [1 + 1/2, 1 + 0,   1 + 1/2]; relative; }
   atom { coords = 1/2 * [1 + 1/2, 1 + 1/2, 1 + 0  ]; relative; }
}


species {
   include species_2;
   atom { coords = 1/2 * [0 + 1/4, 0 + 1/4, 0 + 1/4]; relative; }
   atom { coords = 1/2 * [0 + 1/4, 0 + 3/4, 0 + 3/4]; relative; }
   atom { coords = 1/2 * [0 + 3/4, 0 + 1/4, 0 + 3/4]; relative; }
   atom { coords = 1/2 * [0 + 3/4, 0 + 3/4, 0 + 1/4]; relative; }

   atom { coords = 1/2 * [1 + 1/4, 0 + 1/4, 0 + 1/4]; relative; }
   atom { coords = 1/2 * [1 + 1/4, 0 + 3/4, 0 + 3/4]; relative; }
   atom { coords = 1/2 * [1 + 3/4, 0 + 1/4, 0 + 3/4]; relative; }
   atom { coords = 1/2 * [1 + 3/4, 0 + 3/4, 0 + 1/4]; relative; }

   atom { coords = 1/2 * [0 + 1/4, 1 + 1/4, 0 + 1/4]; relative; }
   atom { coords = 1/2 * [0 + 1/4, 1 + 3/4, 0 + 3/4]; relative; }
   atom { coords = 1/2 * [0 + 3/4, 1 + 1/4, 0 + 3/4]; relative; }
   atom { coords = 1/2 * [0 + 3/4, 1 + 3/4, 0 + 1/4]; relative; }

   atom { coords = 1/2 * [1 + 1/4, 1 + 1/4, 0 + 1/4]; relative; }
   atom { coords = 1/2 * [1 + 1/4, 1 + 3/4, 0 + 3/4]; relative; }
   atom { coords = 1/2 * [1 + 3/4, 1 + 1/4, 0 + 3/4]; relative; }
   atom { coords = 1/2 * [1 + 3/4, 1 + 3/4, 0 + 1/4]; relative; }

   atom { coords = 1/2 * [0 + 1/4, 0 + 1/4, 1 + 1/4]; relative; }
   atom { coords = 1/2 * [0 + 1/4, 0 + 3/4, 1 + 3/4]; relative; }
   atom { coords = 1/2 * [0 + 3/4, 0 + 1/4, 1 + 3/4]; relative; }
   atom { coords = 1/2 * [0 + 3/4, 0 + 3/4, 1 + 1/4]; relative; }

   atom { coords = 1/2 * [1 + 1/4, 0 + 1/4, 1 + 1/4]; relative; }
   atom { coords = 1/2 * [1 + 1/4, 0 + 3/4, 1 + 3/4]; relative; }
   atom { coords = 1/2 * [1 + 3/4, 0 + 1/4, 1 + 3/4]; relative; }
   atom { coords = 1/2 * [1 + 3/4, 0 + 3/4, 1 + 1/4]; relative; }

   atom { coords = 1/2 * [0 + 1/4, 1 + 1/4, 1 + 1/4]; relative; }
   atom { coords = 1/2 * [0 + 1/4, 1 + 3/4, 1 + 3/4]; relative; }
   atom { coords = 1/2 * [0 + 3/4, 1 + 1/4, 1 + 3/4]; relative; }
   atom { coords = 1/2 * [0 + 3/4, 1 + 3/4, 1 + 1/4]; relative; }

   atom { coords = 1/2 * [1 + 1/4, 1 + 1/4, 1 + 1/4]; relative; }
   atom { coords = 1/2 * [1 + 1/4, 1 + 3/4, 1 + 3/4]; relative; }
   atom { coords = 1/2 * [1 + 3/4, 1 + 1/4, 1 + 3/4]; relative; }
   atom { coords = 1/2 * [1 + 3/4, 1 + 3/4, 1 + 1/4]; relative; }
}
